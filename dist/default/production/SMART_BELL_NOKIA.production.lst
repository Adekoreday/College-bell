

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Oct 30 14:14:49 2018

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x7E,2
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126                           
   127                           	psect	idataBANK0
   128  1D4A                     __pidataBANK0:	
   129                           
   130                           ;initializer for main@F1566
   131  1D4A  3430               	retlw	48
   132  1D4B  3430               	retlw	48
   133  1D4C  343A               	retlw	58
   134  1D4D  3430               	retlw	48
   135  1D4E  3430               	retlw	48
   136  1D4F  343A               	retlw	58
   137  1D50  3430               	retlw	48
   138  1D51  3430               	retlw	48
   139  1D52  3400               	retlw	0
   140                           
   141                           	psect	idataBANK1
   142  0003                     __pidataBANK1:	
   143                           
   144                           ;initializer for _keypadMap
   145  0003  3400               	retlw	0
   146  0004  3401               	retlw	1
   147  0005  3402               	retlw	2
   148  0006  3403               	retlw	3
   149  0007  3404               	retlw	4
   150  0008  3405               	retlw	5
   151  0009  3406               	retlw	6
   152  000A  3407               	retlw	7
   153  000B  3408               	retlw	8
   154  000C  3409               	retlw	9
   155                           
   156                           ;initializer for main@F1564
   157  000D  3430               	retlw	48
   158  000E  3430               	retlw	48
   159  000F  343A               	retlw	58
   160  0010  3430               	retlw	48
   161  0011  3430               	retlw	48
   162  0012  343A               	retlw	58
   163  0013  3430               	retlw	48
   164  0014  3430               	retlw	48
   165  0015  3400               	retlw	0
   166                           
   167                           ;initializer for main@F1571
   168  0016  340D               	retlw	13
   169  0017  340E               	retlw	14
   170  0018  340F               	retlw	15
   171  0019  3410               	retlw	16
   172                           
   173                           ;initializer for main@F1573
   174  001A  3409               	retlw	9
   175  001B  340A               	retlw	10
   176  001C  340B               	retlw	11
   177                           
   178                           	psect	idataBANK3
   179  1D6A                     __pidataBANK3:	
   180                           
   181                           ;initializer for main@F1569
   182  1D6A  3431               	retlw	49
   183  1D6B  3432               	retlw	50
   184  1D6C  3433               	retlw	51
   185  1D6D  3434               	retlw	52
   186  1D6E  3435               	retlw	53
   187  1D6F  3436               	retlw	54
   188  1D70  3437               	retlw	55
   189  1D71  3438               	retlw	56
   190  1D72  3439               	retlw	57
   191  1D73  342A               	retlw	42
   192  1D74  3430               	retlw	48
   193  1D75  3423               	retlw	35
   194                           
   195                           	psect	stringtext
   196  1000                     __pstringtext:	
   197  1000                     stringtab:	
   198  1000                     __stringtab:	
   199                           
   200                           ;	String table - string pointers are 2 bytes each
   201  1000  1BFF               	btfsc	btemp+1,7
   202  1001  280A               	ljmp	stringcode
   203  1002  1383               	bcf	3,7
   204  1003  187F               	btfsc	btemp+1,0
   205  1004  1783               	bsf	3,7
   206  1005  0800               	movf	0,w
   207  1006  0A84               	incf	4,f
   208  1007  1903               	skipnz
   209  1008  0AFF               	incf	btemp+1,f
   210  1009  0008               	return
   211  100A                     stringcode:	
   212  100A  087F               	movf	btemp+1,w
   213  100B  397F               	andlw	127
   214  100C  008A               	movwf	10
   215  100D  0804               	movf	4,w
   216  100E  0A84               	incf	4,f
   217  100F  1903               	skipnz
   218  1010  0AFF               	incf	btemp+1,f
   219  1011  0082               	movwf	2
   220  1012                     __stringbase:	
   221  1012                     __end_of__stringtab:	
   222  1012                     _FONT_3x5:	
   223  1012  3400               	retlw	0
   224  1013  3400               	retlw	0
   225  1014  3400               	retlw	0
   226  1015  3417               	retlw	23
   227  1016  3400               	retlw	0
   228  1017  3400               	retlw	0
   229  1018  3403               	retlw	3
   230  1019  3400               	retlw	0
   231  101A  3403               	retlw	3
   232  101B  340A               	retlw	10
   233  101C  341F               	retlw	31
   234  101D  340A               	retlw	10
   235  101E  3416               	retlw	22
   236  101F  3413               	retlw	19
   237  1020  341A               	retlw	26
   238  1021  3409               	retlw	9
   239  1022  3404               	retlw	4
   240  1023  340A               	retlw	10
   241  1024  340A               	retlw	10
   242  1025  3415               	retlw	21
   243  1026  341A               	retlw	26
   244  1027  3403               	retlw	3
   245  1028  3400               	retlw	0
   246  1029  3400               	retlw	0
   247  102A  3400               	retlw	0
   248  102B  340E               	retlw	14
   249  102C  3411               	retlw	17
   250  102D  3411               	retlw	17
   251  102E  340E               	retlw	14
   252  102F  3400               	retlw	0
   253  1030  3406               	retlw	6
   254  1031  3406               	retlw	6
   255  1032  3400               	retlw	0
   256  1033  3404               	retlw	4
   257  1034  340E               	retlw	14
   258  1035  3404               	retlw	4
   259  1036  340C               	retlw	12
   260  1037  341C               	retlw	28
   261  1038  3400               	retlw	0
   262  1039  3404               	retlw	4
   263  103A  3404               	retlw	4
   264  103B  3404               	retlw	4
   265  103C  3410               	retlw	16
   266  103D  3400               	retlw	0
   267  103E  3400               	retlw	0
   268  103F  3418               	retlw	24
   269  1040  3404               	retlw	4
   270  1041  3403               	retlw	3
   271  1042  341F               	retlw	31
   272  1043  3411               	retlw	17
   273  1044  341F               	retlw	31
   274  1045  3402               	retlw	2
   275  1046  341F               	retlw	31
   276  1047  3400               	retlw	0
   277  1048  341D               	retlw	29
   278  1049  3415               	retlw	21
   279  104A  3417               	retlw	23
   280  104B  3415               	retlw	21
   281  104C  3415               	retlw	21
   282  104D  341F               	retlw	31
   283  104E  340F               	retlw	15
   284  104F  3408               	retlw	8
   285  1050  341E               	retlw	30
   286  1051  3417               	retlw	23
   287  1052  3415               	retlw	21
   288  1053  341D               	retlw	29
   289  1054  341F               	retlw	31
   290  1055  3415               	retlw	21
   291  1056  341D               	retlw	29
   292  1057  3401               	retlw	1
   293  1058  3401               	retlw	1
   294  1059  341F               	retlw	31
   295  105A  341F               	retlw	31
   296  105B  3415               	retlw	21
   297  105C  341F               	retlw	31
   298  105D  3417               	retlw	23
   299  105E  3415               	retlw	21
   300  105F  341F               	retlw	31
   301  1060  3400               	retlw	0
   302  1061  340A               	retlw	10
   303  1062  3400               	retlw	0
   304  1063  3400               	retlw	0
   305  1064  341A               	retlw	26
   306  1065  3400               	retlw	0
   307  1066  3404               	retlw	4
   308  1067  340A               	retlw	10
   309  1068  3411               	retlw	17
   310  1069  340A               	retlw	10
   311  106A  340A               	retlw	10
   312  106B  340A               	retlw	10
   313  106C  3411               	retlw	17
   314  106D  340A               	retlw	10
   315  106E  3404               	retlw	4
   316  106F  3400               	retlw	0
   317  1070  3415               	retlw	21
   318  1071  3407               	retlw	7
   319  1072  341F               	retlw	31
   320  1073  3415               	retlw	21
   321  1074  3417               	retlw	23
   322  1075  341F               	retlw	31
   323  1076  3405               	retlw	5
   324  1077  341F               	retlw	31
   325  1078  341F               	retlw	31
   326  1079  3415               	retlw	21
   327  107A  341B               	retlw	27
   328  107B  341F               	retlw	31
   329  107C  3411               	retlw	17
   330  107D  3411               	retlw	17
   331  107E  341F               	retlw	31
   332  107F  3411               	retlw	17
   333  1080  340E               	retlw	14
   334  1081  341F               	retlw	31
   335  1082  3415               	retlw	21
   336  1083  3415               	retlw	21
   337  1084  341F               	retlw	31
   338  1085  3405               	retlw	5
   339  1086  3401               	retlw	1
   340  1087  341F               	retlw	31
   341  1088  3411               	retlw	17
   342  1089  341D               	retlw	29
   343  108A  341F               	retlw	31
   344  108B  3404               	retlw	4
   345  108C  341F               	retlw	31
   346  108D  3411               	retlw	17
   347  108E  341F               	retlw	31
   348  108F  3411               	retlw	17
   349  1090  3408               	retlw	8
   350  1091  3410               	retlw	16
   351  1092  340F               	retlw	15
   352  1093  341F               	retlw	31
   353  1094  3404               	retlw	4
   354  1095  341B               	retlw	27
   355  1096  341F               	retlw	31
   356  1097  3410               	retlw	16
   357  1098  3410               	retlw	16
   358  1099  341F               	retlw	31
   359  109A  3406               	retlw	6
   360  109B  341F               	retlw	31
   361  109C  341C               	retlw	28
   362  109D  3404               	retlw	4
   363  109E  341C               	retlw	28
   364  109F  341F               	retlw	31
   365  10A0  3411               	retlw	17
   366  10A1  341F               	retlw	31
   367  10A2  341F               	retlw	31
   368  10A3  3405               	retlw	5
   369  10A4  3407               	retlw	7
   370  10A5  340E               	retlw	14
   371  10A6  3419               	retlw	25
   372  10A7  341E               	retlw	30
   373  10A8  341F               	retlw	31
   374  10A9  3405               	retlw	5
   375  10AA  341B               	retlw	27
   376  10AB  3417               	retlw	23
   377  10AC  3415               	retlw	21
   378  10AD  341D               	retlw	29
   379  10AE  3401               	retlw	1
   380  10AF  341F               	retlw	31
   381  10B0  3401               	retlw	1
   382  10B1  341F               	retlw	31
   383  10B2  3410               	retlw	16
   384  10B3  341F               	retlw	31
   385  10B4  340F               	retlw	15
   386  10B5  3410               	retlw	16
   387  10B6  340F               	retlw	15
   388  10B7  341F               	retlw	31
   389  10B8  340C               	retlw	12
   390  10B9  341F               	retlw	31
   391  10BA  341B               	retlw	27
   392  10BB  3404               	retlw	4
   393  10BC  341B               	retlw	27
   394  10BD  3417               	retlw	23
   395  10BE  3414               	retlw	20
   396  10BF  341F               	retlw	31
   397  10C0  3419               	retlw	25
   398  10C1  3415               	retlw	21
   399  10C2  3413               	retlw	19
   400  10C3  3400               	retlw	0
   401  10C4  341F               	retlw	31
   402  10C5  3411               	retlw	17
   403  10C6  3403               	retlw	3
   404  10C7  3404               	retlw	4
   405  10C8  3418               	retlw	24
   406  10C9  3411               	retlw	17
   407  10CA  341F               	retlw	31
   408  10CB  3400               	retlw	0
   409  10CC  3406               	retlw	6
   410  10CD  3401               	retlw	1
   411  10CE  3406               	retlw	6
   412  10CF  3410               	retlw	16
   413  10D0  3410               	retlw	16
   414  10D1  3410               	retlw	16
   415  10D2  3401               	retlw	1
   416  10D3  3401               	retlw	1
   417  10D4  3402               	retlw	2
   418  10D5  3418               	retlw	24
   419  10D6  3414               	retlw	20
   420  10D7  341C               	retlw	28
   421  10D8  341F               	retlw	31
   422  10D9  3414               	retlw	20
   423  10DA  341C               	retlw	28
   424  10DB  341C               	retlw	28
   425  10DC  3414               	retlw	20
   426  10DD  3414               	retlw	20
   427  10DE  341C               	retlw	28
   428  10DF  3414               	retlw	20
   429  10E0  341F               	retlw	31
   430  10E1  340C               	retlw	12
   431  10E2  341A               	retlw	26
   432  10E3  3414               	retlw	20
   433  10E4  3404               	retlw	4
   434  10E5  341E               	retlw	30
   435  10E6  3405               	retlw	5
   436  10E7  3417               	retlw	23
   437  10E8  3415               	retlw	21
   438  10E9  341E               	retlw	30
   439  10EA  341F               	retlw	31
   440  10EB  3404               	retlw	4
   441  10EC  341C               	retlw	28
   442  10ED  3400               	retlw	0
   443  10EE  341D               	retlw	29
   444  10EF  3400               	retlw	0
   445  10F0  3408               	retlw	8
   446  10F1  3410               	retlw	16
   447  10F2  340D               	retlw	13
   448  10F3  341F               	retlw	31
   449  10F4  340C               	retlw	12
   450  10F5  341A               	retlw	26
   451  10F6  3400               	retlw	0
   452  10F7  341F               	retlw	31
   453  10F8  3400               	retlw	0
   454  10F9  3418               	retlw	24
   455  10FA  340C               	retlw	12
   456  10FB  3418               	retlw	24
   457  10FC  3418               	retlw	24
   458  10FD  3404               	retlw	4
   459  10FE  3418               	retlw	24
   460  10FF  341E               	retlw	30
   461  1100  3412               	retlw	18
   462  1101  341E               	retlw	30
   463  1102  341F               	retlw	31
   464  1103  3405               	retlw	5
   465  1104  3407               	retlw	7
   466  1105  3407               	retlw	7
   467  1106  3405               	retlw	5
   468  1107  341F               	retlw	31
   469  1108  341E               	retlw	30
   470  1109  3404               	retlw	4
   471  110A  3404               	retlw	4
   472  110B  3412               	retlw	18
   473  110C  3415               	retlw	21
   474  110D  3409               	retlw	9
   475  110E  3402               	retlw	2
   476  110F  341F               	retlw	31
   477  1110  3402               	retlw	2
   478  1111  341C               	retlw	28
   479  1112  3410               	retlw	16
   480  1113  341C               	retlw	28
   481  1114  340C               	retlw	12
   482  1115  3410               	retlw	16
   483  1116  340C               	retlw	12
   484  1117  340C               	retlw	12
   485  1118  3418               	retlw	24
   486  1119  340C               	retlw	12
   487  111A  3414               	retlw	20
   488  111B  3408               	retlw	8
   489  111C  3414               	retlw	20
   490  111D  3416               	retlw	22
   491  111E  3418               	retlw	24
   492  111F  3406               	retlw	6
   493  1120  3404               	retlw	4
   494  1121  341C               	retlw	28
   495  1122  3410               	retlw	16
   496  1123  3404               	retlw	4
   497  1124  340E               	retlw	14
   498  1125  3411               	retlw	17
   499  1126  3400               	retlw	0
   500  1127  341F               	retlw	31
   501  1128  3400               	retlw	0
   502  1129  3411               	retlw	17
   503  112A  340E               	retlw	14
   504  112B  3404               	retlw	4
   505  112C  3402               	retlw	2
   506  112D  3404               	retlw	4
   507  112E  3402               	retlw	2
   508  112F  341F               	retlw	31
   509  1130  341F               	retlw	31
   510  1131  341F               	retlw	31
   511  1132                     __end_of_FONT_3x5:	
   512  000C                     _PIR1bits	set	12
   513  0006                     _PORTB	set	6
   514  0007                     _PORTC	set	7
   515  0008                     _PORTD	set	8
   516  001A                     _RCREG	set	26
   517  0018                     _RCSTA	set	24
   518  0018                     _RCSTAbits	set	24
   519  0019                     _TXREG	set	25
   520  0030                     _RB0	set	48
   521  0031                     _RB1	set	49
   522  0032                     _RB2	set	50
   523  0033                     _RB3	set	51
   524  0034                     _RB4	set	52
   525  0035                     _RB5	set	53
   526  0036                     _RB6	set	54
   527  0037                     _RB7	set	55
   528  0040                     _RD0	set	64
   529  0041                     _RD1	set	65
   530  0042                     _RD2	set	66
   531  0043                     _RD3	set	67
   532  0044                     _RD4	set	68
   533  0045                     _RD5	set	69
   534  0046                     _RD6	set	70
   535  0047                     _RD7	set	71
   536  0099                     _SPBRG	set	153
   537  0086                     _TRISB	set	134
   538  0087                     _TRISC	set	135
   539  0088                     _TRISD	set	136
   540  0098                     _TXSTA	set	152
   541  0098                     _TXSTAbits	set	152
   542  0430                     _TRISB0	set	1072
   543  0431                     _TRISB1	set	1073
   544  0432                     _TRISB2	set	1074
   545  0433                     _TRISB3	set	1075
   546  0434                     _TRISB4	set	1076
   547  0435                     _TRISB5	set	1077
   548  0436                     _TRISB6	set	1078
   549  0437                     _TRISB7	set	1079
   550  0440                     _TRISD0	set	1088
   551  0441                     _TRISD1	set	1089
   552  0442                     _TRISD2	set	1090
   553  0443                     _TRISD3	set	1091
   554  0444                     _TRISD4	set	1092
   555  0445                     _TRISD5	set	1093
   556  0446                     _TRISD6	set	1094
   557  0447                     _TRISD7	set	1095
   558  1132                     STR_9:	
   559  1132  3445               	retlw	69	;'E'
   560  1133  344E               	retlw	78	;'N'
   561  1134  3454               	retlw	84	;'T'
   562  1135  3445               	retlw	69	;'E'
   563  1136  3452               	retlw	82	;'R'
   564  1137  3420               	retlw	32	;' '
   565  1138  344E               	retlw	78	;'N'
   566  1139  344F               	retlw	79	;'O'
   567  113A  3420               	retlw	32	;' '
   568  113B  344F               	retlw	79	;'O'
   569  113C  3446               	retlw	70	;'F'
   570  113D  3420               	retlw	32	;' '
   571  113E  3452               	retlw	82	;'R'
   572  113F  3449               	retlw	73	;'I'
   573  1140  344E               	retlw	78	;'N'
   574  1141  3447               	retlw	71	;'G'
   575  1142  3453               	retlw	83	;'S'
   576  1143  3400               	retlw	0
   577  1144                     STR_8:	
   578  1144  3450               	retlw	80	;'P'
   579  1145  3452               	retlw	82	;'R'
   580  1146  3445               	retlw	69	;'E'
   581  1147  3453               	retlw	83	;'S'
   582  1148  3453               	retlw	83	;'S'
   583  1149  3420               	retlw	32	;' '
   584  114A  3423               	retlw	35	;'#'
   585  114B  3420               	retlw	32	;' '
   586  114C  3446               	retlw	70	;'F'
   587  114D  344F               	retlw	79	;'O'
   588  114E  3452               	retlw	82	;'R'
   589  114F  3420               	retlw	32	;' '
   590  1150  3442               	retlw	66	;'B'
   591  1151  3441               	retlw	65	;'A'
   592  1152  3443               	retlw	67	;'C'
   593  1153  344B               	retlw	75	;'K'
   594  1154  3400               	retlw	0
   595  1155                     STR_7:	
   596  1155  3420               	retlw	32	;' '
   597  1156  3420               	retlw	32	;' '
   598  1157  3420               	retlw	32	;' '
   599  1158  3420               	retlw	32	;' '
   600  1159  3420               	retlw	32	;' '
   601  115A  3420               	retlw	32	;' '
   602  115B  3420               	retlw	32	;' '
   603  115C  3420               	retlw	32	;' '
   604  115D  3420               	retlw	32	;' '
   605  115E  3420               	retlw	32	;' '
   606  115F  3420               	retlw	32	;' '
   607  1160  3420               	retlw	32	;' '
   608  1161  3420               	retlw	32	;' '
   609  1162  3420               	retlw	32	;' '
   610  1163  3420               	retlw	32	;' '
   611  1164  3400               	retlw	0
   612  1165                     STR_18:	
   613  1165  3453               	retlw	83	;'S'
   614  1166  3441               	retlw	65	;'A'
   615  1167  3456               	retlw	86	;'V'
   616  1168  3445               	retlw	69	;'E'
   617  1169  3420               	retlw	32	;' '
   618  116A  3446               	retlw	70	;'F'
   619  116B  3441               	retlw	65	;'A'
   620  116C  3449               	retlw	73	;'I'
   621  116D  344C               	retlw	76	;'L'
   622  116E  3445               	retlw	69	;'E'
   623  116F  3444               	retlw	68	;'D'
   624  1170  3420               	retlw	32	;' '
   625  1171  3420               	retlw	32	;' '
   626  1172  3420               	retlw	32	;' '
   627  1173  3420               	retlw	32	;' '
   628  1174  3400               	retlw	0
   629  1175                     STR_14:	
   630  1175  3457               	retlw	87	;'W'
   631  1176  3452               	retlw	82	;'R'
   632  1177  344F               	retlw	79	;'O'
   633  1178  344E               	retlw	78	;'N'
   634  1179  3447               	retlw	71	;'G'
   635  117A  3420               	retlw	32	;' '
   636  117B  3449               	retlw	73	;'I'
   637  117C  344E               	retlw	78	;'N'
   638  117D  3450               	retlw	80	;'P'
   639  117E  3455               	retlw	85	;'U'
   640  117F  3454               	retlw	84	;'T'
   641  1180  3420               	retlw	32	;' '
   642  1181  3420               	retlw	32	;' '
   643  1182  3420               	retlw	32	;' '
   644  1183  3420               	retlw	32	;' '
   645  1184  3400               	retlw	0
   646  1185                     STR_12:	
   647  1185  344D               	retlw	77	;'M'
   648  1186  3441               	retlw	65	;'A'
   649  1187  3458               	retlw	88	;'X'
   650  1188  342D               	retlw	45	;'-'
   651  1189  344E               	retlw	78	;'N'
   652  118A  344F               	retlw	79	;'O'
   653  118B  342D               	retlw	45	;'-'
   654  118C  3445               	retlw	69	;'E'
   655  118D  3458               	retlw	88	;'X'
   656  118E  3443               	retlw	67	;'C'
   657  118F  3445               	retlw	69	;'E'
   658  1190  3445               	retlw	69	;'E'
   659  1191  3444               	retlw	68	;'D'
   660  1192  3445               	retlw	69	;'E'
   661  1193  3444               	retlw	68	;'D'
   662  1194  3400               	retlw	0
   663  1195                     STR_13:	
   664  1195  3453               	retlw	83	;'S'
   665  1196  3441               	retlw	65	;'A'
   666  1197  3456               	retlw	86	;'V'
   667  1198  3445               	retlw	69	;'E'
   668  1199  3420               	retlw	32	;' '
   669  119A  3453               	retlw	83	;'S'
   670  119B  3455               	retlw	85	;'U'
   671  119C  3443               	retlw	67	;'C'
   672  119D  3445               	retlw	69	;'E'
   673  119E  3453               	retlw	83	;'S'
   674  119F  3453               	retlw	83	;'S'
   675  11A0  3446               	retlw	70	;'F'
   676  11A1  3455               	retlw	85	;'U'
   677  11A2  344C               	retlw	76	;'L'
   678  11A3  344C               	retlw	76	;'L'
   679  11A4  3400               	retlw	0
   680  11A5                     STR_6:	
   681  11A5  3442               	retlw	66	;'B'
   682  11A6  3452               	retlw	82	;'R'
   683  11A7  3445               	retlw	69	;'E'
   684  11A8  3441               	retlw	65	;'A'
   685  11A9  344B               	retlw	75	;'K'
   686  11AA  3420               	retlw	32	;' '
   687  11AB  3454               	retlw	84	;'T'
   688  11AC  3449               	retlw	73	;'I'
   689  11AD  344D               	retlw	77	;'M'
   690  11AE  3445               	retlw	69	;'E'
   691  11AF  3420               	retlw	32	;' '
   692  11B0  344B               	retlw	75	;'K'
   693  11B1  3449               	retlw	73	;'I'
   694  11B2  3444               	retlw	68	;'D'
   695  11B3  3453               	retlw	83	;'S'
   696  11B4  3400               	retlw	0
   697  11B5                     STR_1:	
   698  11B5  3453               	retlw	83	;'S'
   699  11B6  344D               	retlw	77	;'M'
   700  11B7  3441               	retlw	65	;'A'
   701  11B8  3452               	retlw	82	;'R'
   702  11B9  3454               	retlw	84	;'T'
   703  11BA  342D               	retlw	45	;'-'
   704  11BB  3442               	retlw	66	;'B'
   705  11BC  3445               	retlw	69	;'E'
   706  11BD  344C               	retlw	76	;'L'
   707  11BE  344C               	retlw	76	;'L'
   708  11BF  3400               	retlw	0
   709  11C0                     STR_11:	
   710  11C0  344E               	retlw	78	;'N'
   711  11C1  344F               	retlw	79	;'O'
   712  11C2  3454               	retlw	84	;'T'
   713  11C3  3420               	retlw	32	;' '
   714  11C4  3456               	retlw	86	;'V'
   715  11C5  3441               	retlw	65	;'A'
   716  11C6  344C               	retlw	76	;'L'
   717  11C7  3449               	retlw	73	;'I'
   718  11C8  3444               	retlw	68	;'D'
   719  11C9  3400               	retlw	0
   720  11CA                     STR_15:	
   721  11CA  3452               	retlw	82	;'R'
   722  11CB  3449               	retlw	73	;'I'
   723  11CC  344E               	retlw	78	;'N'
   724  11CD  3447               	retlw	71	;'G'
   725  11CE  3453               	retlw	83	;'S'
   726  11CF  343A               	retlw	58	;':'
   727  11D0  3400               	retlw	0
   728  11D1                     STR_3:	
   729  11D1  3443               	retlw	67	;'C'
   730  11D2  344C               	retlw	76	;'L'
   731  11D3  344F               	retlw	79	;'O'
   732  11D4  3455               	retlw	85	;'U'
   733  11D5  3444               	retlw	68	;'D'
   734  11D6  3458               	retlw	88	;'X'
   735  11D7  3400               	retlw	0
   736  11D8                     STR_4:	
   737  11D8  3454               	retlw	84	;'T'
   738  11D9  3449               	retlw	73	;'I'
   739  11DA  344D               	retlw	77	;'M'
   740  11DB  3445               	retlw	69	;'E'
   741  11DC  343A               	retlw	58	;':'
   742  11DD  3400               	retlw	0
   743  11DE                     STR_2:	
   744  11DE  3455               	retlw	85	;'U'
   745  11DF  3453               	retlw	83	;'S'
   746  11E0  3449               	retlw	73	;'I'
   747  11E1  344E               	retlw	78	;'N'
   748  11E2  3447               	retlw	71	;'G'
   749  11E3  3400               	retlw	0
   750  11E4                     STR_10:	
   751  11E4  344E               	retlw	78	;'N'
   752  11E5  344F               	retlw	79	;'O'
   753  11E6  343A               	retlw	58	;':'
   754  11E7  3400               	retlw	0
   755  11E8                     STR_5:	
   756  11E8  340D               	retlw	13
   757  11E9  340A               	retlw	10
   758  11EA  3400               	retlw	0
   759  1165                     
   760                           ; #config settings
   761  0000                     
   762                           	psect	cinit
   763  07C7                     start_initialization:	
   764  07C7                     __initialization:	
   765                           
   766                           ; Clear objects allocated to BANK0
   767  07C7  1383               	bcf	3,7	;select IRP bank0
   768  07C8  3052               	movlw	low __pbssBANK0
   769  07C9  0084               	movwf	4
   770  07CA  3066               	movlw	low (__pbssBANK0+20)
   771  07CB  160A  158A  2542  120A  118A  	fcall	clear_ram0
   772                           
   773                           ; Clear objects allocated to BANK1
   774  07D0  1683               	bsf	3,5	;RP0=1, select bank1
   775  07D1  1303               	bcf	3,6	;RP1=0, select bank1
   776  07D2  01EB               	clrf	__pbssBANK1& (0+127)
   777  07D3  01EC               	clrf	(__pbssBANK1+1)& (0+127)
   778  07D4  01ED               	clrf	(__pbssBANK1+2)& (0+127)
   779                           
   780                           ; Initialize objects allocated to BANK3
   781  07D5  1783               	bsf	3,7	;select IRP bank2
   782  07D6  309C               	movlw	low (__pdataBANK3+12)
   783  07D7  00FD               	movwf	btemp+-1
   784  07D8  301D               	movlw	high __pidataBANK3
   785  07D9  00FE               	movwf	btemp
   786  07DA  306A               	movlw	low __pidataBANK3
   787  07DB  00FF               	movwf	btemp+1
   788  07DC  3090               	movlw	low __pdataBANK3
   789  07DD  0084               	movwf	4
   790  07DE  160A  158A  258B  120A  118A  	fcall	init_ram0
   791                           
   792                           ; Initialize objects allocated to BANK1
   793  07E3  1383               	bcf	3,7	;select IRP bank0
   794  07E4  30EB               	movlw	low (__pdataBANK1+26)
   795  07E5  00FD               	movwf	btemp+-1
   796  07E6  3000               	movlw	high __pidataBANK1
   797  07E7  00FE               	movwf	btemp
   798  07E8  3003               	movlw	low __pidataBANK1
   799  07E9  00FF               	movwf	btemp+1
   800  07EA  30D1               	movlw	low __pdataBANK1
   801  07EB  0084               	movwf	4
   802  07EC  160A  158A  258B  120A  118A  	fcall	init_ram0
   803                           
   804                           ; Initialize objects allocated to BANK0
   805  07F1  306F               	movlw	low (__pdataBANK0+9)
   806  07F2  00FD               	movwf	btemp+-1
   807  07F3  301D               	movlw	high __pidataBANK0
   808  07F4  00FE               	movwf	btemp
   809  07F5  304A               	movlw	low __pidataBANK0
   810  07F6  00FF               	movwf	btemp+1
   811  07F7  3066               	movlw	low __pdataBANK0
   812  07F8  0084               	movwf	4
   813  07F9  160A  158A  258B   	fcall	init_ram0
   814  07FC                     end_of_initialization:	
   815                           ;End of C runtime variable initialization code
   816                           
   817  07FC                     __end_of__initialization:	
   818  07FC  0183               	clrf	3
   819  07FD  120A  118A  2AD9   	ljmp	_main	;jump to C main() function
   820                           
   821                           	psect	bssBANK0
   822  0052                     __pbssBANK0:	
   823  0052                     _Clock:	
   824  0052                     	ds	1
   825  0053                     _Data:	
   826  0053                     	ds	1
   827  0054                     _Indicator:	
   828  0054                     	ds	1
   829  0055                     _KColPins:	
   830  0055                     	ds	1
   831  0056                     _KCols:	
   832  0056                     	ds	1
   833  0057                     _KIT:	
   834  0057                     	ds	1
   835  0058                     _KMap:	
   836  0058                     	ds	1
   837  0059                     _KRowPins:	
   838  0059                     	ds	1
   839  005A                     _KRows:	
   840  005A                     	ds	1
   841  005B                     _Keys1:	
   842  005B                     	ds	1
   843  005C                     _RST:	
   844  005C                     	ds	1
   845  005D                     __CE:	
   846  005D                     	ds	1
   847  005E                     __Clk:	
   848  005E                     	ds	1
   849  005F                     __DC:	
   850  005F                     	ds	1
   851  0060                     __DIn:	
   852  0060                     	ds	1
   853  0061                     __Rset:	
   854  0061                     	ds	1
   855  0062                     _colCheck:	
   856  0062                     	ds	1
   857  0063                     _fontOffset:	
   858  0063                     	ds	1
   859  0064                     _fontWidth:	
   860  0064                     	ds	1
   861  0065                     _rowCheck:	
   862  0065                     	ds	1
   863                           
   864                           	psect	dataBANK0
   865  0066                     __pdataBANK0:	
   866  0066                     main@F1566:	
   867  0066                     	ds	9
   868                           
   869                           	psect	bssBANK1
   870  00EB                     __pbssBANK1:	
   871  00EB                     _lastwritecount:	
   872  00EB                     	ds	2
   873  00ED                     _lastwriteaddr:	
   874  00ED                     	ds	1
   875                           
   876                           	psect	dataBANK1
   877  00D1                     __pdataBANK1:	
   878  00D1                     _keypadMap:	
   879  00D1                     	ds	10
   880  00DB                     main@F1564:	
   881  00DB                     	ds	9
   882  00E4                     main@F1571:	
   883  00E4                     	ds	4
   884  00E8                     main@F1573:	
   885  00E8                     	ds	3
   886                           
   887                           	psect	dataBANK3
   888  0190                     __pdataBANK3:	
   889  0190                     main@F1569:	
   890  0190                     	ds	12
   891                           
   892                           	psect	clrtext
   893  1D42                     clear_ram0:	
   894                           ;	Called with FSR containing the base address, and
   895                           ;	W with the last address+1
   896                           
   897  1D42  0064               	clrwdt	;clear the watchdog before getting into this loop
   898  1D43                     clrloop0:	
   899  1D43  0180               	clrf	0	;clear RAM location pointed to by FSR
   900  1D44  0A84               	incf	4,f	;increment pointer
   901  1D45  0604               	xorwf	4,w	;XOR with final address
   902  1D46  1903               	btfsc	3,2	;have we reached the end yet?
   903  1D47  3400               	retlw	0	;all done for this memory range, return
   904  1D48  0604               	xorwf	4,w	;XOR again to restore value
   905  1D49  2D43               	goto	clrloop0	;do the next byte
   906                           
   907                           	psect	inittext
   908  1D87                     init_fetch0:	
   909                           ;	Called with low address in FSR and high address in W
   910                           
   911  1D87  087E               	movf	126,w
   912  1D88  008A               	movwf	10
   913  1D89  087F               	movf	127,w
   914  1D8A  0082               	movwf	2
   915  1D8B                     init_ram0:	
   916                           ;Called with:
   917                           ;	high address of idata address in btemp 
   918                           ;	low address of idata address in btemp+1 
   919                           ;	low address of data in FSR
   920                           ;	high address + 1 of data in btemp-1
   921                           
   922  1D8B  2587  160A  158A   	fcall	init_fetch0
   923  1D8E  0080               	movwf	0
   924  1D8F  0A84               	incf	4,f
   925  1D90  0804               	movf	4,w
   926  1D91  067D               	xorwf	125,w
   927  1D92  1903               	btfsc	3,2
   928  1D93  3400               	retlw	0
   929  1D94  0AFF               	incf	127,f
   930  1D95  1903               	btfsc	3,2
   931  1D96  0AFE               	incf	126,f
   932  1D97  2D8B               	goto	init_ram0
   933                           
   934                           	psect	cstackBANK1
   935  00A0                     __pcstackBANK1:	
   936  00A0                     main@ringsno:	
   937  00A0                     main@KeypadCharacters:	
   938                           ; 0 bytes @ 0x0
   939                           
   940                           
   941                           ; 12 bytes @ 0x0
   942  00A0                     	ds	12
   943  00AC                     main@time2:	
   944                           
   945                           ; 9 bytes @ 0xC
   946  00AC                     	ds	9
   947  00B5                     main@RowPins:	
   948                           
   949                           ; 4 bytes @ 0x15
   950  00B5                     	ds	4
   951  00B9                     main@ColumnsPins:	
   952                           
   953                           ; 3 bytes @ 0x19
   954  00B9                     	ds	3
   955  00BC                     main@myrings:	
   956                           
   957                           ; 2 bytes @ 0x1C
   958  00BC                     	ds	2
   959  00BE                     main@back:	
   960                           
   961                           ; 1 bytes @ 0x1E
   962  00BE                     	ds	1
   963  00BF                     main@x:	
   964                           
   965                           ; 1 bytes @ 0x1F
   966  00BF                     	ds	1
   967  00C0                     main@time:	
   968                           
   969                           ; 9 bytes @ 0x20
   970  00C0                     	ds	9
   971  00C9                     main@x_522:	
   972                           
   973                           ; 1 bytes @ 0x29
   974  00C9                     	ds	1
   975  00CA                     main@counter:	
   976                           
   977                           ; 1 bytes @ 0x2A
   978  00CA                     	ds	1
   979  00CB                     main@minutes:	
   980                           
   981                           ; 1 bytes @ 0x2B
   982  00CB                     	ds	1
   983  00CC                     main@seconds:	
   984                           
   985                           ; 1 bytes @ 0x2C
   986  00CC                     	ds	1
   987  00CD                     main@hours:	
   988                           
   989                           ; 1 bytes @ 0x2D
   990  00CD                     	ds	1
   991  00CE                     main@Ringsno1:	
   992                           
   993                           ; 2 bytes @ 0x2E
   994  00CE                     	ds	2
   995  00D0                     main@Keys:	
   996                           
   997                           ; 1 bytes @ 0x30
   998  00D0                     	ds	1
   999                           
  1000                           	psect	cstackCOMMON
  1001  0070                     __pcstackCOMMON:	
  1002  0070                     ?_DS1302_read:	
  1003  0070                     ?_Write_ds1302_byte:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?_shift_in_byte:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_Shift_out_byte_right:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_Binary2BCD:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_BCD2Binary:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?_ReadArrayFromRAM:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_compareTimeArray:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_LCD_clear:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_SetupTime:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?_readKeys:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0070                     ?_pinMode:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     ?_readPin:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ??_readPin:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     ?_RAM_read:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0070                     ?_BCD2UpperCh:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0070                     ??_BCD2UpperCh:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0070                     ?_BCD2LowerCh:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0070                     ??_BCD2LowerCh:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  0070                     ?_LCD5110_startCol:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  0070                     ?_LCD5110_fillScreen:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063  0070                     ?_LCD5110_clear:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066  0070                     ?_serialWrite:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0070                     ??_serialWrite:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0070                     ?_getKey:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0070                     ?_main:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ?___bmul:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     ?_PinSelect:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084  0070                     ?_startCommand:	
  1085                           ; 2 bytes @ 0x0
  1086                           
  1087  0070                     ?___wmul:	
  1088                           ; 2 bytes @ 0x0
  1089                           
  1090  0070                     ?___awdiv:	
  1091                           ; 2 bytes @ 0x0
  1092                           
  1093  0070                     ?___awmod:	
  1094                           ; 2 bytes @ 0x0
  1095                           
  1096  0070                     ?___lldiv:	
  1097                           ; 2 bytes @ 0x0
  1098                           
  1099  0070                     PinSelect@segState:	
  1100                           ; 4 bytes @ 0x0
  1101                           
  1102  0070                     pinMode@stater:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0070                     readPin@stater:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0070                     BCD2LowerCh@bcd:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0070                     compareTimeArray@time2:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0070                     ___bmul@multiplicand:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0070                     ___wmul@multiplier:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0070                     ___awdiv@divisor:	
  1121                           ; 2 bytes @ 0x0
  1122                           
  1123  0070                     ___awmod@divisor:	
  1124                           ; 2 bytes @ 0x0
  1125                           
  1126  0070                     ___lldiv@divisor:	
  1127                           ; 2 bytes @ 0x0
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x0
  1131  0070                     	ds	1
  1132  0071                     ??_PinSelect:	
  1133  0071                     ??_pinMode:	
  1134                           ; 1 bytes @ 0x1
  1135                           
  1136  0071                     ??___bmul:	
  1137                           ; 1 bytes @ 0x1
  1138                           
  1139  0071                     PinSelect@selPins:	
  1140                           ; 1 bytes @ 0x1
  1141                           
  1142  0071                     pinMode@segPortSel:	
  1143                           ; 1 bytes @ 0x1
  1144                           
  1145  0071                     BCD2UpperCh@bcd:	
  1146                           ; 1 bytes @ 0x1
  1147                           
  1148  0071                     compareTimeArray@size:	
  1149                           ; 1 bytes @ 0x1
  1150                           
  1151                           
  1152                           ; 2 bytes @ 0x1
  1153  0071                     	ds	1
  1154  0072                     ??_shift_in_byte:	
  1155  0072                     ??_Shift_out_byte_right:	
  1156                           ; 1 bytes @ 0x2
  1157                           
  1158  0072                     ?_LCD5110_settings:	
  1159                           ; 1 bytes @ 0x2
  1160                           
  1161  0072                     ?_KeypadSetting:	
  1162                           ; 1 bytes @ 0x2
  1163                           
  1164  0072                     ?_LCD5110_internalWrite:	
  1165                           ; 1 bytes @ 0x2
  1166                           
  1167  0072                     LCD5110_internalWrite@dataByte:	
  1168                           ; 2 bytes @ 0x2
  1169                           
  1170  0072                     LCD5110_settings@DIn:	
  1171                           ; 1 bytes @ 0x2
  1172                           
  1173  0072                     serialWrite@SerTx:	
  1174                           ; 1 bytes @ 0x2
  1175                           
  1176  0072                     KeypadSetting@KRowPinsA:	
  1177                           ; 1 bytes @ 0x2
  1178                           
  1179  0072                     ___bmul@product:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182  0072                     ___wmul@multiplicand:	
  1183                           ; 1 bytes @ 0x2
  1184                           
  1185  0072                     ___awdiv@dividend:	
  1186                           ; 2 bytes @ 0x2
  1187                           
  1188  0072                     ___awmod@dividend:	
  1189                           ; 2 bytes @ 0x2
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x2
  1193  0072                     	ds	1
  1194  0073                     ??_compareTimeArray:	
  1195  0073                     ??_LCD5110_internalWrite:	
  1196                           ; 1 bytes @ 0x3
  1197                           
  1198  0073                     ?_serialWriteText:	
  1199                           ; 1 bytes @ 0x3
  1200                           
  1201  0073                     LCD5110_settings@DC:	
  1202                           ; 1 bytes @ 0x3
  1203                           
  1204  0073                     KeypadSetting@KColPinsA:	
  1205                           ; 1 bytes @ 0x3
  1206                           
  1207  0073                     ___bmul@multiplier:	
  1208                           ; 1 bytes @ 0x3
  1209                           
  1210  0073                     serialWriteText@Sertxxt:	
  1211                           ; 1 bytes @ 0x3
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x3
  1215  0073                     	ds	1
  1216  0074                     ??_BCD2Binary:	
  1217  0074                     ??_getKey:	
  1218                           ; 1 bytes @ 0x4
  1219                           
  1220  0074                     ??___wmul:	
  1221                           ; 1 bytes @ 0x4
  1222                           
  1223  0074                     ??___awdiv:	
  1224                           ; 1 bytes @ 0x4
  1225                           
  1226  0074                     ??___awmod:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229  0074                     shift_in_byte@temp:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232  0074                     Shift_out_byte_right@data:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235  0074                     LCD5110_settings@CE:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238  0074                     KeypadSetting@KRowss:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241  0074                     compareTimeArray@x:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244  0074                     ___wmul@product:	
  1245                           ; 2 bytes @ 0x4
  1246                           
  1247  0074                     ___lldiv@dividend:	
  1248                           ; 2 bytes @ 0x4
  1249                           
  1250                           
  1251                           ; 4 bytes @ 0x4
  1252  0074                     	ds	1
  1253  0075                     ??_serialWriteText:	
  1254  0075                     shift_in_byte@i:	
  1255                           ; 1 bytes @ 0x5
  1256                           
  1257  0075                     Shift_out_byte_right@i:	
  1258                           ; 1 bytes @ 0x5
  1259                           
  1260  0075                     LCD5110_internalWrite@Data__Command:	
  1261                           ; 1 bytes @ 0x5
  1262                           
  1263  0075                     LCD5110_settings@Rset:	
  1264                           ; 1 bytes @ 0x5
  1265                           
  1266  0075                     KeypadSetting@KColss:	
  1267                           ; 1 bytes @ 0x5
  1268                           
  1269  0075                     ___awdiv@counter:	
  1270                           ; 1 bytes @ 0x5
  1271                           
  1272  0075                     ___awmod@counter:	
  1273                           ; 1 bytes @ 0x5
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x5
  1277  0075                     	ds	1
  1278  0076                     ??_Write_ds1302_byte:	
  1279  0076                     ??_LCD5110_settings:	
  1280                           ; 1 bytes @ 0x6
  1281                           
  1282  0076                     Write_ds1302_byte@cmd:	
  1283                           ; 1 bytes @ 0x6
  1284                           
  1285  0076                     shift_in_byte@data:	
  1286                           ; 1 bytes @ 0x6
  1287                           
  1288  0076                     BCD2Binary@rr:	
  1289                           ; 1 bytes @ 0x6
  1290                           
  1291  0076                     LCD5110_internalWrite@_data:	
  1292                           ; 1 bytes @ 0x6
  1293                           
  1294  0076                     serialWriteText@pnttter:	
  1295                           ; 1 bytes @ 0x6
  1296                           
  1297  0076                     KeypadSetting@KMapA:	
  1298                           ; 1 bytes @ 0x6
  1299                           
  1300  0076                     compareTimeArray@time:	
  1301                           ; 1 bytes @ 0x6
  1302                           
  1303  0076                     ___awdiv@sign:	
  1304                           ; 1 bytes @ 0x6
  1305                           
  1306  0076                     ___awmod@sign:	
  1307                           ; 1 bytes @ 0x6
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0x6
  1311  0076                     	ds	1
  1312  0077                     ?_DS1302_write:	
  1313  0077                     ??_DS1302_read:	
  1314                           ; 1 bytes @ 0x7
  1315                           
  1316  0077                     DS1302_write@data:	
  1317                           ; 1 bytes @ 0x7
  1318                           
  1319  0077                     BCD2Binary@aa:	
  1320                           ; 1 bytes @ 0x7
  1321                           
  1322  0077                     LCD5110_internalWrite@i:	
  1323                           ; 1 bytes @ 0x7
  1324                           
  1325  0077                     LCD5110_settings@Clk:	
  1326                           ; 1 bytes @ 0x7
  1327                           
  1328  0077                     KeypadSetting@indicatorPin:	
  1329                           ; 1 bytes @ 0x7
  1330                           
  1331  0077                     getKey@KeyPress:	
  1332                           ; 1 bytes @ 0x7
  1333                           
  1334  0077                     ___awdiv@quotient:	
  1335                           ; 1 bytes @ 0x7
  1336                           
  1337                           
  1338                           ; 2 bytes @ 0x7
  1339  0077                     	ds	1
  1340  0078                     ??_DS1302_write:	
  1341  0078                     ??_startCommand:	
  1342                           ; 1 bytes @ 0x8
  1343                           
  1344  0078                     ??_LCD5110_startCol:	
  1345                           ; 1 bytes @ 0x8
  1346                           
  1347  0078                     ??_LCD5110_fillScreen:	
  1348                           ; 1 bytes @ 0x8
  1349                           
  1350  0078                     ??_KeypadSetting:	
  1351                           ; 1 bytes @ 0x8
  1352                           
  1353  0078                     ??___lldiv:	
  1354                           ; 1 bytes @ 0x8
  1355                           
  1356  0078                     ?_gotoXY:	
  1357                           ; 1 bytes @ 0x8
  1358                           
  1359  0078                     DS1302_read@cmd:	
  1360                           ; 2 bytes @ 0x8
  1361                           
  1362  0078                     DS1302_write@cmd:	
  1363                           ; 1 bytes @ 0x8
  1364                           
  1365  0078                     BCD2Binary@tt:	
  1366                           ; 1 bytes @ 0x8
  1367                           
  1368  0078                     gotoXY@X:	
  1369                           ; 1 bytes @ 0x8
  1370                           
  1371  0078                     getKey@KeyTell:	
  1372                           ; 1 bytes @ 0x8
  1373                           
  1374                           
  1375                           ; 1 bytes @ 0x8
  1376  0078                     	ds	1
  1377  0079                     ??_Binary2BCD:	
  1378  0079                     ??_gotoXY:	
  1379                           ; 1 bytes @ 0x9
  1380                           
  1381  0079                     ?_LCD5110_setting:	
  1382                           ; 1 bytes @ 0x9
  1383                           
  1384  0079                     DS1302_read@dataRead:	
  1385                           ; 1 bytes @ 0x9
  1386                           
  1387  0079                     LCD5110_startCol@col:	
  1388                           ; 1 bytes @ 0x9
  1389                           
  1390  0079                     LCD5110_fillScreen@bytez:	
  1391                           ; 1 bytes @ 0x9
  1392                           
  1393  0079                     LCD5110_setting@CE:	
  1394                           ; 1 bytes @ 0x9
  1395                           
  1396  0079                     getKey@Map:	
  1397                           ; 1 bytes @ 0x9
  1398                           
  1399  0079                     ___lldiv@quotient:	
  1400                           ; 1 bytes @ 0x9
  1401                           
  1402                           
  1403                           ; 4 bytes @ 0x9
  1404  0079                     	ds	1
  1405  007A                     ?_DS1302_init:	
  1406  007A                     ??_RAM_read:	
  1407                           ; 1 bytes @ 0xA
  1408                           
  1409  007A                     ?_Time_read:	
  1410                           ; 1 bytes @ 0xA
  1411                           
  1412  007A                     ?_LCD5110_inWrite:	
  1413                           ; 1 bytes @ 0xA
  1414                           
  1415  007A                     DS1302_init@DAT:	
  1416                           ; 2 bytes @ 0xA
  1417                           
  1418  007A                     Time_read@min:	
  1419                           ; 1 bytes @ 0xA
  1420                           
  1421  007A                     LCD5110_inWrite@coll:	
  1422                           ; 1 bytes @ 0xA
  1423                           
  1424  007A                     LCD5110_setting@DC:	
  1425                           ; 1 bytes @ 0xA
  1426                           
  1427  007A                     getKey@Row:	
  1428                           ; 1 bytes @ 0xA
  1429                           
  1430  007A                     LCD5110_fillScreen@pointer:	
  1431                           ; 1 bytes @ 0xA
  1432                           
  1433                           
  1434                           ; 2 bytes @ 0xA
  1435  007A                     	ds	1
  1436  007B                     DS1302_init@CE:	
  1437  007B                     RAM_read@address:	
  1438                           ; 1 bytes @ 0xB
  1439                           
  1440  007B                     Time_read@sec:	
  1441                           ; 1 bytes @ 0xB
  1442                           
  1443  007B                     gotoXY@Y:	
  1444                           ; 1 bytes @ 0xB
  1445                           
  1446  007B                     LCD5110_inWrite@dat:	
  1447                           ; 1 bytes @ 0xB
  1448                           
  1449  007B                     LCD5110_setting@DIn:	
  1450                           ; 1 bytes @ 0xB
  1451                           
  1452  007B                     KeypadSetting@InputType:	
  1453                           ; 1 bytes @ 0xB
  1454                           
  1455  007B                     getKey@Col:	
  1456                           ; 1 bytes @ 0xB
  1457                           
  1458                           
  1459                           ; 1 bytes @ 0xB
  1460  007B                     	ds	1
  1461  007C                     ??_DS1302_init:	
  1462  007C                     ?_RAM_write:	
  1463                           ; 1 bytes @ 0xC
  1464                           
  1465  007C                     ?_Time_write:	
  1466                           ; 1 bytes @ 0xC
  1467                           
  1468  007C                     ??_Time_read:	
  1469                           ; 1 bytes @ 0xC
  1470                           
  1471  007C                     ??_LCD5110_inWrite:	
  1472                           ; 1 bytes @ 0xC
  1473                           
  1474  007C                     ??_LCD5110_clear:	
  1475                           ; 1 bytes @ 0xC
  1476                           
  1477  007C                     RAM_write@data:	
  1478                           ; 1 bytes @ 0xC
  1479                           
  1480  007C                     RAM_read@data:	
  1481                           ; 1 bytes @ 0xC
  1482                           
  1483  007C                     Time_write@min:	
  1484                           ; 1 bytes @ 0xC
  1485                           
  1486  007C                     LCD5110_setting@Clk:	
  1487                           ; 1 bytes @ 0xC
  1488                           
  1489  007C                     KeypadSetting@KeyLoad:	
  1490                           ; 1 bytes @ 0xC
  1491                           
  1492  007C                     getKey@i:	
  1493                           ; 1 bytes @ 0xC
  1494                           
  1495  007C                     LCD5110_clear@pointer:	
  1496                           ; 1 bytes @ 0xC
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0xC
  1500  007C                     	ds	1
  1501  007D                     ??_ReadArrayFromRAM:	
  1502  007D                     ??_RAM_write:	
  1503                           ; 1 bytes @ 0xD
  1504                           
  1505  007D                     Time_write@seconds:	
  1506                           ; 1 bytes @ 0xD
  1507                           
  1508  007D                     Time_read@hr:	
  1509                           ; 1 bytes @ 0xD
  1510                           
  1511  007D                     LCD5110_inWrite@roww:	
  1512                           ; 1 bytes @ 0xD
  1513                           
  1514  007D                     LCD5110_setting@Rset:	
  1515                           ; 1 bytes @ 0xD
  1516                           
  1517  007D                     ___lldiv@counter:	
  1518                           ; 1 bytes @ 0xD
  1519                           
  1520                           
  1521                           ; 1 bytes @ 0xD
  1522  007D                     	ds	1
  1523                           
  1524                           	psect	cstackBANK0
  1525  0020                     __pcstackBANK0:	
  1526  0020                     ??_LCD_clear:	
  1527  0020                     ??_LCD5110_setting:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0020                     ?_serialBegin:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0020                     ?_LCD5110_writeCP:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0020                     DS1302_init@CLK:	
  1537                           ; 2 bytes @ 0x0
  1538                           
  1539  0020                     Binary2BCD@aa:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0020                     LCD5110_writeCP@userFont:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0020                     serialBegin@baudd:	
  1546                           ; 2 bytes @ 0x0
  1547                           
  1548                           
  1549                           ; 4 bytes @ 0x0
  1550  0020                     	ds	1
  1551  0021                     DS1302_init@x:	
  1552  0021                     Binary2BCD@t1:	
  1553                           ; 1 bytes @ 0x1
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0x1
  1557  0021                     	ds	1
  1558  0022                     Binary2BCD@t2:	
  1559  0022                     LCD5110_writeCP@fontWidth:	
  1560                           ; 1 bytes @ 0x2
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x2
  1564  0022                     	ds	1
  1565  0023                     ??_Time_write:	
  1566  0023                     RAM_write@address:	
  1567                           ; 1 bytes @ 0x3
  1568                           
  1569  0023                     LCD5110_writeCP@fontOffset:	
  1570                           ; 1 bytes @ 0x3
  1571                           
  1572  0023                     ReadArrayFromRAM@timearray:	
  1573                           ; 1 bytes @ 0x3
  1574                           
  1575                           
  1576                           ; 1 bytes @ 0x3
  1577  0023                     	ds	1
  1578  0024                     ?_writeArrayToRAM:	
  1579  0024                     ??_serialBegin:	
  1580                           ; 1 bytes @ 0x4
  1581                           
  1582  0024                     Time_write@hr:	
  1583                           ; 1 bytes @ 0x4
  1584                           
  1585  0024                     LCD5110_writeCP@character:	
  1586                           ; 1 bytes @ 0x4
  1587                           
  1588  0024                     writeArrayToRAM@address:	
  1589                           ; 1 bytes @ 0x4
  1590                           
  1591  0024                     ReadArrayFromRAM@hr:	
  1592                           ; 1 bytes @ 0x4
  1593                           
  1594                           
  1595                           ; 1 bytes @ 0x4
  1596  0024                     	ds	1
  1597  0025                     ??_writeArrayToRAM:	
  1598  0025                     ??_LCD5110_writeCP:	
  1599                           ; 1 bytes @ 0x5
  1600                           
  1601  0025                     ReadArrayFromRAM@mins:	
  1602                           ; 1 bytes @ 0x5
  1603                           
  1604                           
  1605                           ; 1 bytes @ 0x5
  1606  0025                     	ds	1
  1607  0026                     ReadArrayFromRAM@mytime:	
  1608                           
  1609                           ; 1 bytes @ 0x6
  1610  0026                     	ds	1
  1611  0027                     writeArrayToRAM@timearray:	
  1612                           
  1613                           ; 1 bytes @ 0x7
  1614  0027                     	ds	1
  1615  0028                     writeArrayToRAM@mytime:	
  1616                           
  1617                           ; 1 bytes @ 0x8
  1618  0028                     	ds	1
  1619  0029                     writeArrayToRAM@hr:	
  1620                           
  1621                           ; 1 bytes @ 0x9
  1622  0029                     	ds	1
  1623  002A                     writeArrayToRAM@mins:	
  1624                           
  1625                           ; 1 bytes @ 0xA
  1626  002A                     	ds	1
  1627  002B                     writeArrayToRAM@address1:	
  1628                           
  1629                           ; 1 bytes @ 0xB
  1630  002B                     	ds	1
  1631  002C                     LCD5110_writeCP@_data:	
  1632  002C                     writeArrayToRAM@x:	
  1633                           ; 1 bytes @ 0xC
  1634                           
  1635                           
  1636                           ; 1 bytes @ 0xC
  1637  002C                     	ds	1
  1638  002D                     LCD5110_writeCP@pos_x:	
  1639                           
  1640                           ; 1 bytes @ 0xD
  1641  002D                     	ds	1
  1642  002E                     ?_LCD5110_writeText:	
  1643  002E                     LCD5110_writeText@userFont:	
  1644                           ; 2 bytes @ 0xE
  1645                           
  1646                           
  1647                           ; 2 bytes @ 0xE
  1648  002E                     	ds	2
  1649  0030                     LCD5110_writeText@fontWidth:	
  1650                           
  1651                           ; 1 bytes @ 0x10
  1652  0030                     	ds	1
  1653  0031                     LCD5110_writeText@fontOffset:	
  1654                           
  1655                           ; 1 bytes @ 0x11
  1656  0031                     	ds	1
  1657  0032                     LCD5110_writeText@row:	
  1658                           
  1659                           ; 1 bytes @ 0x12
  1660  0032                     	ds	1
  1661  0033                     LCD5110_writeText@col:	
  1662                           
  1663                           ; 1 bytes @ 0x13
  1664  0033                     	ds	1
  1665  0034                     LCD5110_writeText@characters:	
  1666                           
  1667                           ; 2 bytes @ 0x14
  1668  0034                     	ds	2
  1669  0036                     LCD5110_writeText@dispType:	
  1670                           
  1671                           ; 1 bytes @ 0x16
  1672  0036                     	ds	1
  1673  0037                     ??_LCD5110_writeText:	
  1674                           
  1675                           ; 1 bytes @ 0x17
  1676  0037                     	ds	3
  1677  003A                     ??_readKeys:	
  1678                           
  1679                           ; 1 bytes @ 0x1A
  1680  003A                     	ds	4
  1681  003E                     readKeys@terminated:	
  1682                           
  1683                           ; 1 bytes @ 0x1E
  1684  003E                     	ds	1
  1685  003F                     readKeys@time:	
  1686                           
  1687                           ; 1 bytes @ 0x1F
  1688  003F                     	ds	1
  1689  0040                     readKeys@count:	
  1690                           
  1691                           ; 1 bytes @ 0x20
  1692  0040                     	ds	1
  1693  0041                     ?_readAndStore:	
  1694  0041                     ??_SetupTime:	
  1695                           ; 1 bytes @ 0x21
  1696                           
  1697  0041                     readAndStore@x:	
  1698                           ; 1 bytes @ 0x21
  1699                           
  1700                           
  1701                           ; 1 bytes @ 0x21
  1702  0041                     	ds	1
  1703  0042                     ??_readAndStore:	
  1704                           
  1705                           ; 1 bytes @ 0x22
  1706  0042                     	ds	3
  1707  0045                     readAndStore@Keys:	
  1708  0045                     SetupTime@Keys:	
  1709                           ; 1 bytes @ 0x25
  1710                           
  1711                           
  1712                           ; 1 bytes @ 0x25
  1713  0045                     	ds	1
  1714  0046                     readAndStore@round1:	
  1715  0046                     SetupTime@terminated:	
  1716                           ; 1 bytes @ 0x26
  1717                           
  1718                           
  1719                           ; 1 bytes @ 0x26
  1720  0046                     	ds	1
  1721  0047                     readAndStore@round2:	
  1722  0047                     SetupTime@x:	
  1723                           ; 1 bytes @ 0x27
  1724                           
  1725                           
  1726                           ; 1 bytes @ 0x27
  1727  0047                     	ds	1
  1728  0048                     readAndStore@Time:	
  1729  0048                     SetupTime@x_568:	
  1730                           ; 1 bytes @ 0x28
  1731                           
  1732                           
  1733                           ; 1 bytes @ 0x28
  1734  0048                     	ds	1
  1735  0049                     readAndStore@round:	
  1736  0049                     SetupTime@hr:	
  1737                           ; 1 bytes @ 0x29
  1738                           
  1739                           
  1740                           ; 1 bytes @ 0x29
  1741  0049                     	ds	1
  1742  004A                     readAndStore@terminated:	
  1743  004A                     SetupTime@mins:	
  1744                           ; 1 bytes @ 0x2A
  1745                           
  1746                           
  1747                           ; 1 bytes @ 0x2A
  1748  004A                     	ds	1
  1749  004B                     readAndStore@time:	
  1750  004B                     SetupTime@timearray:	
  1751                           ; 1 bytes @ 0x2B
  1752                           
  1753                           
  1754                           ; 1 bytes @ 0x2B
  1755  004B                     	ds	1
  1756  004C                     ??_main:	
  1757                           
  1758                           ; 1 bytes @ 0x2C
  1759  004C                     	ds	6
  1760                           
  1761                           	psect	maintext
  1762  02D9                     __pmaintext:	
  1763 ;;
  1764 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1765 ;;
  1766 ;; *************** function _main *****************
  1767 ;; Defined at:
  1768 ;;		line 26 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  x               1   41[BANK1 ] unsigned char 
  1773 ;;  x               1   31[BANK1 ] unsigned char 
  1774 ;;  myrings         2   28[BANK1 ] PTR unsigned char 
  1775 ;;		 -> main@ringsno(0), 
  1776 ;;  counter         1   42[BANK1 ] unsigned char 
  1777 ;;  back            1   30[BANK1 ] unsigned char 
  1778 ;;  Ringsno1        2   46[BANK1 ] unsigned int 
  1779 ;;  ringsno         0    0[BANK1 ] unsigned char [0]
  1780 ;;  KeypadCharac   12    0[BANK1 ] unsigned char [3][4]
  1781 ;;  time            9   32[BANK1 ] unsigned char [9]
  1782 ;;  time2           9   12[BANK1 ] unsigned char [9]
  1783 ;;  RowPins         4   21[BANK1 ] unsigned char [4]
  1784 ;;  ColumnsPins     3   25[BANK1 ] unsigned char [3]
  1785 ;;  Keys            1   48[BANK1 ] unsigned char 
  1786 ;;  hours           1   45[BANK1 ] unsigned char 
  1787 ;;  seconds         1   44[BANK1 ] unsigned char 
  1788 ;;  minutes         1   43[BANK1 ] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : B00/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       0      49       0       0
  1800 ;;      Temps:          0       6       0       0       0
  1801 ;;      Totals:         0       6      49       0       0
  1802 ;;Total ram usage:       55 bytes
  1803 ;; Hardware stack levels required when called:    8
  1804 ;; This function calls:
  1805 ;;		_BCD2LowerCh
  1806 ;;		_BCD2UpperCh
  1807 ;;		_DS1302_init
  1808 ;;		_KeypadSetting
  1809 ;;		_LCD5110_clear
  1810 ;;		_LCD5110_setting
  1811 ;;		_LCD5110_writeText
  1812 ;;		_LCD_clear
  1813 ;;		_PinSelect
  1814 ;;		_ReadArrayFromRAM
  1815 ;;		_SetupTime
  1816 ;;		_Time_read
  1817 ;;		___wmul
  1818 ;;		_compareTimeArray
  1819 ;;		_getKey
  1820 ;;		_pinMode
  1821 ;;		_readAndStore
  1822 ;;		_serialBegin
  1823 ;;		_serialWriteText
  1824 ;; This function is called by:
  1825 ;;		Startup code after reset
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _main
  1831  02D9                     _main:	
  1832                           
  1833                           ;College_bell.c: 28: pinMode(6, 0);
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1837  02D9  01F0               	clrf	pinMode@stater
  1838  02DA  3006               	movlw	6
  1839  02DB  120A  118A  201D  120A  118A  	fcall	_pinMode
  1840                           
  1841                           ;College_bell.c: 29: PinSelect(6,0);
  1842  02E0  01F0               	clrf	PinSelect@segState
  1843  02E1  3006               	movlw	6
  1844  02E2  120A  158A  22B9  120A  118A  	fcall	_PinSelect
  1845                           
  1846                           ;College_bell.c: 31: unsigned char minutes=0;
  1847  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1848  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1849  02E9  01CB               	clrf	main@minutes^(0+128)
  1850                           
  1851                           ;College_bell.c: 32: unsigned char seconds=0;
  1852  02EA  01CC               	clrf	main@seconds^(0+128)
  1853                           
  1854                           ;College_bell.c: 33: unsigned char hours=0;
  1855  02EB  01CD               	clrf	main@hours^(0+128)
  1856                           
  1857                           ;College_bell.c: 35: DS1302_init(8,7,12);
  1858  02EC  3007               	movlw	7
  1859  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1860  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1861  02EF  00CC               	movwf	??_main
  1862  02F0  084C               	movf	??_main,w
  1863  02F1  00FA               	movwf	DS1302_init@DAT
  1864  02F2  300C               	movlw	12
  1865  02F3  00CD               	movwf	??_main+1
  1866  02F4  084D               	movf	??_main+1,w
  1867  02F5  00FB               	movwf	DS1302_init@CE
  1868  02F6  3008               	movlw	8
  1869  02F7  160A  118A  242A  120A  118A  	fcall	_DS1302_init
  1870                           
  1871                           ;College_bell.c: 37: serialBegin(9600);
  1872  02FC  3000               	movlw	0
  1873  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1874  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1875  02FF  00A3               	movwf	serialBegin@baudd+3
  1876  0300  3000               	movlw	0
  1877  0301  00A2               	movwf	serialBegin@baudd+2
  1878  0302  3025               	movlw	37
  1879  0303  00A1               	movwf	serialBegin@baudd+1
  1880  0304  3080               	movlw	128
  1881  0305  00A0               	movwf	serialBegin@baudd
  1882  0306  160A  118A  253B  120A  118A  	fcall	_serialBegin
  1883                           
  1884                           ;College_bell.c: 39: LCD5110_setting(1, 2, 3, 4, 5 );
  1885  030B  3002               	movlw	2
  1886  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1887  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1888  030E  00CC               	movwf	??_main
  1889  030F  084C               	movf	??_main,w
  1890  0310  00F9               	movwf	LCD5110_setting@CE
  1891  0311  3003               	movlw	3
  1892  0312  00CD               	movwf	??_main+1
  1893  0313  084D               	movf	??_main+1,w
  1894  0314  00FA               	movwf	LCD5110_setting@DC
  1895  0315  3004               	movlw	4
  1896  0316  00CE               	movwf	??_main+2
  1897  0317  084E               	movf	??_main+2,w
  1898  0318  00FB               	movwf	LCD5110_setting@DIn
  1899  0319  3005               	movlw	5
  1900  031A  00CF               	movwf	??_main+3
  1901  031B  084F               	movf	??_main+3,w
  1902  031C  00FC               	movwf	LCD5110_setting@Clk
  1903  031D  3001               	movlw	1
  1904  031E  160A  158A  25D7  120A  118A  	fcall	_LCD5110_setting
  1905                           
  1906                           ;College_bell.c: 41: char time[9] = {'0','0',':','0','0',':','0','0','\0'};
  1907  0323  30C0               	movlw	main@time& (0+255)
  1908  0324  0084               	movwf	4
  1909  0325  30DB               	movlw	low main@F1564
  1910  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0328  00CC               	movwf	??_main
  1913  0329  0804               	movf	4,w
  1914  032A  00CD               	movwf	??_main+1
  1915  032B  3009               	movlw	9
  1916  032C  00CE               	movwf	??_main+2
  1917  032D                     u4000:	
  1918  032D  084C               	movf	??_main,w
  1919  032E  0084               	movwf	4
  1920  032F  1383               	bcf	3,7	;select IRP bank1
  1921  0330  0800               	movf	0,w
  1922  0331  00CF               	movwf	??_main+3
  1923  0332  0ACC               	incf	??_main,f
  1924  0333  084D               	movf	??_main+1,w
  1925  0334  0084               	movwf	4
  1926  0335  084F               	movf	??_main+3,w
  1927  0336  0080               	movwf	0
  1928  0337  0ACD               	incf	??_main+1,f
  1929  0338  0BCE               	decfsz	??_main+2,f
  1930  0339  2B2D               	goto	u4000
  1931                           
  1932                           ;College_bell.c: 42: char time2[9] = {'0','0',':','0','0',':','0','0','\0'};
  1933  033A  30AC               	movlw	main@time2& (0+255)
  1934  033B  0084               	movwf	4
  1935  033C  3066               	movlw	low main@F1566
  1936  033D  00CC               	movwf	??_main
  1937  033E  0804               	movf	4,w
  1938  033F  00CD               	movwf	??_main+1
  1939  0340  3009               	movlw	9
  1940  0341  00CE               	movwf	??_main+2
  1941  0342                     u4010:	
  1942  0342  084C               	movf	??_main,w
  1943  0343  0084               	movwf	4
  1944  0344  1383               	bcf	3,7	;select IRP bank0
  1945  0345  0800               	movf	0,w
  1946  0346  00CF               	movwf	??_main+3
  1947  0347  0ACC               	incf	??_main,f
  1948  0348  084D               	movf	??_main+1,w
  1949  0349  0084               	movwf	4
  1950  034A  084F               	movf	??_main+3,w
  1951  034B  0080               	movwf	0
  1952  034C  0ACD               	incf	??_main+1,f
  1953  034D  0BCE               	decfsz	??_main+2,f
  1954  034E  2B42               	goto	u4010
  1955                           
  1956                           ;College_bell.c: 43: LCD5110_clear();
  1957  034F  160A  118A  220D  120A  118A  	fcall	_LCD5110_clear
  1958                           
  1959                           ;College_bell.c: 51: char KeypadCharacters[4][3] = {
  1960                           ;College_bell.c: 52: '1','2','3',
  1961                           ;College_bell.c: 53: '4','5','6',
  1962                           ;College_bell.c: 54: '7','8','9',
  1963                           ;College_bell.c: 55: '*','0','#'
  1964                           ;College_bell.c: 56: };
  1965  0354  30A0               	movlw	main@KeypadCharacters& (0+255)
  1966  0355  0084               	movwf	4
  1967  0356  3090               	movlw	low main@F1569
  1968  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0359  00CC               	movwf	??_main
  1971  035A  0804               	movf	4,w
  1972  035B  00CD               	movwf	??_main+1
  1973  035C  300C               	movlw	12
  1974  035D  00CE               	movwf	??_main+2
  1975  035E                     u4020:	
  1976  035E  084C               	movf	??_main,w
  1977  035F  0084               	movwf	4
  1978  0360  1783               	bsf	3,7	;select IRP bank3
  1979  0361  0800               	movf	0,w
  1980  0362  00CF               	movwf	??_main+3
  1981  0363  0ACC               	incf	??_main,f
  1982  0364  084D               	movf	??_main+1,w
  1983  0365  0084               	movwf	4
  1984  0366  1383               	bcf	3,7	;select IRP bank1
  1985  0367  084F               	movf	??_main+3,w
  1986  0368  0080               	movwf	0
  1987  0369  0ACD               	incf	??_main+1,f
  1988  036A  0BCE               	decfsz	??_main+2,f
  1989  036B  2B5E               	goto	u4020
  1990                           
  1991                           ;College_bell.c: 57: char RowPins[4] = {13,14,15,16};
  1992  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1993  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1994  036E  0867               	movf	(main@F1571+3)^(0+128),w
  1995  036F  00B8               	movwf	(main@RowPins+3)^(0+128)
  1996  0370  0866               	movf	(main@F1571+2)^(0+128),w
  1997  0371  00B7               	movwf	(main@RowPins+2)^(0+128)
  1998  0372  0865               	movf	(main@F1571+1)^(0+128),w
  1999  0373  00B6               	movwf	(main@RowPins+1)^(0+128)
  2000  0374  0864               	movf	main@F1571^(0+128),w
  2001  0375  00B5               	movwf	main@RowPins^(0+128)
  2002                           
  2003                           ;College_bell.c: 58: char ColumnsPins[3] = {9,10,11};
  2004  0376  0868               	movf	main@F1573^(0+128),w
  2005  0377  00B9               	movwf	main@ColumnsPins^(0+128)
  2006  0378  0869               	movf	(main@F1573+1)^(0+128),w
  2007  0379  00BA               	movwf	(main@ColumnsPins+1)^(0+128)
  2008  037A  086A               	movf	(main@F1573+2)^(0+128),w
  2009  037B  00BB               	movwf	(main@ColumnsPins+2)^(0+128)
  2010                           
  2011                           ;College_bell.c: 60: char Keys;
  2012                           ;College_bell.c: 62: KeypadSetting(2, RowPins, ColumnsPins, 4, 3, KeypadCharacters,6);
  2013  037C  30B5               	movlw	(low (main@RowPins| 0))& (0+255)
  2014  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2015  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2016  037F  00CC               	movwf	??_main
  2017  0380  084C               	movf	??_main,w
  2018  0381  00F2               	movwf	KeypadSetting@KRowPinsA
  2019  0382  30B9               	movlw	(low (main@ColumnsPins| 0))& (0+255)
  2020  0383  00CD               	movwf	??_main+1
  2021  0384  084D               	movf	??_main+1,w
  2022  0385  00F3               	movwf	KeypadSetting@KColPinsA
  2023  0386  3004               	movlw	4
  2024  0387  00CE               	movwf	??_main+2
  2025  0388  084E               	movf	??_main+2,w
  2026  0389  00F4               	movwf	KeypadSetting@KRowss
  2027  038A  3003               	movlw	3
  2028  038B  00CF               	movwf	??_main+3
  2029  038C  084F               	movf	??_main+3,w
  2030  038D  00F5               	movwf	KeypadSetting@KColss
  2031  038E  30A0               	movlw	(low (main@KeypadCharacters| 0))& (0+255)
  2032  038F  00D0               	movwf	??_main+4
  2033  0390  0850               	movf	??_main+4,w
  2034  0391  00F6               	movwf	KeypadSetting@KMapA
  2035  0392  3006               	movlw	6
  2036  0393  00D1               	movwf	??_main+5
  2037  0394  0851               	movf	??_main+5,w
  2038  0395  00F7               	movwf	KeypadSetting@indicatorPin
  2039  0396  3002               	movlw	2
  2040  0397  120A  158A  2113  120A  118A  	fcall	_KeypadSetting
  2041  039C                     l4352:	
  2042                           ;College_bell.c: 65: while(1){
  2043                           
  2044                           
  2045                           ;College_bell.c: 67: LCD5110_writeText(FONT_3x5, 3,32, 1, 2, "SMART-BELL", 0x00);
  2046  039C  3012               	movlw	low (_FONT_3x5| (0+32768))
  2047  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2048  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2049  039F  00AE               	movwf	LCD5110_writeText@userFont
  2050  03A0  3090               	movlw	high (_FONT_3x5| (0+32768))
  2051  03A1  00AF               	movwf	LCD5110_writeText@userFont+1
  2052  03A2  3003               	movlw	3
  2053  03A3  00CC               	movwf	??_main
  2054  03A4  084C               	movf	??_main,w
  2055  03A5  00B0               	movwf	LCD5110_writeText@fontWidth
  2056  03A6  3020               	movlw	32
  2057  03A7  00CD               	movwf	??_main+1
  2058  03A8  084D               	movf	??_main+1,w
  2059  03A9  00B1               	movwf	LCD5110_writeText@fontOffset
  2060  03AA  01B2               	clrf	LCD5110_writeText@row
  2061  03AB  0AB2               	incf	LCD5110_writeText@row,f
  2062  03AC  3002               	movlw	2
  2063  03AD  00CE               	movwf	??_main+2
  2064  03AE  084E               	movf	??_main+2,w
  2065  03AF  00B3               	movwf	LCD5110_writeText@col
  2066  03B0  30B5               	movlw	low (STR_1| (0+32768))
  2067  03B1  00B4               	movwf	LCD5110_writeText@characters
  2068  03B2  3091               	movlw	high (STR_1| (0+32768))
  2069  03B3  00B5               	movwf	LCD5110_writeText@characters+1
  2070  03B4  01B6               	clrf	LCD5110_writeText@dispType
  2071  03B5  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2072                           
  2073                           ;College_bell.c: 68: LCD5110_writeText(FONT_3x5,3,32, 2, 4, "USING", 0x00);
  2074  03BA  3012               	movlw	low (_FONT_3x5| (0+32768))
  2075  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2076  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2077  03BD  00AE               	movwf	LCD5110_writeText@userFont
  2078  03BE  3090               	movlw	high (_FONT_3x5| (0+32768))
  2079  03BF  00AF               	movwf	LCD5110_writeText@userFont+1
  2080  03C0  3003               	movlw	3
  2081  03C1  00CC               	movwf	??_main
  2082  03C2  084C               	movf	??_main,w
  2083  03C3  00B0               	movwf	LCD5110_writeText@fontWidth
  2084  03C4  3020               	movlw	32
  2085  03C5  00CD               	movwf	??_main+1
  2086  03C6  084D               	movf	??_main+1,w
  2087  03C7  00B1               	movwf	LCD5110_writeText@fontOffset
  2088  03C8  3002               	movlw	2
  2089  03C9  00CE               	movwf	??_main+2
  2090  03CA  084E               	movf	??_main+2,w
  2091  03CB  00B2               	movwf	LCD5110_writeText@row
  2092  03CC  3004               	movlw	4
  2093  03CD  00CF               	movwf	??_main+3
  2094  03CE  084F               	movf	??_main+3,w
  2095  03CF  00B3               	movwf	LCD5110_writeText@col
  2096  03D0  30DE               	movlw	low (STR_2| (0+32768))
  2097  03D1  00B4               	movwf	LCD5110_writeText@characters
  2098  03D2  3091               	movlw	high (STR_2| (0+32768))
  2099  03D3  00B5               	movwf	LCD5110_writeText@characters+1
  2100  03D4  01B6               	clrf	LCD5110_writeText@dispType
  2101  03D5  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2102                           
  2103                           ;College_bell.c: 69: LCD5110_writeText(FONT_3x5,3,32, 3,3, "CLOUDX", 0x00);
  2104  03DA  3012               	movlw	low (_FONT_3x5| (0+32768))
  2105  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2106  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2107  03DD  00AE               	movwf	LCD5110_writeText@userFont
  2108  03DE  3090               	movlw	high (_FONT_3x5| (0+32768))
  2109  03DF  00AF               	movwf	LCD5110_writeText@userFont+1
  2110  03E0  3003               	movlw	3
  2111  03E1  00CC               	movwf	??_main
  2112  03E2  084C               	movf	??_main,w
  2113  03E3  00B0               	movwf	LCD5110_writeText@fontWidth
  2114  03E4  3020               	movlw	32
  2115  03E5  00CD               	movwf	??_main+1
  2116  03E6  084D               	movf	??_main+1,w
  2117  03E7  00B1               	movwf	LCD5110_writeText@fontOffset
  2118  03E8  3003               	movlw	3
  2119  03E9  00CE               	movwf	??_main+2
  2120  03EA  084E               	movf	??_main+2,w
  2121  03EB  00B2               	movwf	LCD5110_writeText@row
  2122  03EC  3003               	movlw	3
  2123  03ED  00CF               	movwf	??_main+3
  2124  03EE  084F               	movf	??_main+3,w
  2125  03EF  00B3               	movwf	LCD5110_writeText@col
  2126  03F0  30D1               	movlw	low (STR_3| (0+32768))
  2127  03F1  00B4               	movwf	LCD5110_writeText@characters
  2128  03F2  3091               	movlw	high (STR_3| (0+32768))
  2129  03F3  00B5               	movwf	LCD5110_writeText@characters+1
  2130  03F4  01B6               	clrf	LCD5110_writeText@dispType
  2131  03F5  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2132                           
  2133                           ;College_bell.c: 71: unsigned int Ringsno1=0;
  2134  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2135  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2136  03FC  01CE               	clrf	main@Ringsno1^(0+128)
  2137  03FD  01CF               	clrf	(main@Ringsno1+1)^(0+128)
  2138                           
  2139                           ;College_bell.c: 73: Time_read( &hours,&minutes,&seconds);
  2140  03FE  30CB               	movlw	(low (main@minutes| 0))& (0+255)
  2141  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0401  00CC               	movwf	??_main
  2144  0402  084C               	movf	??_main,w
  2145  0403  00FA               	movwf	Time_read@min
  2146  0404  30CC               	movlw	(low (main@seconds| 0))& (0+255)
  2147  0405  00CD               	movwf	??_main+1
  2148  0406  084D               	movf	??_main+1,w
  2149  0407  00FB               	movwf	Time_read@sec
  2150  0408  30CD               	movlw	(low (main@hours| 0))& (0+255)
  2151  0409  160A  158A  2670  120A  118A  	fcall	_Time_read
  2152                           
  2153                           ;College_bell.c: 76: time[0]= BCD2UpperCh(hours);
  2154  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2155  040F  1303               	bcf	3,6	;RP1=0, select bank1
  2156  0410  084D               	movf	main@hours^(0+128),w
  2157  0411  160A  158A  255E  120A  118A  	fcall	_BCD2UpperCh
  2158  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0418  00CC               	movwf	??_main
  2161  0419  084C               	movf	??_main,w
  2162  041A  1683               	bsf	3,5	;RP0=1, select bank1
  2163  041B  1303               	bcf	3,6	;RP1=0, select bank1
  2164  041C  00C0               	movwf	main@time^(0+128)
  2165                           
  2166                           ;College_bell.c: 77: time[1]=BCD2LowerCh(hours);
  2167  041D  084D               	movf	main@hours^(0+128),w
  2168  041E  160A  158A  253D  120A  118A  	fcall	_BCD2LowerCh
  2169  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0425  00CC               	movwf	??_main
  2172  0426  084C               	movf	??_main,w
  2173  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2174  0428  1303               	bcf	3,6	;RP1=0, select bank1
  2175  0429  00C1               	movwf	(main@time^(0+128)+1)
  2176                           
  2177                           ;College_bell.c: 78: time[3]=BCD2UpperCh(minutes);
  2178  042A  084B               	movf	main@minutes^(0+128),w
  2179  042B  160A  158A  255E  120A  118A  	fcall	_BCD2UpperCh
  2180  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0432  00CC               	movwf	??_main
  2183  0433  084C               	movf	??_main,w
  2184  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0436  00C3               	movwf	(main@time^(0+128)+3)
  2187                           
  2188                           ;College_bell.c: 79: time[4]= BCD2LowerCh(minutes);
  2189  0437  084B               	movf	main@minutes^(0+128),w
  2190  0438  160A  158A  253D  120A  118A  	fcall	_BCD2LowerCh
  2191  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2192  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2193  043F  00CC               	movwf	??_main
  2194  0440  084C               	movf	??_main,w
  2195  0441  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0442  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0443  00C4               	movwf	(main@time^(0+128)+4)
  2198                           
  2199                           ;College_bell.c: 80: time[6]= BCD2UpperCh(seconds);
  2200  0444  084C               	movf	main@seconds^(0+128),w
  2201  0445  160A  158A  255E  120A  118A  	fcall	_BCD2UpperCh
  2202  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2203  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2204  044C  00CC               	movwf	??_main
  2205  044D  084C               	movf	??_main,w
  2206  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2207  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2208  0450  00C6               	movwf	(main@time^(0+128)+6)
  2209                           
  2210                           ;College_bell.c: 81: time[7]= BCD2LowerCh(seconds);
  2211  0451  084C               	movf	main@seconds^(0+128),w
  2212  0452  160A  158A  253D  120A  118A  	fcall	_BCD2LowerCh
  2213  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0459  00CC               	movwf	??_main
  2216  045A  084C               	movf	??_main,w
  2217  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2218  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2219  045D  00C7               	movwf	(main@time^(0+128)+7)
  2220                           
  2221                           ;College_bell.c: 83: char ringsno[];
  2222                           ;College_bell.c: 86: LCD5110_writeText(FONT_3x5,3,32, 5, 2, "TIME:", 0x00);
  2223  045E  3012               	movlw	low (_FONT_3x5| (0+32768))
  2224  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0461  00AE               	movwf	LCD5110_writeText@userFont
  2227  0462  3090               	movlw	high (_FONT_3x5| (0+32768))
  2228  0463  00AF               	movwf	LCD5110_writeText@userFont+1
  2229  0464  3003               	movlw	3
  2230  0465  00CC               	movwf	??_main
  2231  0466  084C               	movf	??_main,w
  2232  0467  00B0               	movwf	LCD5110_writeText@fontWidth
  2233  0468  3020               	movlw	32
  2234  0469  00CD               	movwf	??_main+1
  2235  046A  084D               	movf	??_main+1,w
  2236  046B  00B1               	movwf	LCD5110_writeText@fontOffset
  2237  046C  3005               	movlw	5
  2238  046D  00CE               	movwf	??_main+2
  2239  046E  084E               	movf	??_main+2,w
  2240  046F  00B2               	movwf	LCD5110_writeText@row
  2241  0470  3002               	movlw	2
  2242  0471  00CF               	movwf	??_main+3
  2243  0472  084F               	movf	??_main+3,w
  2244  0473  00B3               	movwf	LCD5110_writeText@col
  2245  0474  30D8               	movlw	low (STR_4| (0+32768))
  2246  0475  00B4               	movwf	LCD5110_writeText@characters
  2247  0476  3091               	movlw	high (STR_4| (0+32768))
  2248  0477  00B5               	movwf	LCD5110_writeText@characters+1
  2249  0478  01B6               	clrf	LCD5110_writeText@dispType
  2250  0479  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2251                           
  2252                           ;College_bell.c: 87: LCD5110_writeText(FONT_3x5,3,32, 5,6,time, 0x00);
  2253  047E  3012               	movlw	low (_FONT_3x5| (0+32768))
  2254  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0481  00AE               	movwf	LCD5110_writeText@userFont
  2257  0482  3090               	movlw	high (_FONT_3x5| (0+32768))
  2258  0483  00AF               	movwf	LCD5110_writeText@userFont+1
  2259  0484  3003               	movlw	3
  2260  0485  00CC               	movwf	??_main
  2261  0486  084C               	movf	??_main,w
  2262  0487  00B0               	movwf	LCD5110_writeText@fontWidth
  2263  0488  3020               	movlw	32
  2264  0489  00CD               	movwf	??_main+1
  2265  048A  084D               	movf	??_main+1,w
  2266  048B  00B1               	movwf	LCD5110_writeText@fontOffset
  2267  048C  3005               	movlw	5
  2268  048D  00CE               	movwf	??_main+2
  2269  048E  084E               	movf	??_main+2,w
  2270  048F  00B2               	movwf	LCD5110_writeText@row
  2271  0490  3006               	movlw	6
  2272  0491  00CF               	movwf	??_main+3
  2273  0492  084F               	movf	??_main+3,w
  2274  0493  00B3               	movwf	LCD5110_writeText@col
  2275  0494  30C0               	movlw	(low (main@time| 0))& (0+255)
  2276  0495  00B4               	movwf	LCD5110_writeText@characters
  2277  0496  3000               	movlw	0
  2278  0497  00B5               	movwf	LCD5110_writeText@characters+1
  2279  0498  01B6               	clrf	LCD5110_writeText@dispType
  2280  0499  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2281                           
  2282                           ;College_bell.c: 95: if(lastwriteaddr!=0){
  2283  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2284  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2285  04A0  086D               	movf	_lastwriteaddr^(0+128),w
  2286  04A1  1903               	btfsc	3,2
  2287  04A2  2D36               	goto	l4402
  2288                           
  2289                           ;College_bell.c: 97: lastwritecount = lastwriteaddr;
  2290  04A3  086D               	movf	_lastwriteaddr^(0+128),w
  2291  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2292  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2293  04A6  00CC               	movwf	??_main
  2294  04A7  01CD               	clrf	??_main+1
  2295  04A8  084C               	movf	??_main,w
  2296  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2297  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  2298  04AB  00EB               	movwf	_lastwritecount^(0+128)
  2299  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2300  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2301  04AE  084D               	movf	??_main+1,w
  2302  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  2303  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  2304  04B1  00EC               	movwf	(_lastwritecount+1)^(0+128)
  2305  04B2                     l4400:	
  2306                           ;College_bell.c: 98: while(lastwritecount !=0) {
  2307                           
  2308  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2309  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  2310  04B4  086B               	movf	_lastwritecount^(0+128),w
  2311  04B5  046C               	iorwf	(_lastwritecount+1)^(0+128),w
  2312  04B6  1903               	btfsc	3,2
  2313  04B7  2D36               	goto	l4402
  2314                           
  2315                           ;College_bell.c: 99: lastwritecount -=2;
  2316  04B8  3002               	movlw	2
  2317  04B9  02EB               	subwf	_lastwritecount^(0+128),f
  2318  04BA  3000               	movlw	0
  2319  04BB  1C03               	skipc
  2320  04BC  03EC               	decf	(_lastwritecount+1)^(0+128),f
  2321  04BD  02EC               	subwf	(_lastwritecount+1)^(0+128),f
  2322                           
  2323                           ;College_bell.c: 100: ReadArrayFromRAM(time2);
  2324  04BE  30AC               	movlw	(low (main@time2| 0))& (0+255)
  2325  04BF  160A  118A  2672  120A  118A  	fcall	_ReadArrayFromRAM
  2326                           
  2327                           ;College_bell.c: 103: serialWriteText(time2);
  2328  04C4  30AC               	movlw	(low (main@time2| 0))& (0+255)
  2329  04C5  00F3               	movwf	serialWriteText@Sertxxt
  2330  04C6  3000               	movlw	0
  2331  04C7  00F4               	movwf	serialWriteText@Sertxxt+1
  2332  04C8  160A  158A  270E  120A  118A  	fcall	_serialWriteText
  2333                           
  2334                           ;College_bell.c: 104: serialWriteText("\r\n");
  2335  04CD  30E8               	movlw	low (STR_5| (0+32768))
  2336  04CE  00F3               	movwf	serialWriteText@Sertxxt
  2337  04CF  3091               	movlw	high (STR_5| (0+32768))
  2338  04D0  00F4               	movwf	serialWriteText@Sertxxt+1
  2339  04D1  160A  158A  270E  120A  118A  	fcall	_serialWriteText
  2340                           
  2341                           ;College_bell.c: 105: if(compareTimeArray(time,time2,5)==1){
  2342  04D6  30AC               	movlw	(low (main@time2| 0))& (0+255)
  2343  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2344  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2345  04D9  00CC               	movwf	??_main
  2346  04DA  084C               	movf	??_main,w
  2347  04DB  00F0               	movwf	compareTimeArray@time2
  2348  04DC  3005               	movlw	5
  2349  04DD  00F1               	movwf	compareTimeArray@size
  2350  04DE  3000               	movlw	0
  2351  04DF  00F2               	movwf	compareTimeArray@size+1
  2352  04E0  30C0               	movlw	(low (main@time| 0))& (0+255)
  2353  04E1  160A  158A  26E5  120A  118A  	fcall	_compareTimeArray
  2354  04E6  3A01               	xorlw	1
  2355  04E7  1D03               	skipz
  2356  04E8  2D10               	goto	l4396
  2357                           
  2358                           ;College_bell.c: 108: LCD5110_writeText(FONT_3x5,3,32, 6,1,"BREAK TIME KIDS", 0x00);
  2359  04E9  3012               	movlw	low (_FONT_3x5| (0+32768))
  2360  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2361  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2362  04EC  00AE               	movwf	LCD5110_writeText@userFont
  2363  04ED  3090               	movlw	high (_FONT_3x5| (0+32768))
  2364  04EE  00AF               	movwf	LCD5110_writeText@userFont+1
  2365  04EF  3003               	movlw	3
  2366  04F0  00CC               	movwf	??_main
  2367  04F1  084C               	movf	??_main,w
  2368  04F2  00B0               	movwf	LCD5110_writeText@fontWidth
  2369  04F3  3020               	movlw	32
  2370  04F4  00CD               	movwf	??_main+1
  2371  04F5  084D               	movf	??_main+1,w
  2372  04F6  00B1               	movwf	LCD5110_writeText@fontOffset
  2373  04F7  3006               	movlw	6
  2374  04F8  00CE               	movwf	??_main+2
  2375  04F9  084E               	movf	??_main+2,w
  2376  04FA  00B2               	movwf	LCD5110_writeText@row
  2377  04FB  01B3               	clrf	LCD5110_writeText@col
  2378  04FC  0AB3               	incf	LCD5110_writeText@col,f
  2379  04FD  30A5               	movlw	low (STR_6| (0+32768))
  2380  04FE  00B4               	movwf	LCD5110_writeText@characters
  2381  04FF  3091               	movlw	high (STR_6| (0+32768))
  2382  0500  00B5               	movwf	LCD5110_writeText@characters+1
  2383  0501  01B6               	clrf	LCD5110_writeText@dispType
  2384  0502  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2385                           
  2386                           ;College_bell.c: 110: PinSelect(6,1);
  2387  0507  01F0               	clrf	PinSelect@segState
  2388  0508  0AF0               	incf	PinSelect@segState,f
  2389  0509  3006               	movlw	6
  2390  050A  120A  158A  22B9  120A  118A  	fcall	_PinSelect
  2391                           
  2392                           ;College_bell.c: 115: }else{
  2393  050F  2CB2               	goto	l4400
  2394  0510                     l4396:	
  2395                           
  2396                           ;College_bell.c: 116: PinSelect(6,0);
  2397  0510  01F0               	clrf	PinSelect@segState
  2398  0511  3006               	movlw	6
  2399  0512  120A  158A  22B9  120A  118A  	fcall	_PinSelect
  2400                           
  2401                           ;College_bell.c: 117: LCD5110_writeText(FONT_3x5,3,32, 6,1,"               ", 0x00);
  2402  0517  3012               	movlw	low (_FONT_3x5| (0+32768))
  2403  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2405  051A  00AE               	movwf	LCD5110_writeText@userFont
  2406  051B  3090               	movlw	high (_FONT_3x5| (0+32768))
  2407  051C  00AF               	movwf	LCD5110_writeText@userFont+1
  2408  051D  3003               	movlw	3
  2409  051E  00CC               	movwf	??_main
  2410  051F  084C               	movf	??_main,w
  2411  0520  00B0               	movwf	LCD5110_writeText@fontWidth
  2412  0521  3020               	movlw	32
  2413  0522  00CD               	movwf	??_main+1
  2414  0523  084D               	movf	??_main+1,w
  2415  0524  00B1               	movwf	LCD5110_writeText@fontOffset
  2416  0525  3006               	movlw	6
  2417  0526  00CE               	movwf	??_main+2
  2418  0527  084E               	movf	??_main+2,w
  2419  0528  00B2               	movwf	LCD5110_writeText@row
  2420  0529  01B3               	clrf	LCD5110_writeText@col
  2421  052A  0AB3               	incf	LCD5110_writeText@col,f
  2422  052B  3055               	movlw	low (STR_7| (0+32768))
  2423  052C  00B4               	movwf	LCD5110_writeText@characters
  2424  052D  3091               	movlw	high (STR_7| (0+32768))
  2425  052E  00B5               	movwf	LCD5110_writeText@characters+1
  2426  052F  01B6               	clrf	LCD5110_writeText@dispType
  2427  0530  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2428  0535  2CB2               	goto	l4400
  2429  0536                     l4402:	
  2430                           
  2431                           ;College_bell.c: 118: }
  2432                           ;College_bell.c: 119: }
  2433                           ;College_bell.c: 120: }
  2434                           ;College_bell.c: 124: Keys=getKey();
  2435  0536  120A  158A  24E9  120A  118A  	fcall	_getKey
  2436  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2437  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2438  053D  00CC               	movwf	??_main
  2439  053E  084C               	movf	??_main,w
  2440  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0540  1303               	bcf	3,6	;RP1=0, select bank1
  2442  0541  00D0               	movwf	main@Keys^(0+128)
  2443                           
  2444                           ;College_bell.c: 125: if(Keys=='*'){
  2445  0542  302A               	movlw	42
  2446  0543  0650               	xorwf	main@Keys^(0+128),w
  2447  0544  1D03               	btfss	3,2
  2448  0545  2F50               	goto	l4492
  2449                           
  2450                           ;College_bell.c: 126: char back;
  2451                           ;College_bell.c: 127: lastwriteaddr=0;
  2452  0546  01ED               	clrf	_lastwriteaddr^(0+128)
  2453                           
  2454                           ;College_bell.c: 128: LCD_clear();
  2455  0547  160A  158A  25F4  120A  118A  	fcall	_LCD_clear
  2456                           
  2457                           ;College_bell.c: 130: LCD5110_writeText(FONT_3x5,3,32, 1,1,"PRESS # FOR BACK", 0x00);
  2458  054C  3012               	movlw	low (_FONT_3x5| (0+32768))
  2459  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2460  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2461  054F  00AE               	movwf	LCD5110_writeText@userFont
  2462  0550  3090               	movlw	high (_FONT_3x5| (0+32768))
  2463  0551  00AF               	movwf	LCD5110_writeText@userFont+1
  2464  0552  3003               	movlw	3
  2465  0553  00CC               	movwf	??_main
  2466  0554  084C               	movf	??_main,w
  2467  0555  00B0               	movwf	LCD5110_writeText@fontWidth
  2468  0556  3020               	movlw	32
  2469  0557  00CD               	movwf	??_main+1
  2470  0558  084D               	movf	??_main+1,w
  2471  0559  00B1               	movwf	LCD5110_writeText@fontOffset
  2472  055A  01B2               	clrf	LCD5110_writeText@row
  2473  055B  0AB2               	incf	LCD5110_writeText@row,f
  2474  055C  01B3               	clrf	LCD5110_writeText@col
  2475  055D  0AB3               	incf	LCD5110_writeText@col,f
  2476  055E  3044               	movlw	low (STR_8| (0+32768))
  2477  055F  00B4               	movwf	LCD5110_writeText@characters
  2478  0560  3091               	movlw	high (STR_8| (0+32768))
  2479  0561  00B5               	movwf	LCD5110_writeText@characters+1
  2480  0562  01B6               	clrf	LCD5110_writeText@dispType
  2481  0563  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2482                           
  2483                           ;College_bell.c: 131: LCD5110_writeText(FONT_3x5,3,32, 2,1,"ENTER NO OF RINGS", 0x00);
  2484  0568  3012               	movlw	low (_FONT_3x5| (0+32768))
  2485  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2486  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2487  056B  00AE               	movwf	LCD5110_writeText@userFont
  2488  056C  3090               	movlw	high (_FONT_3x5| (0+32768))
  2489  056D  00AF               	movwf	LCD5110_writeText@userFont+1
  2490  056E  3003               	movlw	3
  2491  056F  00CC               	movwf	??_main
  2492  0570  084C               	movf	??_main,w
  2493  0571  00B0               	movwf	LCD5110_writeText@fontWidth
  2494  0572  3020               	movlw	32
  2495  0573  00CD               	movwf	??_main+1
  2496  0574  084D               	movf	??_main+1,w
  2497  0575  00B1               	movwf	LCD5110_writeText@fontOffset
  2498  0576  3002               	movlw	2
  2499  0577  00CE               	movwf	??_main+2
  2500  0578  084E               	movf	??_main+2,w
  2501  0579  00B2               	movwf	LCD5110_writeText@row
  2502  057A  01B3               	clrf	LCD5110_writeText@col
  2503  057B  0AB3               	incf	LCD5110_writeText@col,f
  2504  057C  3032               	movlw	low (STR_9| (0+32768))
  2505  057D  00B4               	movwf	LCD5110_writeText@characters
  2506  057E  3091               	movlw	high (STR_9| (0+32768))
  2507  057F  00B5               	movwf	LCD5110_writeText@characters+1
  2508  0580  01B6               	clrf	LCD5110_writeText@dispType
  2509  0581  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2510                           
  2511                           ;College_bell.c: 134: Keys=getKey();
  2512  0586  120A  158A  24E9  120A  118A  	fcall	_getKey
  2513  058B                     L1:	
  2514  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2515  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2516  058D  00CC               	movwf	??_main
  2517  058E  084C               	movf	??_main,w
  2518  058F  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0590  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0591  00D0               	movwf	main@Keys^(0+128)
  2521  0592                     l4490:	
  2522  0592  3023               	movlw	35
  2523  0593  0650               	xorwf	main@Keys^(0+128),w
  2524  0594  1903               	btfsc	3,2
  2525  0595  2F50               	goto	l4492
  2526                           
  2527                           ;College_bell.c: 136: unsigned char counter=0;
  2528                           
  2529                           ;College_bell.c: 135: while(Keys !='#'){
  2530  0596  01CA               	clrf	main@counter^(0+128)
  2531                           
  2532                           ;College_bell.c: 137: while(Keys !='*'){
  2533  0597  2DFA               	goto	l4436
  2534  0598                     l4418:	
  2535                           ;College_bell.c: 143: case '0': case '1': case '2': case '3': case '4':
  2536                           
  2537                           ;College_bell.c: 141: break;
  2538                           
  2539                           ;College_bell.c: 139: {
  2540                           ;College_bell.c: 140: case 0:
  2541                           
  2542                           ;College_bell.c: 138: switch (Keys)
  2543                           
  2544                           
  2545                           ;College_bell.c: 144: case '5': case '6': case '7': case '8': case '9':
  2546                           ;College_bell.c: 145: ringsno[counter]= Keys;
  2547  0598  30A0               	movlw	low main@ringsno
  2548  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2549  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2550  059B  00CC               	movwf	??_main
  2551  059C  3000               	movlw	high main@ringsno
  2552  059D  00CD               	movwf	??_main+1
  2553  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2554  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2555  05A0  084A               	movf	main@counter^(0+128),w
  2556  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2557  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2558  05A3  074C               	addwf	??_main,w
  2559  05A4  00CE               	movwf	??_main+2
  2560  05A5  3000               	movlw	0
  2561  05A6  1803               	skipnc
  2562  05A7  3001               	movlw	1
  2563  05A8  074D               	addwf	??_main+1,w
  2564  05A9  00CF               	movwf	??_main+3
  2565  05AA  084E               	movf	??_main+2,w
  2566  05AB  0084               	movwf	4
  2567  05AC  1383               	bcf	3,7
  2568  05AD  184F               	btfsc	??_main+3,0
  2569  05AE  1783               	bsf	3,7
  2570  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  2571  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  2572  05B1  0850               	movf	main@Keys^(0+128),w
  2573  05B2  0080               	movwf	0
  2574                           
  2575                           ;College_bell.c: 146: ++counter;
  2576  05B3  3001               	movlw	1
  2577  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2578  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2579  05B6  00CC               	movwf	??_main
  2580  05B7  084C               	movf	??_main,w
  2581  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  2582  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  2583  05BA  07CA               	addwf	main@counter^(0+128),f
  2584                           
  2585                           ;College_bell.c: 148: }
  2586                           
  2587                           ;College_bell.c: 147: break;
  2588  05BB  2DDF               	goto	l4426
  2589  05BC                     l4424:	
  2590  05BC  0850               	movf	main@Keys^(0+128),w
  2591                           
  2592                           ; Switch size 1, requested type "space"
  2593                           ; Number of cases is 11, Range of values is 0 to 57
  2594                           ; switch strategies available:
  2595                           ; Name         Instructions Cycles
  2596                           ; simple_byte           34    18 (average)
  2597                           ; direct_byte          182     8 (fixed)
  2598                           ; jumptable            260     6 (fixed)
  2599                           ;	Chosen strategy is simple_byte
  2600  05BD  3A00               	xorlw	0	; case 0
  2601  05BE  1903               	skipnz
  2602  05BF  2DDF               	goto	l4426
  2603  05C0  3A30               	xorlw	48	; case 48
  2604  05C1  1903               	skipnz
  2605  05C2  2D98               	goto	l4418
  2606  05C3  3A01               	xorlw	1	; case 49
  2607  05C4  1903               	skipnz
  2608  05C5  2D98               	goto	l4418
  2609  05C6  3A03               	xorlw	3	; case 50
  2610  05C7  1903               	skipnz
  2611  05C8  2D98               	goto	l4418
  2612  05C9  3A01               	xorlw	1	; case 51
  2613  05CA  1903               	skipnz
  2614  05CB  2D98               	goto	l4418
  2615  05CC  3A07               	xorlw	7	; case 52
  2616  05CD  1903               	skipnz
  2617  05CE  2D98               	goto	l4418
  2618  05CF  3A01               	xorlw	1	; case 53
  2619  05D0  1903               	skipnz
  2620  05D1  2D98               	goto	l4418
  2621  05D2  3A03               	xorlw	3	; case 54
  2622  05D3  1903               	skipnz
  2623  05D4  2D98               	goto	l4418
  2624  05D5  3A01               	xorlw	1	; case 55
  2625  05D6  1903               	skipnz
  2626  05D7  2D98               	goto	l4418
  2627  05D8  3A0F               	xorlw	15	; case 56
  2628  05D9  1903               	skipnz
  2629  05DA  2D98               	goto	l4418
  2630  05DB  3A01               	xorlw	1	; case 57
  2631  05DC  1903               	skipnz
  2632  05DD  2D98               	goto	l4418
  2633  05DE  2DDF               	goto	l4426
  2634  05DF                     l4426:	
  2635                           
  2636                           ;College_bell.c: 149: Keys=getKey();
  2637  05DF  120A  158A  24E9  120A  118A  	fcall	_getKey
  2638  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2639  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2640  05E6  00CC               	movwf	??_main
  2641  05E7  084C               	movf	??_main,w
  2642  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2643  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2644  05EA  00D0               	movwf	main@Keys^(0+128)
  2645                           
  2646                           ;College_bell.c: 150: back = 0;
  2647  05EB  01BE               	clrf	main@back^(0+128)
  2648                           
  2649                           ;College_bell.c: 152: if(Keys == '#'){
  2650  05EC  3023               	movlw	35
  2651  05ED  0650               	xorwf	main@Keys^(0+128),w
  2652  05EE  1D03               	btfss	3,2
  2653  05EF  2DFA               	goto	l4436
  2654                           
  2655                           ;College_bell.c: 153: back =1; Keys = '*';
  2656  05F0  01BE               	clrf	main@back^(0+128)
  2657  05F1  0ABE               	incf	main@back^(0+128),f
  2658  05F2  302A               	movlw	42
  2659  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2660  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2661  05F5  00CC               	movwf	??_main
  2662  05F6  084C               	movf	??_main,w
  2663  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  2664  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  2665  05F9  00D0               	movwf	main@Keys^(0+128)
  2666  05FA                     l4436:	
  2667  05FA  302A               	movlw	42
  2668  05FB  0650               	xorwf	main@Keys^(0+128),w
  2669  05FC  1D03               	btfss	3,2
  2670  05FD  2DBC               	goto	l4424
  2671                           
  2672                           ;College_bell.c: 154: }
  2673                           ;College_bell.c: 155: }
  2674                           ;College_bell.c: 156: if(back == 0){
  2675  05FE  083E               	movf	main@back^(0+128),w
  2676  05FF  1D03               	btfss	3,2
  2677  0600  2F4E               	goto	l4488
  2678                           
  2679                           ;College_bell.c: 157: ringsno[counter]='\0';
  2680  0601  30A0               	movlw	low main@ringsno
  2681  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0604  00CC               	movwf	??_main
  2684  0605  3000               	movlw	high main@ringsno
  2685  0606  00CD               	movwf	??_main+1
  2686  0607  1683               	bsf	3,5	;RP0=1, select bank1
  2687  0608  1303               	bcf	3,6	;RP1=0, select bank1
  2688  0609  084A               	movf	main@counter^(0+128),w
  2689  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2690  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2691  060C  074C               	addwf	??_main,w
  2692  060D  00CE               	movwf	??_main+2
  2693  060E  3000               	movlw	0
  2694  060F  1803               	skipnc
  2695  0610  3001               	movlw	1
  2696  0611  074D               	addwf	??_main+1,w
  2697  0612  00CF               	movwf	??_main+3
  2698  0613  084E               	movf	??_main+2,w
  2699  0614  0084               	movwf	4
  2700  0615  1783               	bsf	3,7
  2701  0616  1C4F               	btfss	??_main+3,0
  2702  0617  1383               	bcf	3,7
  2703  0618  0180               	clrf	0
  2704                           
  2705                           ;College_bell.c: 158: LCD5110_writeText(FONT_3x5,3,32, 3,3,"NO:", 0x00);
  2706  0619  3012               	movlw	low (_FONT_3x5| (0+32768))
  2707  061A  00AE               	movwf	LCD5110_writeText@userFont
  2708  061B  3090               	movlw	high (_FONT_3x5| (0+32768))
  2709  061C  00AF               	movwf	LCD5110_writeText@userFont+1
  2710  061D  3003               	movlw	3
  2711  061E  00CC               	movwf	??_main
  2712  061F  084C               	movf	??_main,w
  2713  0620  00B0               	movwf	LCD5110_writeText@fontWidth
  2714  0621  3020               	movlw	32
  2715  0622  00CD               	movwf	??_main+1
  2716  0623  084D               	movf	??_main+1,w
  2717  0624  00B1               	movwf	LCD5110_writeText@fontOffset
  2718  0625  3003               	movlw	3
  2719  0626  00CE               	movwf	??_main+2
  2720  0627  084E               	movf	??_main+2,w
  2721  0628  00B2               	movwf	LCD5110_writeText@row
  2722  0629  3003               	movlw	3
  2723  062A  00CF               	movwf	??_main+3
  2724  062B  084F               	movf	??_main+3,w
  2725  062C  00B3               	movwf	LCD5110_writeText@col
  2726  062D  30E4               	movlw	low (STR_10| (0+32768))
  2727  062E  00B4               	movwf	LCD5110_writeText@characters
  2728  062F  3091               	movlw	high (STR_10| (0+32768))
  2729  0630  00B5               	movwf	LCD5110_writeText@characters+1
  2730  0631  01B6               	clrf	LCD5110_writeText@dispType
  2731  0632  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2732                           
  2733                           ;College_bell.c: 159: LCD5110_writeText(FONT_3x5,3,32, 3,7,ringsno, 0x00);
  2734  0637  3012               	movlw	low (_FONT_3x5| (0+32768))
  2735  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2737  063A  00AE               	movwf	LCD5110_writeText@userFont
  2738  063B  3090               	movlw	high (_FONT_3x5| (0+32768))
  2739  063C  00AF               	movwf	LCD5110_writeText@userFont+1
  2740  063D  3003               	movlw	3
  2741  063E  00CC               	movwf	??_main
  2742  063F  084C               	movf	??_main,w
  2743  0640  00B0               	movwf	LCD5110_writeText@fontWidth
  2744  0641  3020               	movlw	32
  2745  0642  00CD               	movwf	??_main+1
  2746  0643  084D               	movf	??_main+1,w
  2747  0644  00B1               	movwf	LCD5110_writeText@fontOffset
  2748  0645  3003               	movlw	3
  2749  0646  00CE               	movwf	??_main+2
  2750  0647  084E               	movf	??_main+2,w
  2751  0648  00B2               	movwf	LCD5110_writeText@row
  2752  0649  3007               	movlw	7
  2753  064A  00CF               	movwf	??_main+3
  2754  064B  084F               	movf	??_main+3,w
  2755  064C  00B3               	movwf	LCD5110_writeText@col
  2756  064D  30A0               	movlw	low main@ringsno
  2757  064E  00B4               	movwf	LCD5110_writeText@characters
  2758  064F  3000               	movlw	high main@ringsno
  2759  0650  00B5               	movwf	LCD5110_writeText@characters+1
  2760  0651  01B6               	clrf	LCD5110_writeText@dispType
  2761  0652  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2762                           
  2763                           ;College_bell.c: 166: char *myrings;
  2764                           ;College_bell.c: 167: myrings = ringsno;
  2765  0657  30A0               	movlw	low main@ringsno
  2766  0658  1683               	bsf	3,5	;RP0=1, select bank1
  2767  0659  1303               	bcf	3,6	;RP1=0, select bank1
  2768  065A  00BC               	movwf	main@myrings^(0+128)
  2769  065B  3000               	movlw	high main@ringsno
  2770  065C  00BD               	movwf	(main@myrings^(0+128)+1)
  2771                           
  2772                           ;College_bell.c: 168: for(unsigned char x=0; x<counter; x++){
  2773  065D  01BF               	clrf	main@x^(0+128)
  2774  065E                     l4456:	
  2775  065E  084A               	movf	main@counter^(0+128),w
  2776  065F  023F               	subwf	main@x^(0+128),w
  2777  0660  1803               	btfsc	3,0
  2778  0661  2E92               	goto	l4458
  2779                           
  2780                           ;College_bell.c: 170: Ringsno1 = (10*(Ringsno1) + keypadMap[*(myrings++)-'0']);
  2781  0662  083C               	movf	main@myrings^(0+128),w
  2782  0663  0084               	movwf	4
  2783  0664  1783               	bsf	3,7
  2784  0665  1C3D               	btfss	(main@myrings+1)^(0+128),0
  2785  0666  1383               	bcf	3,7
  2786  0667  0800               	movf	0,w
  2787  0668  3ED0               	addlw	208
  2788  0669  3ED1               	addlw	(low (_keypadMap| 0))& (0+255)
  2789  066A  0084               	movwf	4
  2790  066B  084F               	movf	(main@Ringsno1+1)^(0+128),w
  2791  066C  00F1               	movwf	___wmul@multiplier+1
  2792  066D  084E               	movf	main@Ringsno1^(0+128),w
  2793  066E  00F0               	movwf	___wmul@multiplier
  2794  066F  300A               	movlw	10
  2795  0670  00F2               	movwf	___wmul@multiplicand
  2796  0671  3000               	movlw	0
  2797  0672  00F3               	movwf	___wmul@multiplicand+1
  2798  0673  160A  158A  264F  120A  118A  	fcall	___wmul
  2799  0678  1383               	bcf	3,7	;select IRP bank1
  2800  0679  0800               	movf	0,w
  2801  067A  0770               	addwf	?___wmul,w
  2802  067B  1683               	bsf	3,5	;RP0=1, select bank1
  2803  067C  1303               	bcf	3,6	;RP1=0, select bank1
  2804  067D  00CE               	movwf	main@Ringsno1^(0+128)
  2805  067E  3000               	movlw	0
  2806  067F  1803               	skipnc
  2807  0680  3001               	movlw	1
  2808  0681  0771               	addwf	?___wmul+1,w
  2809  0682  00CF               	movwf	(main@Ringsno1+1)^(0+128)
  2810  0683  3001               	movlw	1
  2811  0684  07BC               	addwf	main@myrings^(0+128),f
  2812  0685  1803               	skipnc
  2813  0686  0ABD               	incf	(main@myrings+1)^(0+128),f
  2814  0687  3000               	movlw	0
  2815  0688  07BD               	addwf	(main@myrings+1)^(0+128),f
  2816  0689  3001               	movlw	1
  2817  068A  1283               	bcf	3,5	;RP0=0, select bank0
  2818  068B  1303               	bcf	3,6	;RP1=0, select bank0
  2819  068C  00CC               	movwf	??_main
  2820  068D  084C               	movf	??_main,w
  2821  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2822  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2823  0690  07BF               	addwf	main@x^(0+128),f
  2824  0691  2E5E               	goto	l4456
  2825  0692                     l4458:	
  2826                           
  2827                           ;College_bell.c: 171: }
  2828                           ;College_bell.c: 173: if(Ringsno1 == 0) { LCD5110_writeText(FONT_3x5,3,32, 4,2,"NOT VALI
      +                          D", 0x00);Keys = '#'; _delay((unsigned long)((1000)*(20000000/4000.0))); Ringsno1 = 0;}
  2829  0692  084E               	movf	main@Ringsno1^(0+128),w
  2830  0693  044F               	iorwf	(main@Ringsno1+1)^(0+128),w
  2831  0694  1D03               	btfss	3,2
  2832  0695  2ED1               	goto	l4468
  2833  0696  3012               	movlw	low (_FONT_3x5| (0+32768))
  2834  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0699  00AE               	movwf	LCD5110_writeText@userFont
  2837  069A  3090               	movlw	high (_FONT_3x5| (0+32768))
  2838  069B  00AF               	movwf	LCD5110_writeText@userFont+1
  2839  069C  3003               	movlw	3
  2840  069D  00CC               	movwf	??_main
  2841  069E  084C               	movf	??_main,w
  2842  069F  00B0               	movwf	LCD5110_writeText@fontWidth
  2843  06A0  3020               	movlw	32
  2844  06A1  00CD               	movwf	??_main+1
  2845  06A2  084D               	movf	??_main+1,w
  2846  06A3  00B1               	movwf	LCD5110_writeText@fontOffset
  2847  06A4  3004               	movlw	4
  2848  06A5  00CE               	movwf	??_main+2
  2849  06A6  084E               	movf	??_main+2,w
  2850  06A7  00B2               	movwf	LCD5110_writeText@row
  2851  06A8  3002               	movlw	2
  2852  06A9  00CF               	movwf	??_main+3
  2853  06AA  084F               	movf	??_main+3,w
  2854  06AB  00B3               	movwf	LCD5110_writeText@col
  2855  06AC  30C0               	movlw	low (STR_11| (0+32768))
  2856  06AD  00B4               	movwf	LCD5110_writeText@characters
  2857  06AE  3091               	movlw	high (STR_11| (0+32768))
  2858  06AF  00B5               	movwf	LCD5110_writeText@characters+1
  2859  06B0  01B6               	clrf	LCD5110_writeText@dispType
  2860  06B1  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2861  06B6  3023               	movlw	35
  2862  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2863  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2864  06B9  00CC               	movwf	??_main
  2865  06BA  084C               	movf	??_main,w
  2866  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  2867  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  2868  06BD  00D0               	movwf	main@Keys^(0+128)
  2869  06BE  301A               	movlw	26
  2870  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2871  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2872  06C1  00CE               	movwf	??_main+2
  2873  06C2  305E               	movlw	94
  2874  06C3  00CD               	movwf	??_main+1
  2875  06C4  3086               	movlw	134
  2876  06C5  00CC               	movwf	??_main
  2877  06C6                     u4177:	
  2878  06C6  0BCC               	decfsz	??_main,f
  2879  06C7  2EC6               	goto	u4177
  2880  06C8  0BCD               	decfsz	??_main+1,f
  2881  06C9  2EC6               	goto	u4177
  2882  06CA  0BCE               	decfsz	??_main+2,f
  2883  06CB  2EC6               	goto	u4177
  2884  06CC  0000               	nop
  2885  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  2886  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  2887  06CF  01CE               	clrf	main@Ringsno1^(0+128)
  2888  06D0  01CF               	clrf	(main@Ringsno1+1)^(0+128)
  2889  06D1                     l4468:	
  2890                           
  2891                           ;College_bell.c: 174: if(Ringsno1 > 15) { LCD5110_writeText(FONT_3x5,3,32, 4,1,"MAX-NO-E
      +                          XCEEDED", 0x00);Keys='#';_delay((unsigned long)((2000)*(20000000/4000.0))); Ringsno1 = 0
      +                          ;}
  2892  06D1  3000               	movlw	0
  2893  06D2  024F               	subwf	(main@Ringsno1+1)^(0+128),w
  2894  06D3  3010               	movlw	16
  2895  06D4  1903               	skipnz
  2896  06D5  024E               	subwf	main@Ringsno1^(0+128),w
  2897  06D6  1C03               	skipc
  2898  06D7  2F10               	goto	l4478
  2899  06D8  3012               	movlw	low (_FONT_3x5| (0+32768))
  2900  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2901  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2902  06DB  00AE               	movwf	LCD5110_writeText@userFont
  2903  06DC  3090               	movlw	high (_FONT_3x5| (0+32768))
  2904  06DD  00AF               	movwf	LCD5110_writeText@userFont+1
  2905  06DE  3003               	movlw	3
  2906  06DF  00CC               	movwf	??_main
  2907  06E0  084C               	movf	??_main,w
  2908  06E1  00B0               	movwf	LCD5110_writeText@fontWidth
  2909  06E2  3020               	movlw	32
  2910  06E3  00CD               	movwf	??_main+1
  2911  06E4  084D               	movf	??_main+1,w
  2912  06E5  00B1               	movwf	LCD5110_writeText@fontOffset
  2913  06E6  3004               	movlw	4
  2914  06E7  00CE               	movwf	??_main+2
  2915  06E8  084E               	movf	??_main+2,w
  2916  06E9  00B2               	movwf	LCD5110_writeText@row
  2917  06EA  01B3               	clrf	LCD5110_writeText@col
  2918  06EB  0AB3               	incf	LCD5110_writeText@col,f
  2919  06EC  3085               	movlw	low (STR_12| (0+32768))
  2920  06ED  00B4               	movwf	LCD5110_writeText@characters
  2921  06EE  3091               	movlw	high (STR_12| (0+32768))
  2922  06EF  00B5               	movwf	LCD5110_writeText@characters+1
  2923  06F0  01B6               	clrf	LCD5110_writeText@dispType
  2924  06F1  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  2925  06F6  3023               	movlw	35
  2926  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2927  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2928  06F9  00CC               	movwf	??_main
  2929  06FA  084C               	movf	??_main,w
  2930  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  2931  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  2932  06FD  00D0               	movwf	main@Keys^(0+128)
  2933  06FE  3033               	movlw	51
  2934  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0700  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0701  00CE               	movwf	??_main+2
  2937  0702  30BC               	movlw	188
  2938  0703  00CD               	movwf	??_main+1
  2939  0704  3010               	movlw	16
  2940  0705  00CC               	movwf	??_main
  2941  0706                     u4187:	
  2942  0706  0BCC               	decfsz	??_main,f
  2943  0707  2F06               	goto	u4187
  2944  0708  0BCD               	decfsz	??_main+1,f
  2945  0709  2F06               	goto	u4187
  2946  070A  0BCE               	decfsz	??_main+2,f
  2947  070B  2F06               	goto	u4187
  2948  070C  1683               	bsf	3,5	;RP0=1, select bank1
  2949  070D  1303               	bcf	3,6	;RP1=0, select bank1
  2950  070E  01CE               	clrf	main@Ringsno1^(0+128)
  2951  070F  01CF               	clrf	(main@Ringsno1+1)^(0+128)
  2952  0710                     l4478:	
  2953                           
  2954                           ;College_bell.c: 176: LCD_clear();
  2955  0710  160A  158A  25F4  120A  118A  	fcall	_LCD_clear
  2956                           
  2957                           ;College_bell.c: 178: lastwriteaddr=0;
  2958  0715  1683               	bsf	3,5	;RP0=1, select bank1
  2959  0716  1303               	bcf	3,6	;RP1=0, select bank1
  2960  0717  01ED               	clrf	_lastwriteaddr^(0+128)
  2961                           
  2962                           ;College_bell.c: 179: for(unsigned char x=1; x<=Ringsno1;x++){
  2963  0718  01C9               	clrf	main@x_522^(0+128)
  2964  0719  0AC9               	incf	main@x_522^(0+128),f
  2965  071A                     l4486:	
  2966  071A  0849               	movf	main@x_522^(0+128),w
  2967  071B  1283               	bcf	3,5	;RP0=0, select bank0
  2968  071C  1303               	bcf	3,6	;RP1=0, select bank0
  2969  071D  00CC               	movwf	??_main
  2970  071E  01CD               	clrf	??_main+1
  2971  071F  084D               	movf	??_main+1,w
  2972  0720  1683               	bsf	3,5	;RP0=1, select bank1
  2973  0721  1303               	bcf	3,6	;RP1=0, select bank1
  2974  0722  024F               	subwf	(main@Ringsno1+1)^(0+128),w
  2975  0723  1D03               	skipz
  2976  0724  2F2B               	goto	u4135
  2977  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0727  084C               	movf	??_main,w
  2980  0728  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0729  1303               	bcf	3,6	;RP1=0, select bank1
  2982  072A  024E               	subwf	main@Ringsno1^(0+128),w
  2983  072B                     u4135:	
  2984  072B  1C03               	btfss	3,0
  2985  072C  2D92               	goto	l4490
  2986                           
  2987                           ;College_bell.c: 180: Keys = readAndStore(time,x);
  2988  072D  0849               	movf	main@x_522^(0+128),w
  2989  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2990  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0730  00CC               	movwf	??_main
  2992  0731  084C               	movf	??_main,w
  2993  0732  00C1               	movwf	readAndStore@x
  2994  0733  30C0               	movlw	(low (main@time| 0))& (0+255)
  2995  0734  120A  118A  2132  120A  118A  	fcall	_readAndStore
  2996  0739  1283               	bcf	3,5	;RP0=0, select bank0
  2997  073A  1303               	bcf	3,6	;RP1=0, select bank0
  2998  073B  00CD               	movwf	??_main+1
  2999  073C  084D               	movf	??_main+1,w
  3000  073D  1683               	bsf	3,5	;RP0=1, select bank1
  3001  073E  1303               	bcf	3,6	;RP1=0, select bank1
  3002  073F  00D0               	movwf	main@Keys^(0+128)
  3003                           
  3004                           ;College_bell.c: 181: LCD_clear();
  3005  0740  160A  158A  25F4  120A  118A  	fcall	_LCD_clear
  3006  0745  3001               	movlw	1
  3007  0746  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0747  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0748  00CC               	movwf	??_main
  3010  0749  084C               	movf	??_main,w
  3011  074A  1683               	bsf	3,5	;RP0=1, select bank1
  3012  074B  1303               	bcf	3,6	;RP1=0, select bank1
  3013  074C  07C9               	addwf	main@x_522^(0+128),f
  3014  074D  2F1A               	goto	l4486
  3015  074E                     l4488:	
  3016                           ;College_bell.c: 182: }
  3017                           ;College_bell.c: 183: }else{ Keys ='#';
  3018                           
  3019  074E  3023               	movlw	35
  3020  074F  2D8B               	goto	L1
  3021  0750                     l4492:	
  3022                           
  3023                           ;College_bell.c: 184: }
  3024                           ;College_bell.c: 185: }
  3025                           ;College_bell.c: 186: }
  3026                           ;College_bell.c: 188: if(Keys == '0'){
  3027  0750  3030               	movlw	48
  3028  0751  0650               	xorwf	main@Keys^(0+128),w
  3029  0752  1D03               	btfss	3,2
  3030  0753  2B9C               	goto	l4352
  3031                           
  3032                           ;College_bell.c: 189: if(SetupTime(time)){
  3033  0754  30C0               	movlw	(low (main@time| 0))& (0+255)
  3034  0755  120A  158A  239E  120A  118A  	fcall	_SetupTime
  3035  075A  3A00               	xorlw	0
  3036  075B  1903               	skipnz
  3037  075C  2F92               	goto	l4502
  3038                           
  3039                           ;College_bell.c: 191: LCD5110_writeText(FONT_3x5,3,32, 5,3,"SAVE SUCESSFULL", 0x00);
  3040  075D  3012               	movlw	low (_FONT_3x5| (0+32768))
  3041  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3042  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0760  00AE               	movwf	LCD5110_writeText@userFont
  3044  0761  3090               	movlw	high (_FONT_3x5| (0+32768))
  3045  0762  00AF               	movwf	LCD5110_writeText@userFont+1
  3046  0763  3003               	movlw	3
  3047  0764  00CC               	movwf	??_main
  3048  0765  084C               	movf	??_main,w
  3049  0766  00B0               	movwf	LCD5110_writeText@fontWidth
  3050  0767  3020               	movlw	32
  3051  0768  00CD               	movwf	??_main+1
  3052  0769  084D               	movf	??_main+1,w
  3053  076A  00B1               	movwf	LCD5110_writeText@fontOffset
  3054  076B  3005               	movlw	5
  3055  076C  00CE               	movwf	??_main+2
  3056  076D  084E               	movf	??_main+2,w
  3057  076E  00B2               	movwf	LCD5110_writeText@row
  3058  076F  3003               	movlw	3
  3059  0770  00CF               	movwf	??_main+3
  3060  0771  084F               	movf	??_main+3,w
  3061  0772  00B3               	movwf	LCD5110_writeText@col
  3062  0773  3095               	movlw	low (STR_13| (0+32768))
  3063  0774  00B4               	movwf	LCD5110_writeText@characters
  3064  0775  3091               	movlw	high (STR_13| (0+32768))
  3065  0776  00B5               	movwf	LCD5110_writeText@characters+1
  3066  0777  01B6               	clrf	LCD5110_writeText@dispType
  3067  0778  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  3068                           
  3069                           ;College_bell.c: 192: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3070  077D  301A               	movlw	26
  3071  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3072  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0780  00CE               	movwf	??_main+2
  3074  0781  305E               	movlw	94
  3075  0782  00CD               	movwf	??_main+1
  3076  0783  3086               	movlw	134
  3077  0784  00CC               	movwf	??_main
  3078  0785                     u4197:	
  3079  0785  0BCC               	decfsz	??_main,f
  3080  0786  2F85               	goto	u4197
  3081  0787  0BCD               	decfsz	??_main+1,f
  3082  0788  2F85               	goto	u4197
  3083  0789  0BCE               	decfsz	??_main+2,f
  3084  078A  2F85               	goto	u4197
  3085  078B  0000               	nop
  3086                           
  3087                           ;College_bell.c: 193: LCD5110_clear();
  3088  078C  160A  118A  220D  120A  118A  	fcall	_LCD5110_clear
  3089                           
  3090                           ;College_bell.c: 194: }else{
  3091  0791  2B9C               	goto	l4352
  3092  0792                     l4502:	
  3093                           
  3094                           ;College_bell.c: 196: LCD5110_writeText(FONT_3x5,3,32, 5,3,"WRONG INPUT    ", 0x00);
  3095  0792  3012               	movlw	low (_FONT_3x5| (0+32768))
  3096  0793  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0794  1303               	bcf	3,6	;RP1=0, select bank0
  3098  0795  00AE               	movwf	LCD5110_writeText@userFont
  3099  0796  3090               	movlw	high (_FONT_3x5| (0+32768))
  3100  0797  00AF               	movwf	LCD5110_writeText@userFont+1
  3101  0798  3003               	movlw	3
  3102  0799  00CC               	movwf	??_main
  3103  079A  084C               	movf	??_main,w
  3104  079B  00B0               	movwf	LCD5110_writeText@fontWidth
  3105  079C  3020               	movlw	32
  3106  079D  00CD               	movwf	??_main+1
  3107  079E  084D               	movf	??_main+1,w
  3108  079F  00B1               	movwf	LCD5110_writeText@fontOffset
  3109  07A0  3005               	movlw	5
  3110  07A1  00CE               	movwf	??_main+2
  3111  07A2  084E               	movf	??_main+2,w
  3112  07A3  00B2               	movwf	LCD5110_writeText@row
  3113  07A4  3003               	movlw	3
  3114  07A5  00CF               	movwf	??_main+3
  3115  07A6  084F               	movf	??_main+3,w
  3116  07A7  00B3               	movwf	LCD5110_writeText@col
  3117  07A8  3075               	movlw	low (STR_14| (0+32768))
  3118  07A9  00B4               	movwf	LCD5110_writeText@characters
  3119  07AA  3091               	movlw	high (STR_14| (0+32768))
  3120  07AB  00B5               	movwf	LCD5110_writeText@characters+1
  3121  07AC  01B6               	clrf	LCD5110_writeText@dispType
  3122  07AD  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  3123                           
  3124                           ;College_bell.c: 197: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3125  07B2  301A               	movlw	26
  3126  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3127  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  3128  07B5  00CE               	movwf	??_main+2
  3129  07B6  305E               	movlw	94
  3130  07B7  00CD               	movwf	??_main+1
  3131  07B8  3086               	movlw	134
  3132  07B9  00CC               	movwf	??_main
  3133  07BA                     u4207:	
  3134  07BA  0BCC               	decfsz	??_main,f
  3135  07BB  2FBA               	goto	u4207
  3136  07BC  0BCD               	decfsz	??_main+1,f
  3137  07BD  2FBA               	goto	u4207
  3138  07BE  0BCE               	decfsz	??_main+2,f
  3139  07BF  2FBA               	goto	u4207
  3140  07C0  0000               	nop
  3141                           
  3142                           ;College_bell.c: 198: LCD5110_clear();
  3143  07C1  160A  118A  220D  120A  118A  	fcall	_LCD5110_clear
  3144  07C6  2B9C               	goto	l4352
  3145  07C7                     __end_of_main:	
  3146                           
  3147                           	psect	text1
  3148  1F0E                     __ptext1:	
  3149 ;; *************** function _serialWriteText *****************
  3150 ;; Defined at:
  3151 ;;		line 47 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Serial.h"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  Sertxxt         2    3[COMMON] PTR unsigned char 
  3154 ;;		 -> STR_5(3), main@time2(9), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  pnttter         1    6[COMMON] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         2       0       0       0       0
  3167 ;;      Locals:         1       0       0       0       0
  3168 ;;      Temps:          1       0       0       0       0
  3169 ;;      Totals:         4       0       0       0       0
  3170 ;;Total ram usage:        4 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    1
  3173 ;; This function calls:
  3174 ;;		_serialWrite
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _serialWriteText
  3182  1F0E                     _serialWriteText:	
  3183                           
  3184                           ;Serial.h: 48: unsigned char pnttter=0;
  3185                           
  3186                           ;incstack = 0
  3187                           ; Regs used in _serialWriteText: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3188  1F0E  01F6               	clrf	serialWriteText@pnttter
  3189  1F0F                     l3944:	
  3190                           ;Serial.h: 49: while(Sertxxt[pnttter] != 0)
  3191                           
  3192  1F0F  0876               	movf	serialWriteText@pnttter,w
  3193  1F10  0773               	addwf	serialWriteText@Sertxxt,w
  3194  1F11  0084               	movwf	4
  3195  1F12  0874               	movf	serialWriteText@Sertxxt+1,w
  3196  1F13  1803               	skipnc
  3197  1F14  0A74               	incf	serialWriteText@Sertxxt+1,w
  3198  1F15  1283               	bcf	3,5	;RP0=0, select bank0
  3199  1F16  1303               	bcf	3,6	;RP1=0, select bank0
  3200  1F17  00FF               	movwf	127
  3201  1F18  160A  118A  2000  160A  158A  	fcall	stringtab
  3202  1F1D  3A00               	xorlw	0
  3203  1F1E  1903               	btfsc	3,2
  3204  1F1F  0008               	return
  3205                           
  3206                           ;Serial.h: 50: serialWrite(Sertxxt[pnttter++]);
  3207  1F20  0876               	movf	serialWriteText@pnttter,w
  3208  1F21  0773               	addwf	serialWriteText@Sertxxt,w
  3209  1F22  0084               	movwf	4
  3210  1F23  0874               	movf	serialWriteText@Sertxxt+1,w
  3211  1F24  1803               	skipnc
  3212  1F25  0A74               	incf	serialWriteText@Sertxxt+1,w
  3213  1F26  1283               	bcf	3,5	;RP0=0, select bank0
  3214  1F27  1303               	bcf	3,6	;RP1=0, select bank0
  3215  1F28  00FF               	movwf	127
  3216  1F29  160A  118A  2000  160A  158A  	fcall	stringtab
  3217  1F2E  160A  158A  2598  160A  158A  	fcall	_serialWrite
  3218  1F33  3001               	movlw	1
  3219  1F34  00F5               	movwf	??_serialWriteText
  3220  1F35  0875               	movf	??_serialWriteText,w
  3221  1F36  07F6               	addwf	serialWriteText@pnttter,f
  3222  1F37  2F0F               	goto	l3944
  3223  1F38                     __end_of_serialWriteText:	
  3224                           
  3225                           	psect	text2
  3226  1D98                     __ptext2:	
  3227 ;; *************** function _serialWrite *****************
  3228 ;; Defined at:
  3229 ;;		line 40 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Serial.h"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  SerTx           1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  SerTx           1    2[COMMON] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         1       0       0       0       0
  3245 ;;      Temps:          2       0       0       0       0
  3246 ;;      Totals:         3       0       0       0       0
  3247 ;;Total ram usage:        3 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_serialWriteText
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _serialWrite
  3258  1D98                     _serialWrite:	
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _serialWrite: [wreg]
  3262                           ;serialWrite@SerTx stored from wreg
  3263  1D98  00F2               	movwf	serialWrite@SerTx
  3264                           
  3265                           ;Serial.h: 42: TXSTAbits.TXEN =1;
  3266  1D99  1683               	bsf	3,5	;RP0=1, select bank1
  3267  1D9A  1303               	bcf	3,6	;RP1=0, select bank1
  3268  1D9B  1698               	bsf	24,5	;volatile
  3269                           
  3270                           ;Serial.h: 43: TXREG = SerTx;
  3271  1D9C  0872               	movf	serialWrite@SerTx,w
  3272  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  3273  1D9E  1303               	bcf	3,6	;RP1=0, select bank0
  3274  1D9F  0099               	movwf	25	;volatile
  3275                           
  3276                           ;Serial.h: 44: _delay((unsigned long)((5)*(20000000/4000.0)));
  3277  1DA0  3021               	movlw	33
  3278  1DA1  00F1               	movwf	??_serialWrite+1
  3279  1DA2  3076               	movlw	118
  3280  1DA3  00F0               	movwf	??_serialWrite
  3281  1DA4                     u4217:	
  3282  1DA4  0BF0               	decfsz	??_serialWrite,f
  3283  1DA5  2DA4               	goto	u4217
  3284  1DA6  0BF1               	decfsz	??_serialWrite+1,f
  3285  1DA7  2DA4               	goto	u4217
  3286  1DA8  0000               	nop
  3287  1DA9  0008               	return
  3288  1DAA                     __end_of_serialWrite:	
  3289                           
  3290                           	psect	text3
  3291  153B                     __ptext3:	
  3292 ;; *************** function _serialBegin *****************
  3293 ;; Defined at:
  3294 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Serial.h"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  baudd           4    0[BANK0 ] const unsigned long 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3308 ;;      Params:         0       4       0       0       0
  3309 ;;      Locals:         0       0       0       0       0
  3310 ;;      Temps:          0      12       0       0       0
  3311 ;;      Totals:         0      16       0       0       0
  3312 ;;Total ram usage:       16 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    1
  3315 ;; This function calls:
  3316 ;;		___lldiv
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _serialBegin
  3324  153B                     _serialBegin:	
  3325                           
  3326                           ;Serial.h: 34: SPBRG = (20000000 - (baudd*16)) / (baudd*16);
  3327                           
  3328                           ;incstack = 0
  3329                           ; Regs used in _serialBegin: [wreg+status,2+status,0+pclath+cstack]
  3330  153B  1283               	bcf	3,5	;RP0=0, select bank0
  3331  153C  1303               	bcf	3,6	;RP1=0, select bank0
  3332  153D  0820               	movf	serialBegin@baudd,w
  3333  153E  00A4               	movwf	??_serialBegin
  3334  153F  0821               	movf	serialBegin@baudd+1,w
  3335  1540  00A5               	movwf	??_serialBegin+1
  3336  1541  0822               	movf	serialBegin@baudd+2,w
  3337  1542  00A6               	movwf	??_serialBegin+2
  3338  1543  0823               	movf	serialBegin@baudd+3,w
  3339  1544  00A7               	movwf	??_serialBegin+3
  3340  1545  3004               	movlw	4
  3341  1546                     u3555:	
  3342  1546  1003               	clrc
  3343  1547  0DA4               	rlf	??_serialBegin,f
  3344  1548  0DA5               	rlf	??_serialBegin+1,f
  3345  1549  0DA6               	rlf	??_serialBegin+2,f
  3346  154A  0DA7               	rlf	??_serialBegin+3,f
  3347  154B  3EFF               	addlw	-1
  3348  154C  1D03               	skipz
  3349  154D  2D46               	goto	u3555
  3350  154E  0827               	movf	??_serialBegin+3,w
  3351  154F  00F3               	movwf	___lldiv@divisor+3
  3352  1550  0826               	movf	??_serialBegin+2,w
  3353  1551  00F2               	movwf	___lldiv@divisor+2
  3354  1552  0825               	movf	??_serialBegin+1,w
  3355  1553  00F1               	movwf	___lldiv@divisor+1
  3356  1554  0824               	movf	??_serialBegin,w
  3357  1555  00F0               	movwf	___lldiv@divisor
  3358  1556  3000               	movlw	0
  3359  1557  00A8               	movwf	??_serialBegin+4
  3360  1558  302D               	movlw	45
  3361  1559  00A9               	movwf	??_serialBegin+5
  3362  155A  3031               	movlw	49
  3363  155B  00AA               	movwf	??_serialBegin+6
  3364  155C  3001               	movlw	1
  3365  155D  00AB               	movwf	??_serialBegin+7
  3366  155E  0820               	movf	serialBegin@baudd,w
  3367  155F  00AC               	movwf	??_serialBegin+8
  3368  1560  0821               	movf	serialBegin@baudd+1,w
  3369  1561  00AD               	movwf	??_serialBegin+9
  3370  1562  0822               	movf	serialBegin@baudd+2,w
  3371  1563  00AE               	movwf	??_serialBegin+10
  3372  1564  0823               	movf	serialBegin@baudd+3,w
  3373  1565  00AF               	movwf	??_serialBegin+11
  3374  1566  3004               	movlw	4
  3375  1567                     u3565:	
  3376  1567  1003               	clrc
  3377  1568  0DAC               	rlf	??_serialBegin+8,f
  3378  1569  0DAD               	rlf	??_serialBegin+9,f
  3379  156A  0DAE               	rlf	??_serialBegin+10,f
  3380  156B  0DAF               	rlf	??_serialBegin+11,f
  3381  156C  3EFF               	addlw	-1
  3382  156D  1D03               	skipz
  3383  156E  2D67               	goto	u3565
  3384  156F  09AC               	comf	??_serialBegin+8,f
  3385  1570  09AD               	comf	??_serialBegin+9,f
  3386  1571  09AE               	comf	??_serialBegin+10,f
  3387  1572  09AF               	comf	??_serialBegin+11,f
  3388  1573  0AAC               	incf	??_serialBegin+8,f
  3389  1574  1903               	skipnz
  3390  1575  0AAD               	incf	??_serialBegin+9,f
  3391  1576  1903               	skipnz
  3392  1577  0AAE               	incf	??_serialBegin+10,f
  3393  1578  1903               	skipnz
  3394  1579  0AAF               	incf	??_serialBegin+11,f
  3395  157A  082C               	movf	??_serialBegin+8,w
  3396  157B  07A8               	addwf	??_serialBegin+4,f
  3397  157C  082D               	movf	??_serialBegin+9,w
  3398  157D  1803               	skipnc
  3399  157E  0F2D               	incfsz	??_serialBegin+9,w
  3400  157F  2D81               	goto	u3570
  3401  1580  2D82               	goto	u3571
  3402  1581                     u3570:	
  3403  1581  07A9               	addwf	??_serialBegin+5,f
  3404  1582                     u3571:	
  3405  1582  082E               	movf	??_serialBegin+10,w
  3406  1583  1803               	skipnc
  3407  1584  0F2E               	incfsz	??_serialBegin+10,w
  3408  1585  2D87               	goto	u3572
  3409  1586  2D88               	goto	u3573
  3410  1587                     u3572:	
  3411  1587  07AA               	addwf	??_serialBegin+6,f
  3412  1588                     u3573:	
  3413  1588  082F               	movf	??_serialBegin+11,w
  3414  1589  1803               	skipnc
  3415  158A  0A2F               	incf	??_serialBegin+11,w
  3416  158B  07AB               	addwf	??_serialBegin+7,f
  3417  158C  082B               	movf	??_serialBegin+7,w
  3418  158D  00F7               	movwf	___lldiv@dividend+3
  3419  158E  082A               	movf	??_serialBegin+6,w
  3420  158F  00F6               	movwf	___lldiv@dividend+2
  3421  1590  0829               	movf	??_serialBegin+5,w
  3422  1591  00F5               	movwf	___lldiv@dividend+1
  3423  1592  0828               	movf	??_serialBegin+4,w
  3424  1593  00F4               	movwf	___lldiv@dividend
  3425  1594  120A  158A  2000   	fcall	___lldiv
  3426  1597  0870               	movf	?___lldiv,w
  3427  1598  1683               	bsf	3,5	;RP0=1, select bank1
  3428  1599  1303               	bcf	3,6	;RP1=0, select bank1
  3429  159A  0099               	movwf	25	;volatile
  3430                           
  3431                           ;Serial.h: 35: TXSTA = 0x24;
  3432  159B  3024               	movlw	36
  3433  159C  0098               	movwf	24	;volatile
  3434                           
  3435                           ;Serial.h: 36: RCSTA = 0x90;
  3436  159D  3090               	movlw	144
  3437  159E  1283               	bcf	3,5	;RP0=0, select bank0
  3438  159F  1303               	bcf	3,6	;RP1=0, select bank0
  3439  15A0  0098               	movwf	24	;volatile
  3440  15A1  0008               	return
  3441  15A2                     __end_of_serialBegin:	
  3442                           
  3443                           	psect	text4
  3444  0800                     __ptext4:	
  3445 ;; *************** function ___lldiv *****************
  3446 ;; Defined at:
  3447 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  divisor         4    0[COMMON] unsigned long 
  3450 ;;  dividend        4    4[COMMON] unsigned long 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  quotient        4    9[COMMON] unsigned long 
  3453 ;;  counter         1   13[COMMON] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  4    0[COMMON] unsigned long 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         8       0       0       0       0
  3464 ;;      Locals:         5       0       0       0       0
  3465 ;;      Temps:          1       0       0       0       0
  3466 ;;      Totals:        14       0       0       0       0
  3467 ;;Total ram usage:       14 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_serialBegin
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function ___lldiv
  3478  0800                     ___lldiv:	
  3479                           
  3480                           ;incstack = 0
  3481                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3482  0800  3000               	movlw	0
  3483  0801  00FC               	movwf	___lldiv@quotient+3
  3484  0802  3000               	movlw	0
  3485  0803  00FB               	movwf	___lldiv@quotient+2
  3486  0804  3000               	movlw	0
  3487  0805  00FA               	movwf	___lldiv@quotient+1
  3488  0806  3000               	movlw	0
  3489  0807  00F9               	movwf	___lldiv@quotient
  3490  0808  0873               	movf	___lldiv@divisor+3,w
  3491  0809  0472               	iorwf	___lldiv@divisor+2,w
  3492  080A  0471               	iorwf	___lldiv@divisor+1,w
  3493  080B  0470               	iorwf	___lldiv@divisor,w
  3494  080C  1903               	skipnz
  3495  080D  2855               	goto	l3904
  3496  080E  01FD               	clrf	___lldiv@counter
  3497  080F  0AFD               	incf	___lldiv@counter,f
  3498  0810                     l3890:	
  3499  0810  1BF3               	btfsc	___lldiv@divisor+3,7
  3500  0811  2820               	goto	l3892
  3501  0812  3001               	movlw	1
  3502  0813  00F8               	movwf	??___lldiv
  3503  0814                     u3485:	
  3504  0814  1003               	clrc
  3505  0815  0DF0               	rlf	___lldiv@divisor,f
  3506  0816  0DF1               	rlf	___lldiv@divisor+1,f
  3507  0817  0DF2               	rlf	___lldiv@divisor+2,f
  3508  0818  0DF3               	rlf	___lldiv@divisor+3,f
  3509  0819  0BF8               	decfsz	??___lldiv,f
  3510  081A  2814               	goto	u3485
  3511  081B  3001               	movlw	1
  3512  081C  00F8               	movwf	??___lldiv
  3513  081D  0878               	movf	??___lldiv,w
  3514  081E  07FD               	addwf	___lldiv@counter,f
  3515  081F  2810               	goto	l3890
  3516  0820                     l3892:	
  3517  0820  3001               	movlw	1
  3518  0821  00F8               	movwf	??___lldiv
  3519  0822                     u3505:	
  3520  0822  1003               	clrc
  3521  0823  0DF9               	rlf	___lldiv@quotient,f
  3522  0824  0DFA               	rlf	___lldiv@quotient+1,f
  3523  0825  0DFB               	rlf	___lldiv@quotient+2,f
  3524  0826  0DFC               	rlf	___lldiv@quotient+3,f
  3525  0827  0BF8               	decfsz	??___lldiv,f
  3526  0828  2822               	goto	u3505
  3527  0829  0873               	movf	___lldiv@divisor+3,w
  3528  082A  0277               	subwf	___lldiv@dividend+3,w
  3529  082B  1D03               	skipz
  3530  082C  2837               	goto	u3515
  3531  082D  0872               	movf	___lldiv@divisor+2,w
  3532  082E  0276               	subwf	___lldiv@dividend+2,w
  3533  082F  1D03               	skipz
  3534  0830  2837               	goto	u3515
  3535  0831  0871               	movf	___lldiv@divisor+1,w
  3536  0832  0275               	subwf	___lldiv@dividend+1,w
  3537  0833  1D03               	skipz
  3538  0834  2837               	goto	u3515
  3539  0835  0870               	movf	___lldiv@divisor,w
  3540  0836  0274               	subwf	___lldiv@dividend,w
  3541  0837                     u3515:	
  3542  0837  1C03               	skipc
  3543  0838  2848               	goto	l3900
  3544  0839  0870               	movf	___lldiv@divisor,w
  3545  083A  02F4               	subwf	___lldiv@dividend,f
  3546  083B  0871               	movf	___lldiv@divisor+1,w
  3547  083C  1C03               	skipc
  3548  083D  0F71               	incfsz	___lldiv@divisor+1,w
  3549  083E  02F5               	subwf	___lldiv@dividend+1,f
  3550  083F  0872               	movf	___lldiv@divisor+2,w
  3551  0840  1C03               	skipc
  3552  0841  0F72               	incfsz	___lldiv@divisor+2,w
  3553  0842  02F6               	subwf	___lldiv@dividend+2,f
  3554  0843  0873               	movf	___lldiv@divisor+3,w
  3555  0844  1C03               	skipc
  3556  0845  0F73               	incfsz	___lldiv@divisor+3,w
  3557  0846  02F7               	subwf	___lldiv@dividend+3,f
  3558  0847  1479               	bsf	___lldiv@quotient,0
  3559  0848                     l3900:	
  3560  0848  3001               	movlw	1
  3561  0849                     u3525:	
  3562  0849  1003               	clrc
  3563  084A  0CF3               	rrf	___lldiv@divisor+3,f
  3564  084B  0CF2               	rrf	___lldiv@divisor+2,f
  3565  084C  0CF1               	rrf	___lldiv@divisor+1,f
  3566  084D  0CF0               	rrf	___lldiv@divisor,f
  3567  084E  3EFF               	addlw	-1
  3568  084F  1D03               	skipz
  3569  0850  2849               	goto	u3525
  3570  0851  3001               	movlw	1
  3571  0852  02FD               	subwf	___lldiv@counter,f
  3572  0853  1D03               	btfss	3,2
  3573  0854  2820               	goto	l3892
  3574  0855                     l3904:	
  3575  0855  087C               	movf	___lldiv@quotient+3,w
  3576  0856  00F3               	movwf	?___lldiv+3
  3577  0857  087B               	movf	___lldiv@quotient+2,w
  3578  0858  00F2               	movwf	?___lldiv+2
  3579  0859  087A               	movf	___lldiv@quotient+1,w
  3580  085A  00F1               	movwf	?___lldiv+1
  3581  085B  0879               	movf	___lldiv@quotient,w
  3582  085C  00F0               	movwf	?___lldiv
  3583  085D  0008               	return
  3584  085E                     __end_of___lldiv:	
  3585                           
  3586                           	psect	text5
  3587  0132                     __ptext5:	
  3588 ;; *************** function _readAndStore *****************
  3589 ;; Defined at:
  3590 ;;		line 206 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  Time            1    wreg     PTR unsigned char 
  3593 ;;		 -> main@time(9), 
  3594 ;;  x               1   33[BANK0 ] unsigned char 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  Time            1   40[BANK0 ] PTR unsigned char 
  3597 ;;		 -> main@time(9), 
  3598 ;;  time            1   43[BANK0 ] PTR unsigned char 
  3599 ;;		 -> main@time(9), 
  3600 ;;  terminated      1   42[BANK0 ] unsigned char 
  3601 ;;  round           1   41[BANK0 ] unsigned char 
  3602 ;;  round2          1   39[BANK0 ] unsigned char 
  3603 ;;  round1          1   38[BANK0 ] unsigned char 
  3604 ;;  Keys            1   37[BANK0 ] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      unsigned char 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         0       1       0       0       0
  3615 ;;      Locals:         0       7       0       0       0
  3616 ;;      Temps:          0       3       0       0       0
  3617 ;;      Totals:         0      11       0       0       0
  3618 ;;Total ram usage:       11 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    7
  3621 ;; This function calls:
  3622 ;;		_BCD2LowerCh
  3623 ;;		_BCD2UpperCh
  3624 ;;		_Binary2BCD
  3625 ;;		_LCD5110_writeCP
  3626 ;;		_LCD5110_writeText
  3627 ;;		_getKey
  3628 ;;		_readKeys
  3629 ;;		_writeArrayToRAM
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _readAndStore
  3637  0132                     _readAndStore:	
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _readAndStore: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3641                           ;readAndStore@Time stored from wreg
  3642  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0134  00C8               	movwf	readAndStore@Time
  3645                           
  3646                           ;College_bell.c: 207: char *time;
  3647                           ;College_bell.c: 208: char Keys,round,round1,round2;
  3648                           ;College_bell.c: 209: round= Binary2BCD(x);
  3649  0135  0841               	movf	readAndStore@x,w
  3650  0136  160A  118A  25A2  120A  118A  	fcall	_Binary2BCD
  3651  013B  1283               	bcf	3,5	;RP0=0, select bank0
  3652  013C  1303               	bcf	3,6	;RP1=0, select bank0
  3653  013D  00C2               	movwf	??_readAndStore
  3654  013E  0842               	movf	??_readAndStore,w
  3655  013F  00C9               	movwf	readAndStore@round
  3656                           
  3657                           ;College_bell.c: 210: time = Time;
  3658  0140  0848               	movf	readAndStore@Time,w
  3659  0141  00C2               	movwf	??_readAndStore
  3660  0142  0842               	movf	??_readAndStore,w
  3661  0143  00CB               	movwf	readAndStore@time
  3662                           
  3663                           ;College_bell.c: 211: unsigned char terminated=0;
  3664  0144  01CA               	clrf	readAndStore@terminated
  3665                           
  3666                           ;College_bell.c: 213: time[0]= '0';
  3667  0145  3030               	movlw	48
  3668  0146  00C2               	movwf	??_readAndStore
  3669  0147  084B               	movf	readAndStore@time,w
  3670  0148  0084               	movwf	4
  3671  0149  0842               	movf	??_readAndStore,w
  3672  014A  1383               	bcf	3,7	;select IRP bank0
  3673  014B  0080               	movwf	0
  3674                           
  3675                           ;College_bell.c: 214: time[1]= '0';
  3676  014C  3030               	movlw	48
  3677  014D  00C2               	movwf	??_readAndStore
  3678  014E  0A4B               	incf	readAndStore@time,w
  3679  014F  0084               	movwf	4
  3680  0150  0842               	movf	??_readAndStore,w
  3681  0151  0080               	movwf	0
  3682                           
  3683                           ;College_bell.c: 215: time[3]= '0';
  3684  0152  3030               	movlw	48
  3685  0153  00C2               	movwf	??_readAndStore
  3686  0154  084B               	movf	readAndStore@time,w
  3687  0155  3E03               	addlw	3
  3688  0156  0084               	movwf	4
  3689  0157  0842               	movf	??_readAndStore,w
  3690  0158  0080               	movwf	0
  3691                           
  3692                           ;College_bell.c: 216: time[4]= '0';
  3693  0159  3030               	movlw	48
  3694  015A  00C2               	movwf	??_readAndStore
  3695  015B  084B               	movf	readAndStore@time,w
  3696  015C  3E04               	addlw	4
  3697  015D  0084               	movwf	4
  3698  015E  0842               	movf	??_readAndStore,w
  3699  015F  0080               	movwf	0
  3700                           
  3701                           ;College_bell.c: 217: time[6]= '0';
  3702  0160  3030               	movlw	48
  3703  0161  00C2               	movwf	??_readAndStore
  3704  0162  084B               	movf	readAndStore@time,w
  3705  0163  3E06               	addlw	6
  3706  0164  0084               	movwf	4
  3707  0165  0842               	movf	??_readAndStore,w
  3708  0166  0080               	movwf	0
  3709                           
  3710                           ;College_bell.c: 218: time[7]= '0';
  3711  0167  3030               	movlw	48
  3712  0168  00C2               	movwf	??_readAndStore
  3713  0169  084B               	movf	readAndStore@time,w
  3714  016A  3E07               	addlw	7
  3715  016B  0084               	movwf	4
  3716  016C  0842               	movf	??_readAndStore,w
  3717  016D  0080               	movwf	0
  3718                           
  3719                           ;College_bell.c: 221: LCD5110_writeText(FONT_3x5,3,32, 1,3,"RINGS:", 0x00);
  3720  016E  3012               	movlw	low (_FONT_3x5| (0+32768))
  3721  016F  00AE               	movwf	LCD5110_writeText@userFont
  3722  0170  3090               	movlw	high (_FONT_3x5| (0+32768))
  3723  0171  00AF               	movwf	LCD5110_writeText@userFont+1
  3724  0172  3003               	movlw	3
  3725  0173  00C2               	movwf	??_readAndStore
  3726  0174  0842               	movf	??_readAndStore,w
  3727  0175  00B0               	movwf	LCD5110_writeText@fontWidth
  3728  0176  3020               	movlw	32
  3729  0177  00C3               	movwf	??_readAndStore+1
  3730  0178  0843               	movf	??_readAndStore+1,w
  3731  0179  00B1               	movwf	LCD5110_writeText@fontOffset
  3732  017A  01B2               	clrf	LCD5110_writeText@row
  3733  017B  0AB2               	incf	LCD5110_writeText@row,f
  3734  017C  3003               	movlw	3
  3735  017D  00C4               	movwf	??_readAndStore+2
  3736  017E  0844               	movf	??_readAndStore+2,w
  3737  017F  00B3               	movwf	LCD5110_writeText@col
  3738  0180  30CA               	movlw	low (STR_15| (0+32768))
  3739  0181  00B4               	movwf	LCD5110_writeText@characters
  3740  0182  3091               	movlw	high (STR_15| (0+32768))
  3741  0183  00B5               	movwf	LCD5110_writeText@characters+1
  3742  0184  01B6               	clrf	LCD5110_writeText@dispType
  3743  0185  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  3744                           
  3745                           ;College_bell.c: 222: round1 = BCD2UpperCh(round);round2 = BCD2LowerCh(round);LCD5110_wr
      +                          iteCP(FONT_3x5,3,32,round1);;LCD5110_writeCP(FONT_3x5,3,32,round2);
  3746  018A  1283               	bcf	3,5	;RP0=0, select bank0
  3747  018B  1303               	bcf	3,6	;RP1=0, select bank0
  3748  018C  0849               	movf	readAndStore@round,w
  3749  018D  160A  158A  255E  120A  118A  	fcall	_BCD2UpperCh
  3750  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0194  00C2               	movwf	??_readAndStore
  3753  0195  0842               	movf	??_readAndStore,w
  3754  0196  00C6               	movwf	readAndStore@round1
  3755  0197  0849               	movf	readAndStore@round,w
  3756  0198  160A  158A  253D  120A  118A  	fcall	_BCD2LowerCh
  3757  019D  1283               	bcf	3,5	;RP0=0, select bank0
  3758  019E  1303               	bcf	3,6	;RP1=0, select bank0
  3759  019F  00C2               	movwf	??_readAndStore
  3760  01A0  0842               	movf	??_readAndStore,w
  3761  01A1  00C7               	movwf	readAndStore@round2
  3762  01A2  3012               	movlw	low (_FONT_3x5| (0+32768))
  3763  01A3  00A0               	movwf	LCD5110_writeCP@userFont
  3764  01A4  3090               	movlw	high (_FONT_3x5| (0+32768))
  3765  01A5  00A1               	movwf	LCD5110_writeCP@userFont+1
  3766  01A6  3003               	movlw	3
  3767  01A7  00C2               	movwf	??_readAndStore
  3768  01A8  0842               	movf	??_readAndStore,w
  3769  01A9  00A2               	movwf	LCD5110_writeCP@fontWidth
  3770  01AA  3020               	movlw	32
  3771  01AB  00C3               	movwf	??_readAndStore+1
  3772  01AC  0843               	movf	??_readAndStore+1,w
  3773  01AD  00A3               	movwf	LCD5110_writeCP@fontOffset
  3774  01AE  0846               	movf	readAndStore@round1,w
  3775  01AF  00C4               	movwf	??_readAndStore+2
  3776  01B0  0844               	movf	??_readAndStore+2,w
  3777  01B1  00A4               	movwf	LCD5110_writeCP@character
  3778  01B2  160A  118A  260A  120A  118A  	fcall	_LCD5110_writeCP
  3779  01B7  3012               	movlw	low (_FONT_3x5| (0+32768))
  3780  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3781  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3782  01BA  00A0               	movwf	LCD5110_writeCP@userFont
  3783  01BB  3090               	movlw	high (_FONT_3x5| (0+32768))
  3784  01BC  00A1               	movwf	LCD5110_writeCP@userFont+1
  3785  01BD  3003               	movlw	3
  3786  01BE  00C2               	movwf	??_readAndStore
  3787  01BF  0842               	movf	??_readAndStore,w
  3788  01C0  00A2               	movwf	LCD5110_writeCP@fontWidth
  3789  01C1  3020               	movlw	32
  3790  01C2  00C3               	movwf	??_readAndStore+1
  3791  01C3  0843               	movf	??_readAndStore+1,w
  3792  01C4  00A3               	movwf	LCD5110_writeCP@fontOffset
  3793  01C5  0847               	movf	readAndStore@round2,w
  3794  01C6  00C4               	movwf	??_readAndStore+2
  3795  01C7  0844               	movf	??_readAndStore+2,w
  3796  01C8  00A4               	movwf	LCD5110_writeCP@character
  3797  01C9  160A  118A  260A  120A  118A  	fcall	_LCD5110_writeCP
  3798                           
  3799                           ;College_bell.c: 224: LCD5110_writeText(FONT_3x5,3,32, 3,1,"TIME:", 0x00);
  3800  01CE  3012               	movlw	low (_FONT_3x5| (0+32768))
  3801  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3802  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3803  01D1  00AE               	movwf	LCD5110_writeText@userFont
  3804  01D2  3090               	movlw	high (_FONT_3x5| (0+32768))
  3805  01D3  00AF               	movwf	LCD5110_writeText@userFont+1
  3806  01D4  3003               	movlw	3
  3807  01D5  00C2               	movwf	??_readAndStore
  3808  01D6  0842               	movf	??_readAndStore,w
  3809  01D7  00B0               	movwf	LCD5110_writeText@fontWidth
  3810  01D8  3020               	movlw	32
  3811  01D9  00C3               	movwf	??_readAndStore+1
  3812  01DA  0843               	movf	??_readAndStore+1,w
  3813  01DB  00B1               	movwf	LCD5110_writeText@fontOffset
  3814  01DC  3003               	movlw	3
  3815  01DD  00C4               	movwf	??_readAndStore+2
  3816  01DE  0844               	movf	??_readAndStore+2,w
  3817  01DF  00B2               	movwf	LCD5110_writeText@row
  3818  01E0  01B3               	clrf	LCD5110_writeText@col
  3819  01E1  0AB3               	incf	LCD5110_writeText@col,f
  3820  01E2  30D8               	movlw	low (STR_4| (0+32768))
  3821  01E3  00B4               	movwf	LCD5110_writeText@characters
  3822  01E4  3091               	movlw	high (STR_4| (0+32768))
  3823  01E5  00B5               	movwf	LCD5110_writeText@characters+1
  3824  01E6  01B6               	clrf	LCD5110_writeText@dispType
  3825  01E7  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  3826                           
  3827                           ;College_bell.c: 228: terminated = readKeys(time);
  3828  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  3829  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  3830  01EE  084B               	movf	readAndStore@time,w
  3831  01EF  120A  158A  21E2  120A  118A  	fcall	_readKeys
  3832  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  3833  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  3834  01F6  00C2               	movwf	??_readAndStore
  3835  01F7  0842               	movf	??_readAndStore,w
  3836  01F8  00CA               	movwf	readAndStore@terminated
  3837                           
  3838                           ;College_bell.c: 231: if(terminated == 0){
  3839  01F9  084A               	movf	readAndStore@terminated,w
  3840  01FA  1903               	btfsc	3,2
  3841  01FB  2A07               	goto	l4086
  3842  01FC  2A67               	goto	l4100
  3843  01FD                     l4084:	
  3844                           ;College_bell.c: 233: while(Keys!='*') Keys = getKey();
  3845                           
  3846  01FD  120A  158A  24E9  120A  118A  	fcall	_getKey
  3847  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0203  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0204  00C2               	movwf	??_readAndStore
  3850  0205  0842               	movf	??_readAndStore,w
  3851  0206  00C5               	movwf	readAndStore@Keys
  3852  0207                     l4086:	
  3853  0207  302A               	movlw	42
  3854  0208  0645               	xorwf	readAndStore@Keys,w
  3855  0209  1D03               	btfss	3,2
  3856  020A  29FD               	goto	l4084
  3857                           
  3858                           ;College_bell.c: 235: if(writeArrayToRAM(time,lastwriteaddr)){
  3859  020B  1683               	bsf	3,5	;RP0=1, select bank1
  3860  020C  1303               	bcf	3,6	;RP1=0, select bank1
  3861  020D  086D               	movf	_lastwriteaddr^(0+128),w
  3862  020E  1283               	bcf	3,5	;RP0=0, select bank0
  3863  020F  1303               	bcf	3,6	;RP1=0, select bank0
  3864  0210  00C2               	movwf	??_readAndStore
  3865  0211  0842               	movf	??_readAndStore,w
  3866  0212  00A4               	movwf	writeArrayToRAM@address
  3867  0213  084B               	movf	readAndStore@time,w
  3868  0214  160A  118A  2771  120A  118A  	fcall	_writeArrayToRAM
  3869  0219  3A00               	xorlw	0
  3870  021A  1903               	skipnz
  3871  021B  2A49               	goto	l4094
  3872                           
  3873                           ;College_bell.c: 236: LCD5110_writeText(FONT_3x5,3,32, 5,1,"SAVE SUCESSFULL", 0x00);
  3874  021C  3012               	movlw	low (_FONT_3x5| (0+32768))
  3875  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3876  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3877  021F  00AE               	movwf	LCD5110_writeText@userFont
  3878  0220  3090               	movlw	high (_FONT_3x5| (0+32768))
  3879  0221  00AF               	movwf	LCD5110_writeText@userFont+1
  3880  0222  3003               	movlw	3
  3881  0223  00C2               	movwf	??_readAndStore
  3882  0224  0842               	movf	??_readAndStore,w
  3883  0225  00B0               	movwf	LCD5110_writeText@fontWidth
  3884  0226  3020               	movlw	32
  3885  0227  00C3               	movwf	??_readAndStore+1
  3886  0228  0843               	movf	??_readAndStore+1,w
  3887  0229  00B1               	movwf	LCD5110_writeText@fontOffset
  3888  022A  3005               	movlw	5
  3889  022B  00C4               	movwf	??_readAndStore+2
  3890  022C  0844               	movf	??_readAndStore+2,w
  3891  022D  00B2               	movwf	LCD5110_writeText@row
  3892  022E  01B3               	clrf	LCD5110_writeText@col
  3893  022F  0AB3               	incf	LCD5110_writeText@col,f
  3894  0230  3095               	movlw	low (STR_13| (0+32768))
  3895  0231  00B4               	movwf	LCD5110_writeText@characters
  3896  0232  3091               	movlw	high (STR_13| (0+32768))
  3897  0233  00B5               	movwf	LCD5110_writeText@characters+1
  3898  0234  01B6               	clrf	LCD5110_writeText@dispType
  3899  0235  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  3900                           
  3901                           ;College_bell.c: 238: _delay((unsigned long)((2000)*(20000000/4000.0)));
  3902  023A  3033               	movlw	51
  3903  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3904  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3905  023D  00C4               	movwf	??_readAndStore+2
  3906  023E  30BC               	movlw	188
  3907  023F  00C3               	movwf	??_readAndStore+1
  3908  0240  3010               	movlw	16
  3909  0241  00C2               	movwf	??_readAndStore
  3910  0242                     u4227:	
  3911  0242  0BC2               	decfsz	??_readAndStore,f
  3912  0243  2A42               	goto	u4227
  3913  0244  0BC3               	decfsz	??_readAndStore+1,f
  3914  0245  2A42               	goto	u4227
  3915  0246  0BC4               	decfsz	??_readAndStore+2,f
  3916  0247  2A42               	goto	u4227
  3917                           
  3918                           ;College_bell.c: 239: }else{
  3919  0248  2A65               	goto	l4096
  3920  0249                     l4094:	
  3921                           
  3922                           ;College_bell.c: 240: LCD5110_writeText(FONT_3x5,3,32,5,1,"SAVE FAILED    ", 0x00);
  3923  0249  3012               	movlw	low (_FONT_3x5| (0+32768))
  3924  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3925  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3926  024C  00AE               	movwf	LCD5110_writeText@userFont
  3927  024D  3090               	movlw	high (_FONT_3x5| (0+32768))
  3928  024E  00AF               	movwf	LCD5110_writeText@userFont+1
  3929  024F  3003               	movlw	3
  3930  0250  00C2               	movwf	??_readAndStore
  3931  0251  0842               	movf	??_readAndStore,w
  3932  0252  00B0               	movwf	LCD5110_writeText@fontWidth
  3933  0253  3020               	movlw	32
  3934  0254  00C3               	movwf	??_readAndStore+1
  3935  0255  0843               	movf	??_readAndStore+1,w
  3936  0256  00B1               	movwf	LCD5110_writeText@fontOffset
  3937  0257  3005               	movlw	5
  3938  0258  00C4               	movwf	??_readAndStore+2
  3939  0259  0844               	movf	??_readAndStore+2,w
  3940  025A  00B2               	movwf	LCD5110_writeText@row
  3941  025B  01B3               	clrf	LCD5110_writeText@col
  3942  025C  0AB3               	incf	LCD5110_writeText@col,f
  3943  025D  3065               	movlw	low (STR_18| (0+32768))
  3944  025E  00B4               	movwf	LCD5110_writeText@characters
  3945  025F  3091               	movlw	high (STR_18| (0+32768))
  3946  0260  00B5               	movwf	LCD5110_writeText@characters+1
  3947  0261  01B6               	clrf	LCD5110_writeText@dispType
  3948  0262  160A  118A  26F0   	fcall	_LCD5110_writeText
  3949  0265                     l4096:	
  3950                           
  3951                           ;College_bell.c: 242: }
  3952                           ;College_bell.c: 244: return '#';
  3953  0265  3023               	movlw	35
  3954  0266  0008               	return
  3955  0267                     l4100:	
  3956                           
  3957                           ;College_bell.c: 246: }
  3958                           ;College_bell.c: 247: if (terminated ==1){
  3959  0267  1283               	bcf	3,5	;RP0=0, select bank0
  3960  0268  1303               	bcf	3,6	;RP1=0, select bank0
  3961  0269  034A               	decf	readAndStore@terminated,w
  3962  026A  1D03               	btfss	3,2
  3963  026B  0008               	return
  3964                           
  3965                           ;College_bell.c: 249: if(writeArrayToRAM(time,lastwriteaddr)){
  3966  026C  1683               	bsf	3,5	;RP0=1, select bank1
  3967  026D  1303               	bcf	3,6	;RP1=0, select bank1
  3968  026E  086D               	movf	_lastwriteaddr^(0+128),w
  3969  026F  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0270  1303               	bcf	3,6	;RP1=0, select bank0
  3971  0271  00C2               	movwf	??_readAndStore
  3972  0272  0842               	movf	??_readAndStore,w
  3973  0273  00A4               	movwf	writeArrayToRAM@address
  3974  0274  084B               	movf	readAndStore@time,w
  3975  0275  160A  118A  2771  120A  118A  	fcall	_writeArrayToRAM
  3976  027A  3A00               	xorlw	0
  3977  027B  1903               	skipnz
  3978  027C  2AAA               	goto	l4108
  3979                           
  3980                           ;College_bell.c: 252: LCD5110_writeText(FONT_3x5,3,32, 5,1,"SAVE SUCESSFULL", 0x00);
  3981  027D  3012               	movlw	low (_FONT_3x5| (0+32768))
  3982  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3983  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0280  00AE               	movwf	LCD5110_writeText@userFont
  3985  0281  3090               	movlw	high (_FONT_3x5| (0+32768))
  3986  0282  00AF               	movwf	LCD5110_writeText@userFont+1
  3987  0283  3003               	movlw	3
  3988  0284  00C2               	movwf	??_readAndStore
  3989  0285  0842               	movf	??_readAndStore,w
  3990  0286  00B0               	movwf	LCD5110_writeText@fontWidth
  3991  0287  3020               	movlw	32
  3992  0288  00C3               	movwf	??_readAndStore+1
  3993  0289  0843               	movf	??_readAndStore+1,w
  3994  028A  00B1               	movwf	LCD5110_writeText@fontOffset
  3995  028B  3005               	movlw	5
  3996  028C  00C4               	movwf	??_readAndStore+2
  3997  028D  0844               	movf	??_readAndStore+2,w
  3998  028E  00B2               	movwf	LCD5110_writeText@row
  3999  028F  01B3               	clrf	LCD5110_writeText@col
  4000  0290  0AB3               	incf	LCD5110_writeText@col,f
  4001  0291  3095               	movlw	low (STR_13| (0+32768))
  4002  0292  00B4               	movwf	LCD5110_writeText@characters
  4003  0293  3091               	movlw	high (STR_13| (0+32768))
  4004  0294  00B5               	movwf	LCD5110_writeText@characters+1
  4005  0295  01B6               	clrf	LCD5110_writeText@dispType
  4006  0296  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  4007                           
  4008                           ;College_bell.c: 253: _delay((unsigned long)((2000)*(20000000/4000.0)));
  4009  029B  3033               	movlw	51
  4010  029C  1283               	bcf	3,5	;RP0=0, select bank0
  4011  029D  1303               	bcf	3,6	;RP1=0, select bank0
  4012  029E  00C4               	movwf	??_readAndStore+2
  4013  029F  30BC               	movlw	188
  4014  02A0  00C3               	movwf	??_readAndStore+1
  4015  02A1  3010               	movlw	16
  4016  02A2  00C2               	movwf	??_readAndStore
  4017  02A3                     u4237:	
  4018  02A3  0BC2               	decfsz	??_readAndStore,f
  4019  02A4  2AA3               	goto	u4237
  4020  02A5  0BC3               	decfsz	??_readAndStore+1,f
  4021  02A6  2AA3               	goto	u4237
  4022  02A7  0BC4               	decfsz	??_readAndStore+2,f
  4023  02A8  2AA3               	goto	u4237
  4024                           
  4025                           ;College_bell.c: 254: }else{
  4026  02A9  2AD7               	goto	l4112
  4027  02AA                     l4108:	
  4028                           
  4029                           ;College_bell.c: 256: LCD5110_writeText(FONT_3x5,3,32, 5,1,"SAVE FAILED    ", 0x00);
  4030  02AA  3012               	movlw	low (_FONT_3x5| (0+32768))
  4031  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  4032  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  4033  02AD  00AE               	movwf	LCD5110_writeText@userFont
  4034  02AE  3090               	movlw	high (_FONT_3x5| (0+32768))
  4035  02AF  00AF               	movwf	LCD5110_writeText@userFont+1
  4036  02B0  3003               	movlw	3
  4037  02B1  00C2               	movwf	??_readAndStore
  4038  02B2  0842               	movf	??_readAndStore,w
  4039  02B3  00B0               	movwf	LCD5110_writeText@fontWidth
  4040  02B4  3020               	movlw	32
  4041  02B5  00C3               	movwf	??_readAndStore+1
  4042  02B6  0843               	movf	??_readAndStore+1,w
  4043  02B7  00B1               	movwf	LCD5110_writeText@fontOffset
  4044  02B8  3005               	movlw	5
  4045  02B9  00C4               	movwf	??_readAndStore+2
  4046  02BA  0844               	movf	??_readAndStore+2,w
  4047  02BB  00B2               	movwf	LCD5110_writeText@row
  4048  02BC  01B3               	clrf	LCD5110_writeText@col
  4049  02BD  0AB3               	incf	LCD5110_writeText@col,f
  4050  02BE  3065               	movlw	low (STR_18| (0+32768))
  4051  02BF  00B4               	movwf	LCD5110_writeText@characters
  4052  02C0  3091               	movlw	high (STR_18| (0+32768))
  4053  02C1  00B5               	movwf	LCD5110_writeText@characters+1
  4054  02C2  01B6               	clrf	LCD5110_writeText@dispType
  4055  02C3  160A  118A  26F0  120A  118A  	fcall	_LCD5110_writeText
  4056                           
  4057                           ;College_bell.c: 257: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4058  02C8  301A               	movlw	26
  4059  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4060  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4061  02CB  00C4               	movwf	??_readAndStore+2
  4062  02CC  305E               	movlw	94
  4063  02CD  00C3               	movwf	??_readAndStore+1
  4064  02CE  3086               	movlw	134
  4065  02CF  00C2               	movwf	??_readAndStore
  4066  02D0                     u4247:	
  4067  02D0  0BC2               	decfsz	??_readAndStore,f
  4068  02D1  2AD0               	goto	u4247
  4069  02D2  0BC3               	decfsz	??_readAndStore+1,f
  4070  02D3  2AD0               	goto	u4247
  4071  02D4  0BC4               	decfsz	??_readAndStore+2,f
  4072  02D5  2AD0               	goto	u4247
  4073  02D6  0000               	nop
  4074  02D7                     l4112:	
  4075                           
  4076                           ;College_bell.c: 258: }
  4077                           ;College_bell.c: 259: return '#';
  4078  02D7  3023               	movlw	35
  4079  02D8  0008               	return
  4080  02D9                     __end_of_readAndStore:	
  4081                           
  4082                           	psect	text6
  4083  1771                     __ptext6:	
  4084 ;; *************** function _writeArrayToRAM *****************
  4085 ;; Defined at:
  4086 ;;		line 265 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  timearray       1    wreg     PTR unsigned char 
  4089 ;;		 -> main@time(9), 
  4090 ;;  address         1    4[BANK0 ] unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  timearray       1    7[BANK0 ] PTR unsigned char 
  4093 ;;		 -> main@time(9), 
  4094 ;;  x               1   12[BANK0 ] unsigned char 
  4095 ;;  address1        1   11[BANK0 ] unsigned char 
  4096 ;;  mins            1   10[BANK0 ] unsigned char 
  4097 ;;  hr              1    9[BANK0 ] unsigned char 
  4098 ;;  mytime          1    8[BANK0 ] PTR unsigned char 
  4099 ;;		 -> main@time(9), 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      unsigned char 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       1       0       0       0
  4110 ;;      Locals:         0       6       0       0       0
  4111 ;;      Temps:          0       2       0       0       0
  4112 ;;      Totals:         0       9       0       0       0
  4113 ;;Total ram usage:        9 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    5
  4116 ;; This function calls:
  4117 ;;		_RAM_write
  4118 ;;		___bmul
  4119 ;; This function is called by:
  4120 ;;		_readAndStore
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _writeArrayToRAM
  4126  1771                     _writeArrayToRAM:	
  4127                           
  4128                           ;incstack = 0
  4129                           ; Regs used in _writeArrayToRAM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4130                           ;writeArrayToRAM@timearray stored from wreg
  4131  1771  1283               	bcf	3,5	;RP0=0, select bank0
  4132  1772  1303               	bcf	3,6	;RP1=0, select bank0
  4133  1773  00A7               	movwf	writeArrayToRAM@timearray
  4134                           
  4135                           ;College_bell.c: 266: char *mytime;
  4136                           ;College_bell.c: 268: unsigned char hr=0,mins=0;
  4137  1774  01A9               	clrf	writeArrayToRAM@hr
  4138  1775  01AA               	clrf	writeArrayToRAM@mins
  4139                           
  4140                           ;College_bell.c: 269: mytime = timearray;
  4141  1776  0827               	movf	writeArrayToRAM@timearray,w
  4142  1777  00A5               	movwf	??_writeArrayToRAM
  4143  1778  0825               	movf	??_writeArrayToRAM,w
  4144  1779  00A8               	movwf	writeArrayToRAM@mytime
  4145                           
  4146                           ;College_bell.c: 270: unsigned char address1 = address;
  4147  177A  0824               	movf	writeArrayToRAM@address,w
  4148  177B  00A5               	movwf	??_writeArrayToRAM
  4149  177C  0825               	movf	??_writeArrayToRAM,w
  4150  177D  00AB               	movwf	writeArrayToRAM@address1
  4151                           
  4152                           ;College_bell.c: 272: for(unsigned char x=0; x<5; x++){
  4153  177E  01AC               	clrf	writeArrayToRAM@x
  4154  177F  3005               	movlw	5
  4155  1780  022C               	subwf	writeArrayToRAM@x,w
  4156  1781  1803               	btfsc	3,0
  4157  1782  2FD3               	goto	l3866
  4158  1783                     l3846:	
  4159                           
  4160                           ;College_bell.c: 274: if(x<2) hr = 10*(hr) + keypadMap[*(mytime++)-'0'];
  4161  1783  3002               	movlw	2
  4162  1784  022C               	subwf	writeArrayToRAM@x,w
  4163  1785  1803               	skipnc
  4164  1786  2FA3               	goto	l3852
  4165  1787  0828               	movf	writeArrayToRAM@mytime,w
  4166  1788  0084               	movwf	4
  4167  1789  1383               	bcf	3,7	;select IRP bank0
  4168  178A  0800               	movf	0,w
  4169  178B  3ED0               	addlw	208
  4170  178C  3ED1               	addlw	(low (_keypadMap| 0))& (0+255)
  4171  178D  0084               	movwf	4
  4172  178E  300A               	movlw	10
  4173  178F  00A5               	movwf	??_writeArrayToRAM
  4174  1790  0825               	movf	??_writeArrayToRAM,w
  4175  1791  00F0               	movwf	___bmul@multiplicand
  4176  1792  0829               	movf	writeArrayToRAM@hr,w
  4177  1793  160A  158A  2576  160A  118A  	fcall	___bmul
  4178  1798  1383               	bcf	3,7	;select IRP bank1
  4179  1799  0700               	addwf	0,w
  4180  179A  1283               	bcf	3,5	;RP0=0, select bank0
  4181  179B  1303               	bcf	3,6	;RP1=0, select bank0
  4182  179C  00A6               	movwf	??_writeArrayToRAM+1
  4183  179D  0826               	movf	??_writeArrayToRAM+1,w
  4184  179E  00A9               	movwf	writeArrayToRAM@hr
  4185  179F  3001               	movlw	1
  4186  17A0  00A5               	movwf	??_writeArrayToRAM
  4187  17A1  0825               	movf	??_writeArrayToRAM,w
  4188  17A2  07A8               	addwf	writeArrayToRAM@mytime,f
  4189  17A3                     l3852:	
  4190                           
  4191                           ;College_bell.c: 276: if(x==2) *(mytime++);
  4192  17A3  3002               	movlw	2
  4193  17A4  062C               	xorwf	writeArrayToRAM@x,w
  4194  17A5  1D03               	btfss	3,2
  4195  17A6  2FAB               	goto	l3856
  4196  17A7  3001               	movlw	1
  4197  17A8  00A5               	movwf	??_writeArrayToRAM
  4198  17A9  0825               	movf	??_writeArrayToRAM,w
  4199  17AA  07A8               	addwf	writeArrayToRAM@mytime,f
  4200  17AB                     l3856:	
  4201                           
  4202                           ;College_bell.c: 277: if (x>2) mins = 10*(mins)+ keypadMap[*(mytime++)-'0'];
  4203  17AB  3003               	movlw	3
  4204  17AC  022C               	subwf	writeArrayToRAM@x,w
  4205  17AD  1C03               	skipc
  4206  17AE  2FCB               	goto	l3862
  4207  17AF  0828               	movf	writeArrayToRAM@mytime,w
  4208  17B0  0084               	movwf	4
  4209  17B1  1383               	bcf	3,7	;select IRP bank0
  4210  17B2  0800               	movf	0,w
  4211  17B3  3ED0               	addlw	208
  4212  17B4  3ED1               	addlw	(low (_keypadMap| 0))& (0+255)
  4213  17B5  0084               	movwf	4
  4214  17B6  300A               	movlw	10
  4215  17B7  00A5               	movwf	??_writeArrayToRAM
  4216  17B8  0825               	movf	??_writeArrayToRAM,w
  4217  17B9  00F0               	movwf	___bmul@multiplicand
  4218  17BA  082A               	movf	writeArrayToRAM@mins,w
  4219  17BB  160A  158A  2576  160A  118A  	fcall	___bmul
  4220  17C0  1383               	bcf	3,7	;select IRP bank1
  4221  17C1  0700               	addwf	0,w
  4222  17C2  1283               	bcf	3,5	;RP0=0, select bank0
  4223  17C3  1303               	bcf	3,6	;RP1=0, select bank0
  4224  17C4  00A6               	movwf	??_writeArrayToRAM+1
  4225  17C5  0826               	movf	??_writeArrayToRAM+1,w
  4226  17C6  00AA               	movwf	writeArrayToRAM@mins
  4227  17C7  3001               	movlw	1
  4228  17C8  00A5               	movwf	??_writeArrayToRAM
  4229  17C9  0825               	movf	??_writeArrayToRAM,w
  4230  17CA  07A8               	addwf	writeArrayToRAM@mytime,f
  4231  17CB                     l3862:	
  4232  17CB  3001               	movlw	1
  4233  17CC  00A5               	movwf	??_writeArrayToRAM
  4234  17CD  0825               	movf	??_writeArrayToRAM,w
  4235  17CE  07AC               	addwf	writeArrayToRAM@x,f
  4236  17CF  3005               	movlw	5
  4237  17D0  022C               	subwf	writeArrayToRAM@x,w
  4238  17D1  1C03               	skipc
  4239  17D2  2F83               	goto	l3846
  4240  17D3                     l3866:	
  4241                           
  4242                           ;College_bell.c: 279: }
  4243                           ;College_bell.c: 280: if((hr > 24)||(mins > 60)) return 0;
  4244  17D3  3019               	movlw	25
  4245  17D4  0229               	subwf	writeArrayToRAM@hr,w
  4246  17D5  1803               	skipnc
  4247  17D6  2FDB               	goto	l3870
  4248  17D7  303D               	movlw	61
  4249  17D8  022A               	subwf	writeArrayToRAM@mins,w
  4250  17D9  1C03               	skipc
  4251  17DA  2FDD               	goto	l3874
  4252  17DB                     l3870:	
  4253  17DB  3000               	movlw	0
  4254  17DC  0008               	return
  4255  17DD                     l3874:	
  4256                           
  4257                           ;College_bell.c: 281: RAM_write(address1,hr); address1= address1+2;
  4258  17DD  0829               	movf	writeArrayToRAM@hr,w
  4259  17DE  00A5               	movwf	??_writeArrayToRAM
  4260  17DF  0825               	movf	??_writeArrayToRAM,w
  4261  17E0  00FC               	movwf	RAM_write@data
  4262  17E1  082B               	movf	writeArrayToRAM@address1,w
  4263  17E2  160A  158A  25BF  160A  118A  	fcall	_RAM_write
  4264  17E7  1283               	bcf	3,5	;RP0=0, select bank0
  4265  17E8  1303               	bcf	3,6	;RP1=0, select bank0
  4266  17E9  082B               	movf	writeArrayToRAM@address1,w
  4267  17EA  3E02               	addlw	2
  4268  17EB  00A5               	movwf	??_writeArrayToRAM
  4269  17EC  0825               	movf	??_writeArrayToRAM,w
  4270  17ED  00AB               	movwf	writeArrayToRAM@address1
  4271                           
  4272                           ;College_bell.c: 282: RAM_write(address1,mins);
  4273  17EE  082A               	movf	writeArrayToRAM@mins,w
  4274  17EF  00A5               	movwf	??_writeArrayToRAM
  4275  17F0  0825               	movf	??_writeArrayToRAM,w
  4276  17F1  00FC               	movwf	RAM_write@data
  4277  17F2  082B               	movf	writeArrayToRAM@address1,w
  4278  17F3  160A  158A  25BF   	fcall	_RAM_write
  4279                           
  4280                           ;College_bell.c: 283: lastwriteaddr +=4;
  4281  17F6  3004               	movlw	4
  4282  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  4283  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  4284  17F9  00A5               	movwf	??_writeArrayToRAM
  4285  17FA  0825               	movf	??_writeArrayToRAM,w
  4286  17FB  1683               	bsf	3,5	;RP0=1, select bank1
  4287  17FC  1303               	bcf	3,6	;RP1=0, select bank1
  4288  17FD  07ED               	addwf	_lastwriteaddr^(0+128),f
  4289                           
  4290                           ;College_bell.c: 284: return 1;
  4291  17FE  3001               	movlw	1
  4292  17FF  0008               	return
  4293  1800                     __end_of_writeArrayToRAM:	
  4294                           
  4295                           	psect	text7
  4296  1DBF                     __ptext7:	
  4297 ;; *************** function _RAM_write *****************
  4298 ;; Defined at:
  4299 ;;		line 235 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  address         1    wreg     unsigned char 
  4302 ;;  data            1   12[COMMON] unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  address         1    3[BANK0 ] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4314 ;;      Params:         1       0       0       0       0
  4315 ;;      Locals:         0       1       0       0       0
  4316 ;;      Temps:          1       0       0       0       0
  4317 ;;      Totals:         2       1       0       0       0
  4318 ;;Total ram usage:        3 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    4
  4321 ;; This function calls:
  4322 ;;		_Binary2BCD
  4323 ;;		_DS1302_write
  4324 ;; This function is called by:
  4325 ;;		_writeArrayToRAM
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function _RAM_write
  4331  1DBF                     _RAM_write:	
  4332                           
  4333                           ;incstack = 0
  4334                           ; Regs used in _RAM_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4335                           ;RAM_write@address stored from wreg
  4336  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  4337  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  4338  1DC1  00A3               	movwf	RAM_write@address
  4339                           
  4340                           ;Ds1302.h: 236: data = Binary2BCD(data);
  4341  1DC2  087C               	movf	RAM_write@data,w
  4342  1DC3  160A  118A  25A2  160A  158A  	fcall	_Binary2BCD
  4343  1DC8  00FD               	movwf	??_RAM_write
  4344  1DC9  087D               	movf	??_RAM_write,w
  4345  1DCA  00FC               	movwf	RAM_write@data
  4346                           
  4347                           ;Ds1302.h: 237: DS1302_write( (address|0xC0) ,data);
  4348  1DCB  087C               	movf	RAM_write@data,w
  4349  1DCC  00FD               	movwf	??_RAM_write
  4350  1DCD  087D               	movf	??_RAM_write,w
  4351  1DCE  00F7               	movwf	DS1302_write@data
  4352  1DCF  1283               	bcf	3,5	;RP0=0, select bank0
  4353  1DD0  1303               	bcf	3,6	;RP1=0, select bank0
  4354  1DD1  0823               	movf	RAM_write@address,w
  4355  1DD2  38C0               	iorlw	192
  4356  1DD3  160A  158A  2694   	fcall	_DS1302_write
  4357  1DD6  0008               	return
  4358  1DD7                     __end_of_RAM_write:	
  4359                           
  4360                           	psect	text8
  4361  1EE5                     __ptext8:	
  4362 ;; *************** function _compareTimeArray *****************
  4363 ;; Defined at:
  4364 ;;		line 302 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  time            1    wreg     PTR unsigned char 
  4367 ;;		 -> main@time(9), 
  4368 ;;  time2           1    0[COMMON] PTR unsigned char 
  4369 ;;		 -> main@time2(9), 
  4370 ;;  size            2    1[COMMON] int 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  time            1    6[COMMON] PTR unsigned char 
  4373 ;;		 -> main@time(9), 
  4374 ;;  x               2    4[COMMON] int 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      unsigned char 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4384 ;;      Params:         3       0       0       0       0
  4385 ;;      Locals:         3       0       0       0       0
  4386 ;;      Temps:          1       0       0       0       0
  4387 ;;      Totals:         7       0       0       0       0
  4388 ;;Total ram usage:        7 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function _compareTimeArray
  4399  1EE5                     _compareTimeArray:	
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _compareTimeArray: [wreg-fsr0h+status,2+status,0]
  4403                           ;compareTimeArray@time stored from wreg
  4404  1EE5  00F6               	movwf	compareTimeArray@time
  4405                           
  4406                           ;College_bell.c: 303: for (int x=0; x<size;x++){
  4407  1EE6  01F4               	clrf	compareTimeArray@x
  4408  1EE7  01F5               	clrf	compareTimeArray@x+1
  4409  1EE8                     l696:	
  4410  1EE8  0875               	movf	compareTimeArray@x+1,w
  4411  1EE9  3A80               	xorlw	128
  4412  1EEA  00F3               	movwf	??_compareTimeArray
  4413  1EEB  0872               	movf	compareTimeArray@size+1,w
  4414  1EEC  3A80               	xorlw	128
  4415  1EED  0273               	subwf	??_compareTimeArray,w
  4416  1EEE  1D03               	skipz
  4417  1EEF  2EF2               	goto	u3715
  4418  1EF0  0871               	movf	compareTimeArray@size,w
  4419  1EF1  0274               	subwf	compareTimeArray@x,w
  4420  1EF2                     u3715:	
  4421  1EF2  1803               	btfsc	3,0
  4422  1EF3  2F0C               	goto	l4038
  4423                           
  4424                           ;College_bell.c: 304: if(*(time++) != *(time2++))return 0;
  4425  1EF4  0870               	movf	compareTimeArray@time2,w
  4426  1EF5  0084               	movwf	4
  4427  1EF6  3001               	movlw	1
  4428  1EF7  07F0               	addwf	compareTimeArray@time2,f
  4429  1EF8  1383               	bcf	3,7	;select IRP bank0
  4430  1EF9  0800               	movf	0,w
  4431  1EFA  00F3               	movwf	??_compareTimeArray
  4432  1EFB  0876               	movf	compareTimeArray@time,w
  4433  1EFC  0084               	movwf	4
  4434  1EFD  3001               	movlw	1
  4435  1EFE  07F6               	addwf	compareTimeArray@time,f
  4436  1EFF  0800               	movf	0,w
  4437  1F00  0673               	xorwf	??_compareTimeArray,w
  4438  1F01  1903               	skipnz
  4439  1F02  2F05               	goto	l4036
  4440  1F03  3000               	movlw	0
  4441  1F04  0008               	return
  4442  1F05                     l4036:	
  4443  1F05  3001               	movlw	1
  4444  1F06  07F4               	addwf	compareTimeArray@x,f
  4445  1F07  1803               	skipnc
  4446  1F08  0AF5               	incf	compareTimeArray@x+1,f
  4447  1F09  3000               	movlw	0
  4448  1F0A  07F5               	addwf	compareTimeArray@x+1,f
  4449  1F0B  2EE8               	goto	l696
  4450  1F0C                     l4038:	
  4451                           
  4452                           ;College_bell.c: 305: }
  4453                           ;College_bell.c: 306: return 1;
  4454  1F0C  3001               	movlw	1
  4455  1F0D  0008               	return
  4456  1F0E                     __end_of_compareTimeArray:	
  4457                           
  4458                           	psect	text9
  4459  1E70                     __ptext9:	
  4460 ;; *************** function _Time_read *****************
  4461 ;; Defined at:
  4462 ;;		line 325 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  hr              1    wreg     PTR unsigned char 
  4465 ;;		 -> main@hours(1), 
  4466 ;;  min             1   10[COMMON] PTR unsigned char 
  4467 ;;		 -> main@minutes(1), 
  4468 ;;  sec             1   11[COMMON] PTR unsigned char 
  4469 ;;		 -> main@seconds(1), 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  hr              1   13[COMMON] PTR unsigned char 
  4472 ;;		 -> main@hours(1), 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      void 
  4475 ;; Registers used:
  4476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4482 ;;      Params:         2       0       0       0       0
  4483 ;;      Locals:         1       0       0       0       0
  4484 ;;      Temps:          1       0       0       0       0
  4485 ;;      Totals:         4       0       0       0       0
  4486 ;;Total ram usage:        4 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:    4
  4489 ;; This function calls:
  4490 ;;		_DS1302_read
  4491 ;; This function is called by:
  4492 ;;		_main
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           
  4497                           ;psect for function _Time_read
  4498  1E70                     _Time_read:	
  4499                           
  4500                           ;incstack = 0
  4501                           ; Regs used in _Time_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4502                           ;Time_read@hr stored from wreg
  4503  1E70  00FD               	movwf	Time_read@hr
  4504                           
  4505                           ;Ds1302.h: 327: *sec =DS1302_read(0x81 );
  4506  1E71  3081               	movlw	129
  4507  1E72  160A  118A  2299  160A  158A  	fcall	_DS1302_read
  4508  1E77  00FC               	movwf	??_Time_read
  4509  1E78  087B               	movf	Time_read@sec,w
  4510  1E79  0084               	movwf	4
  4511  1E7A  087C               	movf	??_Time_read,w
  4512  1E7B  1383               	bcf	3,7	;select IRP bank0
  4513  1E7C  0080               	movwf	0
  4514                           
  4515                           ;Ds1302.h: 328: *min = DS1302_read(0x83);
  4516  1E7D  3083               	movlw	131
  4517  1E7E  160A  118A  2299  160A  158A  	fcall	_DS1302_read
  4518  1E83  00FC               	movwf	??_Time_read
  4519  1E84  087A               	movf	Time_read@min,w
  4520  1E85  0084               	movwf	4
  4521  1E86  087C               	movf	??_Time_read,w
  4522  1E87  1383               	bcf	3,7	;select IRP bank0
  4523  1E88  0080               	movwf	0
  4524                           
  4525                           ;Ds1302.h: 329: *hr = DS1302_read(0x85);
  4526  1E89  3085               	movlw	133
  4527  1E8A  160A  118A  2299   	fcall	_DS1302_read
  4528  1E8D  00FC               	movwf	??_Time_read
  4529  1E8E  087D               	movf	Time_read@hr,w
  4530  1E8F  0084               	movwf	4
  4531  1E90  087C               	movf	??_Time_read,w
  4532  1E91  1383               	bcf	3,7	;select IRP bank0
  4533  1E92  0080               	movwf	0
  4534  1E93  0008               	return
  4535  1E94                     __end_of_Time_read:	
  4536                           
  4537                           	psect	text10
  4538  0B9E                     __ptext10:	
  4539 ;; *************** function _SetupTime *****************
  4540 ;; Defined at:
  4541 ;;		line 310 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  timearray       1    wreg     PTR unsigned char 
  4544 ;;		 -> main@time(9), 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  timearray       1   43[BANK0 ] PTR unsigned char 
  4547 ;;		 -> main@time(9), 
  4548 ;;  x               1   40[BANK0 ] unsigned char 
  4549 ;;  x               1   39[BANK0 ] unsigned char 
  4550 ;;  mins            1   42[BANK0 ] unsigned char 
  4551 ;;  hr              1   41[BANK0 ] unsigned char 
  4552 ;;  terminated      1   38[BANK0 ] unsigned char 
  4553 ;;  Keys            1   37[BANK0 ] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      unsigned char 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4563 ;;      Params:         0       0       0       0       0
  4564 ;;      Locals:         0       7       0       0       0
  4565 ;;      Temps:          0       4       0       0       0
  4566 ;;      Totals:         0      11       0       0       0
  4567 ;;Total ram usage:       11 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    7
  4570 ;; This function calls:
  4571 ;;		_LCD5110_clear
  4572 ;;		_LCD5110_writeText
  4573 ;;		_Time_write
  4574 ;;		___bmul
  4575 ;;		_getKey
  4576 ;;		_readKeys
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _SetupTime
  4584  0B9E                     _SetupTime:	
  4585                           
  4586                           ;incstack = 0
  4587                           ; Regs used in _SetupTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4588                           ;SetupTime@timearray stored from wreg
  4589  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0BA0  00CB               	movwf	SetupTime@timearray
  4592                           
  4593                           ;College_bell.c: 312: timearray[0]= '0';timearray[1]= '0';timearray[3]= '0';timearray[4]
      +                          = '0';timearray[6]= '0';timearray[7]= '0';
  4594  0BA1  3030               	movlw	48
  4595  0BA2  00C1               	movwf	??_SetupTime
  4596  0BA3  084B               	movf	SetupTime@timearray,w
  4597  0BA4  0084               	movwf	4
  4598  0BA5  0841               	movf	??_SetupTime,w
  4599  0BA6  1383               	bcf	3,7	;select IRP bank0
  4600  0BA7  0080               	movwf	0
  4601  0BA8  3030               	movlw	48
  4602  0BA9  00C1               	movwf	??_SetupTime
  4603  0BAA  0A4B               	incf	SetupTime@timearray,w
  4604  0BAB  0084               	movwf	4
  4605  0BAC  0841               	movf	??_SetupTime,w
  4606  0BAD  0080               	movwf	0
  4607  0BAE  3030               	movlw	48
  4608  0BAF  00C1               	movwf	??_SetupTime
  4609  0BB0  084B               	movf	SetupTime@timearray,w
  4610  0BB1  3E03               	addlw	3
  4611  0BB2  0084               	movwf	4
  4612  0BB3  0841               	movf	??_SetupTime,w
  4613  0BB4  0080               	movwf	0
  4614  0BB5  3030               	movlw	48
  4615  0BB6  00C1               	movwf	??_SetupTime
  4616  0BB7  084B               	movf	SetupTime@timearray,w
  4617  0BB8  3E04               	addlw	4
  4618  0BB9  0084               	movwf	4
  4619  0BBA  0841               	movf	??_SetupTime,w
  4620  0BBB  0080               	movwf	0
  4621  0BBC  3030               	movlw	48
  4622  0BBD  00C1               	movwf	??_SetupTime
  4623  0BBE  084B               	movf	SetupTime@timearray,w
  4624  0BBF  3E06               	addlw	6
  4625  0BC0  0084               	movwf	4
  4626  0BC1  0841               	movf	??_SetupTime,w
  4627  0BC2  0080               	movwf	0
  4628  0BC3  3030               	movlw	48
  4629  0BC4  00C1               	movwf	??_SetupTime
  4630  0BC5  084B               	movf	SetupTime@timearray,w
  4631  0BC6  3E07               	addlw	7
  4632  0BC7  0084               	movwf	4
  4633  0BC8  0841               	movf	??_SetupTime,w
  4634  0BC9  0080               	movwf	0
  4635                           
  4636                           ;College_bell.c: 313: char terminated,Keys;
  4637                           ;College_bell.c: 314: unsigned char hr=0,mins=0;
  4638  0BCA  01C9               	clrf	SetupTime@hr
  4639  0BCB  01CA               	clrf	SetupTime@mins
  4640                           
  4641                           ;College_bell.c: 316: LCD5110_clear();
  4642  0BCC  160A  118A  220D  120A  158A  	fcall	_LCD5110_clear
  4643                           
  4644                           ;College_bell.c: 317: LCD5110_writeText(FONT_3x5,3,32, 3,5,timearray, 0x00);
  4645  0BD1  3012               	movlw	low (_FONT_3x5| (0+32768))
  4646  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  4647  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  4648  0BD4  00AE               	movwf	LCD5110_writeText@userFont
  4649  0BD5  3090               	movlw	high (_FONT_3x5| (0+32768))
  4650  0BD6  00AF               	movwf	LCD5110_writeText@userFont+1
  4651  0BD7  3003               	movlw	3
  4652  0BD8  00C1               	movwf	??_SetupTime
  4653  0BD9  0841               	movf	??_SetupTime,w
  4654  0BDA  00B0               	movwf	LCD5110_writeText@fontWidth
  4655  0BDB  3020               	movlw	32
  4656  0BDC  00C2               	movwf	??_SetupTime+1
  4657  0BDD  0842               	movf	??_SetupTime+1,w
  4658  0BDE  00B1               	movwf	LCD5110_writeText@fontOffset
  4659  0BDF  3003               	movlw	3
  4660  0BE0  00C3               	movwf	??_SetupTime+2
  4661  0BE1  0843               	movf	??_SetupTime+2,w
  4662  0BE2  00B2               	movwf	LCD5110_writeText@row
  4663  0BE3  3005               	movlw	5
  4664  0BE4  00C4               	movwf	??_SetupTime+3
  4665  0BE5  0844               	movf	??_SetupTime+3,w
  4666  0BE6  00B3               	movwf	LCD5110_writeText@col
  4667  0BE7  084B               	movf	SetupTime@timearray,w
  4668  0BE8  00B4               	movwf	LCD5110_writeText@characters
  4669  0BE9  3000               	movlw	0
  4670  0BEA  00B5               	movwf	LCD5110_writeText@characters+1
  4671  0BEB  01B6               	clrf	LCD5110_writeText@dispType
  4672  0BEC  160A  118A  26F0  120A  158A  	fcall	_LCD5110_writeText
  4673                           
  4674                           ;College_bell.c: 319: terminated = readKeys(timearray);
  4675  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  4676  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  4677  0BF3  084B               	movf	SetupTime@timearray,w
  4678  0BF4  120A  158A  21E2  120A  158A  	fcall	_readKeys
  4679  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4680  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4681  0BFB  00C1               	movwf	??_SetupTime
  4682  0BFC  0841               	movf	??_SetupTime,w
  4683  0BFD  00C6               	movwf	SetupTime@terminated
  4684                           
  4685                           ;College_bell.c: 320: if(terminated == 0){
  4686  0BFE  0846               	movf	SetupTime@terminated,w
  4687  0BFF  1903               	btfsc	3,2
  4688  0C00  2C0C               	goto	l4142
  4689  0C01  2C7A               	goto	l4180
  4690  0C02                     l4140:	
  4691                           ;College_bell.c: 321: while(Keys!='*') Keys = getKey();
  4692                           
  4693  0C02  120A  158A  24E9  120A  158A  	fcall	_getKey
  4694  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0C09  00C1               	movwf	??_SetupTime
  4697  0C0A  0841               	movf	??_SetupTime,w
  4698  0C0B  00C5               	movwf	SetupTime@Keys
  4699  0C0C                     l4142:	
  4700  0C0C  302A               	movlw	42
  4701  0C0D  0645               	xorwf	SetupTime@Keys,w
  4702  0C0E  1D03               	btfss	3,2
  4703  0C0F  2C02               	goto	l4140
  4704                           
  4705                           ;College_bell.c: 323: for(unsigned char x=0; x<5; x++){
  4706  0C10  01C7               	clrf	SetupTime@x
  4707  0C11  3005               	movlw	5
  4708  0C12  0247               	subwf	SetupTime@x,w
  4709  0C13  1803               	btfsc	3,0
  4710  0C14  2C65               	goto	l4170
  4711  0C15                     l4150:	
  4712                           
  4713                           ;College_bell.c: 324: if(x<2) hr = 10*(hr) + keypadMap[*(timearray++)-'0'];
  4714  0C15  3002               	movlw	2
  4715  0C16  0247               	subwf	SetupTime@x,w
  4716  0C17  1803               	skipnc
  4717  0C18  2C35               	goto	l4156
  4718  0C19  084B               	movf	SetupTime@timearray,w
  4719  0C1A  0084               	movwf	4
  4720  0C1B  1383               	bcf	3,7	;select IRP bank0
  4721  0C1C  0800               	movf	0,w
  4722  0C1D  3ED0               	addlw	208
  4723  0C1E  3ED1               	addlw	(low (_keypadMap| 0))& (0+255)
  4724  0C1F  0084               	movwf	4
  4725  0C20  300A               	movlw	10
  4726  0C21  00C1               	movwf	??_SetupTime
  4727  0C22  0841               	movf	??_SetupTime,w
  4728  0C23  00F0               	movwf	___bmul@multiplicand
  4729  0C24  0849               	movf	SetupTime@hr,w
  4730  0C25  160A  158A  2576  120A  158A  	fcall	___bmul
  4731  0C2A  1383               	bcf	3,7	;select IRP bank1
  4732  0C2B  0700               	addwf	0,w
  4733  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  4734  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  4735  0C2E  00C2               	movwf	??_SetupTime+1
  4736  0C2F  0842               	movf	??_SetupTime+1,w
  4737  0C30  00C9               	movwf	SetupTime@hr
  4738  0C31  3001               	movlw	1
  4739  0C32  00C1               	movwf	??_SetupTime
  4740  0C33  0841               	movf	??_SetupTime,w
  4741  0C34  07CB               	addwf	SetupTime@timearray,f
  4742  0C35                     l4156:	
  4743                           
  4744                           ;College_bell.c: 325: if(x==2) *(timearray++);
  4745  0C35  3002               	movlw	2
  4746  0C36  0647               	xorwf	SetupTime@x,w
  4747  0C37  1D03               	btfss	3,2
  4748  0C38  2C3D               	goto	l4160
  4749  0C39  3001               	movlw	1
  4750  0C3A  00C1               	movwf	??_SetupTime
  4751  0C3B  0841               	movf	??_SetupTime,w
  4752  0C3C  07CB               	addwf	SetupTime@timearray,f
  4753  0C3D                     l4160:	
  4754                           
  4755                           ;College_bell.c: 326: if (x>2) mins = 10*(mins)+ keypadMap[*(timearray++)-'0'];
  4756  0C3D  3003               	movlw	3
  4757  0C3E  0247               	subwf	SetupTime@x,w
  4758  0C3F  1C03               	skipc
  4759  0C40  2C5D               	goto	l4166
  4760  0C41  084B               	movf	SetupTime@timearray,w
  4761  0C42  0084               	movwf	4
  4762  0C43  1383               	bcf	3,7	;select IRP bank0
  4763  0C44  0800               	movf	0,w
  4764  0C45  3ED0               	addlw	208
  4765  0C46  3ED1               	addlw	(low (_keypadMap| 0))& (0+255)
  4766  0C47  0084               	movwf	4
  4767  0C48  300A               	movlw	10
  4768  0C49  00C1               	movwf	??_SetupTime
  4769  0C4A  0841               	movf	??_SetupTime,w
  4770  0C4B  00F0               	movwf	___bmul@multiplicand
  4771  0C4C  084A               	movf	SetupTime@mins,w
  4772  0C4D  160A  158A  2576  120A  158A  	fcall	___bmul
  4773  0C52  1383               	bcf	3,7	;select IRP bank1
  4774  0C53  0700               	addwf	0,w
  4775  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  4776  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  4777  0C56  00C2               	movwf	??_SetupTime+1
  4778  0C57  0842               	movf	??_SetupTime+1,w
  4779  0C58  00CA               	movwf	SetupTime@mins
  4780  0C59  3001               	movlw	1
  4781  0C5A  00C1               	movwf	??_SetupTime
  4782  0C5B  0841               	movf	??_SetupTime,w
  4783  0C5C  07CB               	addwf	SetupTime@timearray,f
  4784  0C5D                     l4166:	
  4785  0C5D  3001               	movlw	1
  4786  0C5E  00C1               	movwf	??_SetupTime
  4787  0C5F  0841               	movf	??_SetupTime,w
  4788  0C60  07C7               	addwf	SetupTime@x,f
  4789  0C61  3005               	movlw	5
  4790  0C62  0247               	subwf	SetupTime@x,w
  4791  0C63  1C03               	skipc
  4792  0C64  2C15               	goto	l4150
  4793  0C65                     l4170:	
  4794                           
  4795                           ;College_bell.c: 327: }
  4796                           ;College_bell.c: 328: if((hr > 24)||(mins > 60)) return 0;
  4797  0C65  3019               	movlw	25
  4798  0C66  0249               	subwf	SetupTime@hr,w
  4799  0C67  1803               	skipnc
  4800  0C68  2C6D               	goto	l4174
  4801  0C69  303D               	movlw	61
  4802  0C6A  024A               	subwf	SetupTime@mins,w
  4803  0C6B  1C03               	skipc
  4804  0C6C  2C6F               	goto	l4178
  4805  0C6D                     l4174:	
  4806  0C6D  3000               	movlw	0
  4807  0C6E  0008               	return
  4808  0C6F                     l4178:	
  4809                           
  4810                           ;College_bell.c: 329: Time_write(hr,mins,0);
  4811  0C6F  084A               	movf	SetupTime@mins,w
  4812  0C70  00C1               	movwf	??_SetupTime
  4813  0C71  0841               	movf	??_SetupTime,w
  4814  0C72  00FC               	movwf	Time_write@min
  4815  0C73  01FD               	clrf	Time_write@seconds
  4816  0C74  0849               	movf	SetupTime@hr,w
  4817  0C75  160A  118A  230A  120A  158A  	fcall	_Time_write
  4818  0C7A                     l4180:	
  4819                           
  4820                           ;College_bell.c: 330: }
  4821                           ;College_bell.c: 331: if(terminated == 1){
  4822  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0C7C  0346               	decf	SetupTime@terminated,w
  4825  0C7D  1D03               	btfss	3,2
  4826  0C7E  0008               	return
  4827                           
  4828                           ;College_bell.c: 332: for(unsigned char x=0; x<5; x++){
  4829  0C7F  01C8               	clrf	SetupTime@x_568
  4830  0C80  3005               	movlw	5
  4831  0C81  0248               	subwf	SetupTime@x_568,w
  4832  0C82  1803               	btfsc	3,0
  4833  0C83  2CD4               	goto	l4208
  4834  0C84                     l4188:	
  4835                           
  4836                           ;College_bell.c: 333: if(x<2) hr = 10*(hr) + keypadMap[*(timearray++)-'0'];
  4837  0C84  3002               	movlw	2
  4838  0C85  0248               	subwf	SetupTime@x_568,w
  4839  0C86  1803               	skipnc
  4840  0C87  2CA4               	goto	l4194
  4841  0C88  084B               	movf	SetupTime@timearray,w
  4842  0C89  0084               	movwf	4
  4843  0C8A  1383               	bcf	3,7	;select IRP bank0
  4844  0C8B  0800               	movf	0,w
  4845  0C8C  3ED0               	addlw	208
  4846  0C8D  3ED1               	addlw	(low (_keypadMap| 0))& (0+255)
  4847  0C8E  0084               	movwf	4
  4848  0C8F  300A               	movlw	10
  4849  0C90  00C1               	movwf	??_SetupTime
  4850  0C91  0841               	movf	??_SetupTime,w
  4851  0C92  00F0               	movwf	___bmul@multiplicand
  4852  0C93  0849               	movf	SetupTime@hr,w
  4853  0C94  160A  158A  2576  120A  158A  	fcall	___bmul
  4854  0C99  1383               	bcf	3,7	;select IRP bank1
  4855  0C9A  0700               	addwf	0,w
  4856  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  4857  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  4858  0C9D  00C2               	movwf	??_SetupTime+1
  4859  0C9E  0842               	movf	??_SetupTime+1,w
  4860  0C9F  00C9               	movwf	SetupTime@hr
  4861  0CA0  3001               	movlw	1
  4862  0CA1  00C1               	movwf	??_SetupTime
  4863  0CA2  0841               	movf	??_SetupTime,w
  4864  0CA3  07CB               	addwf	SetupTime@timearray,f
  4865  0CA4                     l4194:	
  4866                           
  4867                           ;College_bell.c: 334: if(x==2) *(timearray++);
  4868  0CA4  3002               	movlw	2
  4869  0CA5  0648               	xorwf	SetupTime@x_568,w
  4870  0CA6  1D03               	btfss	3,2
  4871  0CA7  2CAC               	goto	l4198
  4872  0CA8  3001               	movlw	1
  4873  0CA9  00C1               	movwf	??_SetupTime
  4874  0CAA  0841               	movf	??_SetupTime,w
  4875  0CAB  07CB               	addwf	SetupTime@timearray,f
  4876  0CAC                     l4198:	
  4877                           
  4878                           ;College_bell.c: 335: if (x>2) mins = 10*(mins)+ keypadMap[*(timearray++)-'0'];
  4879  0CAC  3003               	movlw	3
  4880  0CAD  0248               	subwf	SetupTime@x_568,w
  4881  0CAE  1C03               	skipc
  4882  0CAF  2CCC               	goto	l4204
  4883  0CB0  084B               	movf	SetupTime@timearray,w
  4884  0CB1  0084               	movwf	4
  4885  0CB2  1383               	bcf	3,7	;select IRP bank0
  4886  0CB3  0800               	movf	0,w
  4887  0CB4  3ED0               	addlw	208
  4888  0CB5  3ED1               	addlw	(low (_keypadMap| 0))& (0+255)
  4889  0CB6  0084               	movwf	4
  4890  0CB7  300A               	movlw	10
  4891  0CB8  00C1               	movwf	??_SetupTime
  4892  0CB9  0841               	movf	??_SetupTime,w
  4893  0CBA  00F0               	movwf	___bmul@multiplicand
  4894  0CBB  084A               	movf	SetupTime@mins,w
  4895  0CBC  160A  158A  2576  120A  158A  	fcall	___bmul
  4896  0CC1  1383               	bcf	3,7	;select IRP bank1
  4897  0CC2  0700               	addwf	0,w
  4898  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  4900  0CC5  00C2               	movwf	??_SetupTime+1
  4901  0CC6  0842               	movf	??_SetupTime+1,w
  4902  0CC7  00CA               	movwf	SetupTime@mins
  4903  0CC8  3001               	movlw	1
  4904  0CC9  00C1               	movwf	??_SetupTime
  4905  0CCA  0841               	movf	??_SetupTime,w
  4906  0CCB  07CB               	addwf	SetupTime@timearray,f
  4907  0CCC                     l4204:	
  4908  0CCC  3001               	movlw	1
  4909  0CCD  00C1               	movwf	??_SetupTime
  4910  0CCE  0841               	movf	??_SetupTime,w
  4911  0CCF  07C8               	addwf	SetupTime@x_568,f
  4912  0CD0  3005               	movlw	5
  4913  0CD1  0248               	subwf	SetupTime@x_568,w
  4914  0CD2  1C03               	skipc
  4915  0CD3  2C84               	goto	l4188
  4916  0CD4                     l4208:	
  4917                           
  4918                           ;College_bell.c: 336: }
  4919                           ;College_bell.c: 337: if((hr > 24)||(mins > 60)) return 0;
  4920  0CD4  3019               	movlw	25
  4921  0CD5  0249               	subwf	SetupTime@hr,w
  4922  0CD6  1803               	skipnc
  4923  0CD7  2CDC               	goto	l4212
  4924  0CD8  303D               	movlw	61
  4925  0CD9  024A               	subwf	SetupTime@mins,w
  4926  0CDA  1C03               	skipc
  4927  0CDB  2CDE               	goto	l4216
  4928  0CDC                     l4212:	
  4929  0CDC  3000               	movlw	0
  4930  0CDD  0008               	return
  4931  0CDE                     l4216:	
  4932                           
  4933                           ;College_bell.c: 338: Time_write(hr,mins,0); return 1;
  4934  0CDE  084A               	movf	SetupTime@mins,w
  4935  0CDF  00C1               	movwf	??_SetupTime
  4936  0CE0  0841               	movf	??_SetupTime,w
  4937  0CE1  00FC               	movwf	Time_write@min
  4938  0CE2  01FD               	clrf	Time_write@seconds
  4939  0CE3  0849               	movf	SetupTime@hr,w
  4940  0CE4  160A  118A  230A   	fcall	_Time_write
  4941  0CE7  3001               	movlw	1
  4942  0CE8  0008               	return
  4943  0CE9                     __end_of_SetupTime:	
  4944                           
  4945                           	psect	text11
  4946  09E2                     __ptext11:	
  4947 ;; *************** function _readKeys *****************
  4948 ;; Defined at:
  4949 ;;		line 345 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  time            1    wreg     PTR unsigned char 
  4952 ;;		 -> main@time(9), 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  time            1   31[BANK0 ] PTR unsigned char 
  4955 ;;		 -> main@time(9), 
  4956 ;;  count           1   32[BANK0 ] unsigned char 
  4957 ;;  terminated      1   30[BANK0 ] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      unsigned char 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4967 ;;      Params:         0       0       0       0       0
  4968 ;;      Locals:         0       3       0       0       0
  4969 ;;      Temps:          0       4       0       0       0
  4970 ;;      Totals:         0       7       0       0       0
  4971 ;;Total ram usage:        7 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    6
  4974 ;; This function calls:
  4975 ;;		_LCD5110_writeText
  4976 ;;		_getKey
  4977 ;; This function is called by:
  4978 ;;		_readAndStore
  4979 ;;		_SetupTime
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function _readKeys
  4985  09E2                     _readKeys:	
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _readKeys: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4989                           ;readKeys@time stored from wreg
  4990  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  4991  09E3  1303               	bcf	3,6	;RP1=0, select bank0
  4992  09E4  00BF               	movwf	readKeys@time
  4993                           
  4994                           ;College_bell.c: 346: unsigned char count= 0,terminated=0;
  4995  09E5  01C0               	clrf	readKeys@count
  4996  09E6  2A4A               	goto	L3
  4997  09E7                     l3788:	
  4998                           ;College_bell.c: 348: while(count<8){
  4999                           
  5000                           
  5001                           ;College_bell.c: 349: LCD5110_writeText(FONT_3x5,3,32, 3,5,time, 0x00);
  5002  09E7  3012               	movlw	low (_FONT_3x5| (0+32768))
  5003  09E8  00AE               	movwf	LCD5110_writeText@userFont
  5004  09E9  3090               	movlw	high (_FONT_3x5| (0+32768))
  5005  09EA  00AF               	movwf	LCD5110_writeText@userFont+1
  5006  09EB  3003               	movlw	3
  5007  09EC  00BA               	movwf	??_readKeys
  5008  09ED  083A               	movf	??_readKeys,w
  5009  09EE  00B0               	movwf	LCD5110_writeText@fontWidth
  5010  09EF  3020               	movlw	32
  5011  09F0  00BB               	movwf	??_readKeys+1
  5012  09F1  083B               	movf	??_readKeys+1,w
  5013  09F2  00B1               	movwf	LCD5110_writeText@fontOffset
  5014  09F3  3003               	movlw	3
  5015  09F4  00BC               	movwf	??_readKeys+2
  5016  09F5  083C               	movf	??_readKeys+2,w
  5017  09F6  00B2               	movwf	LCD5110_writeText@row
  5018  09F7  3005               	movlw	5
  5019  09F8  00BD               	movwf	??_readKeys+3
  5020  09F9  083D               	movf	??_readKeys+3,w
  5021  09FA  00B3               	movwf	LCD5110_writeText@col
  5022  09FB  083F               	movf	readKeys@time,w
  5023  09FC  00B4               	movwf	LCD5110_writeText@characters
  5024  09FD  3000               	movlw	0
  5025  09FE  00B5               	movwf	LCD5110_writeText@characters+1
  5026  09FF  01B6               	clrf	LCD5110_writeText@dispType
  5027  0A00  160A  118A  26F0  120A  158A  	fcall	_LCD5110_writeText
  5028                           
  5029                           ;College_bell.c: 350: Keys1=getKey();
  5030  0A05  120A  158A  24E9  120A  158A  	fcall	_getKey
  5031  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  5032  0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  5033  0A0C  00BA               	movwf	??_readKeys
  5034  0A0D  083A               	movf	??_readKeys,w
  5035  0A0E  00DB               	movwf	_Keys1
  5036                           
  5037                           ;College_bell.c: 351: switch(Keys1){
  5038  0A0F  2A86               	goto	l3828
  5039  0A10                     l3792:	
  5040                           ;College_bell.c: 352: case 0:
  5041                           
  5042                           
  5043                           ;College_bell.c: 353: if((count == 2)||(count== 5)){Keys1 =':'; time[count] = Keys1; ++c
      +                          ount;LCD5110_writeText(FONT_3x5,3,32, 3,5,time, 0x00); terminated =0;}
  5044  0A10  3002               	movlw	2
  5045  0A11  0640               	xorwf	readKeys@count,w
  5046  0A12  1903               	btfsc	3,2
  5047  0A13  2A18               	goto	l3796
  5048  0A14  3005               	movlw	5
  5049  0A15  0640               	xorwf	readKeys@count,w
  5050  0A16  1D03               	btfss	3,2
  5051  0A17  2AB1               	goto	l3830
  5052  0A18                     l3796:	
  5053  0A18  303A               	movlw	58
  5054  0A19  00BA               	movwf	??_readKeys
  5055  0A1A  083A               	movf	??_readKeys,w
  5056  0A1B  00DB               	movwf	_Keys1
  5057  0A1C                     l3806:	
  5058                           ;College_bell.c: 356: case '0': case '1': case '2': case '3': case '4':
  5059                           
  5060                           ;College_bell.c: 354: break;
  5061                           
  5062                           
  5063                           ;College_bell.c: 357: case '5': case '6': case '7': case '8': case '9':
  5064                           ;College_bell.c: 359: time[count] = Keys1;
  5065  0A1C  085B               	movf	_Keys1,w
  5066  0A1D  00BA               	movwf	??_readKeys
  5067  0A1E  0840               	movf	readKeys@count,w
  5068  0A1F  073F               	addwf	readKeys@time,w
  5069  0A20  00BB               	movwf	??_readKeys+1
  5070  0A21  083B               	movf	??_readKeys+1,w
  5071  0A22  0084               	movwf	4
  5072  0A23  083A               	movf	??_readKeys,w
  5073  0A24  1383               	bcf	3,7	;select IRP bank0
  5074  0A25  0080               	movwf	0
  5075                           
  5076                           ;College_bell.c: 360: ++count;
  5077  0A26  3001               	movlw	1
  5078  0A27  00BA               	movwf	??_readKeys
  5079  0A28  083A               	movf	??_readKeys,w
  5080  0A29  07C0               	addwf	readKeys@count,f
  5081                           
  5082                           ;College_bell.c: 362: LCD5110_writeText(FONT_3x5,3,32, 3,5,time, 0x00);
  5083  0A2A  3012               	movlw	low (_FONT_3x5| (0+32768))
  5084  0A2B  00AE               	movwf	LCD5110_writeText@userFont
  5085  0A2C  3090               	movlw	high (_FONT_3x5| (0+32768))
  5086  0A2D  00AF               	movwf	LCD5110_writeText@userFont+1
  5087  0A2E  3003               	movlw	3
  5088  0A2F  00BA               	movwf	??_readKeys
  5089  0A30  083A               	movf	??_readKeys,w
  5090  0A31  00B0               	movwf	LCD5110_writeText@fontWidth
  5091  0A32  3020               	movlw	32
  5092  0A33  00BB               	movwf	??_readKeys+1
  5093  0A34  083B               	movf	??_readKeys+1,w
  5094  0A35  00B1               	movwf	LCD5110_writeText@fontOffset
  5095  0A36  3003               	movlw	3
  5096  0A37  00BC               	movwf	??_readKeys+2
  5097  0A38  083C               	movf	??_readKeys+2,w
  5098  0A39  00B2               	movwf	LCD5110_writeText@row
  5099  0A3A  3005               	movlw	5
  5100  0A3B  00BD               	movwf	??_readKeys+3
  5101  0A3C  083D               	movf	??_readKeys+3,w
  5102  0A3D  00B3               	movwf	LCD5110_writeText@col
  5103  0A3E  083F               	movf	readKeys@time,w
  5104  0A3F  00B4               	movwf	LCD5110_writeText@characters
  5105  0A40  3000               	movlw	0
  5106  0A41  00B5               	movwf	LCD5110_writeText@characters+1
  5107  0A42  01B6               	clrf	LCD5110_writeText@dispType
  5108  0A43  160A  118A  26F0  120A  158A  	fcall	_LCD5110_writeText
  5109                           
  5110                           ;College_bell.c: 363: terminated =0;
  5111  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0A4A                     L3:	
  5114  0A4A  01BE               	clrf	readKeys@terminated
  5115                           
  5116                           ;College_bell.c: 364: break;
  5117  0A4B  2AB1               	goto	l3830
  5118  0A4C                     l3814:	
  5119                           ;College_bell.c: 365: case '*':
  5120                           
  5121                           
  5122                           ;College_bell.c: 366: count = 8;
  5123  0A4C  3008               	movlw	8
  5124  0A4D  00BA               	movwf	??_readKeys
  5125  0A4E  083A               	movf	??_readKeys,w
  5126  0A4F  00C0               	movwf	readKeys@count
  5127                           
  5128                           ;College_bell.c: 367: terminated =1;
  5129  0A50  01BE               	clrf	readKeys@terminated
  5130  0A51  0ABE               	incf	readKeys@terminated,f
  5131                           
  5132                           ;College_bell.c: 368: break;
  5133  0A52  2AB1               	goto	l3830
  5134  0A53                     l3818:	
  5135                           ;College_bell.c: 369: case'#':
  5136                           
  5137                           
  5138                           ;College_bell.c: 370: --count;
  5139  0A53  3001               	movlw	1
  5140  0A54  02C0               	subwf	readKeys@count,f
  5141                           
  5142                           ;College_bell.c: 371: if ((count != 2)&&(count !=5)) time[count] = '0';
  5143  0A55  3002               	movlw	2
  5144  0A56  0640               	xorwf	readKeys@count,w
  5145  0A57  1903               	btfsc	3,2
  5146  0A58  2A67               	goto	l3824
  5147  0A59  3005               	movlw	5
  5148  0A5A  0640               	xorwf	readKeys@count,w
  5149  0A5B  1903               	btfsc	3,2
  5150  0A5C  2A67               	goto	l3824
  5151  0A5D  3030               	movlw	48
  5152  0A5E  00BA               	movwf	??_readKeys
  5153  0A5F  0840               	movf	readKeys@count,w
  5154  0A60  073F               	addwf	readKeys@time,w
  5155  0A61  00BB               	movwf	??_readKeys+1
  5156  0A62  083B               	movf	??_readKeys+1,w
  5157  0A63  0084               	movwf	4
  5158  0A64  083A               	movf	??_readKeys,w
  5159  0A65  1383               	bcf	3,7	;select IRP bank0
  5160  0A66  0080               	movwf	0
  5161  0A67                     l3824:	
  5162                           
  5163                           ;College_bell.c: 372: LCD5110_writeText(FONT_3x5,3,32, 3,5,time, 0x00);
  5164  0A67  3012               	movlw	low (_FONT_3x5| (0+32768))
  5165  0A68  00AE               	movwf	LCD5110_writeText@userFont
  5166  0A69  3090               	movlw	high (_FONT_3x5| (0+32768))
  5167  0A6A  00AF               	movwf	LCD5110_writeText@userFont+1
  5168  0A6B  3003               	movlw	3
  5169  0A6C  00BA               	movwf	??_readKeys
  5170  0A6D  083A               	movf	??_readKeys,w
  5171  0A6E  00B0               	movwf	LCD5110_writeText@fontWidth
  5172  0A6F  3020               	movlw	32
  5173  0A70  00BB               	movwf	??_readKeys+1
  5174  0A71  083B               	movf	??_readKeys+1,w
  5175  0A72  00B1               	movwf	LCD5110_writeText@fontOffset
  5176  0A73  3003               	movlw	3
  5177  0A74  00BC               	movwf	??_readKeys+2
  5178  0A75  083C               	movf	??_readKeys+2,w
  5179  0A76  00B2               	movwf	LCD5110_writeText@row
  5180  0A77  3005               	movlw	5
  5181  0A78  00BD               	movwf	??_readKeys+3
  5182  0A79  083D               	movf	??_readKeys+3,w
  5183  0A7A  00B3               	movwf	LCD5110_writeText@col
  5184  0A7B  083F               	movf	readKeys@time,w
  5185  0A7C  00B4               	movwf	LCD5110_writeText@characters
  5186  0A7D  3000               	movlw	0
  5187  0A7E  00B5               	movwf	LCD5110_writeText@characters+1
  5188  0A7F  01B6               	clrf	LCD5110_writeText@dispType
  5189  0A80  160A  118A  26F0  120A  158A  	fcall	_LCD5110_writeText
  5190                           
  5191                           ;College_bell.c: 376: }
  5192                           
  5193                           ;College_bell.c: 374: break;
  5194  0A85  2AB1               	goto	l3830
  5195  0A86                     l3828:	
  5196  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0A87  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0A88  085B               	movf	_Keys1,w
  5199                           
  5200                           ; Switch size 1, requested type "space"
  5201                           ; Number of cases is 13, Range of values is 0 to 57
  5202                           ; switch strategies available:
  5203                           ; Name         Instructions Cycles
  5204                           ; simple_byte           40    21 (average)
  5205                           ; direct_byte          182     8 (fixed)
  5206                           ; jumptable            260     6 (fixed)
  5207                           ;	Chosen strategy is simple_byte
  5208  0A89  3A00               	xorlw	0	; case 0
  5209  0A8A  1903               	skipnz
  5210  0A8B  2A10               	goto	l3792
  5211  0A8C  3A23               	xorlw	35	; case 35
  5212  0A8D  1903               	skipnz
  5213  0A8E  2A53               	goto	l3818
  5214  0A8F  3A09               	xorlw	9	; case 42
  5215  0A90  1903               	skipnz
  5216  0A91  2A4C               	goto	l3814
  5217  0A92  3A1A               	xorlw	26	; case 48
  5218  0A93  1903               	skipnz
  5219  0A94  2A1C               	goto	l3806
  5220  0A95  3A01               	xorlw	1	; case 49
  5221  0A96  1903               	skipnz
  5222  0A97  2A1C               	goto	l3806
  5223  0A98  3A03               	xorlw	3	; case 50
  5224  0A99  1903               	skipnz
  5225  0A9A  2A1C               	goto	l3806
  5226  0A9B  3A01               	xorlw	1	; case 51
  5227  0A9C  1903               	skipnz
  5228  0A9D  2A1C               	goto	l3806
  5229  0A9E  3A07               	xorlw	7	; case 52
  5230  0A9F  1903               	skipnz
  5231  0AA0  2A1C               	goto	l3806
  5232  0AA1  3A01               	xorlw	1	; case 53
  5233  0AA2  1903               	skipnz
  5234  0AA3  2A1C               	goto	l3806
  5235  0AA4  3A03               	xorlw	3	; case 54
  5236  0AA5  1903               	skipnz
  5237  0AA6  2A1C               	goto	l3806
  5238  0AA7  3A01               	xorlw	1	; case 55
  5239  0AA8  1903               	skipnz
  5240  0AA9  2A1C               	goto	l3806
  5241  0AAA  3A0F               	xorlw	15	; case 56
  5242  0AAB  1903               	skipnz
  5243  0AAC  2A1C               	goto	l3806
  5244  0AAD  3A01               	xorlw	1	; case 57
  5245  0AAE  1903               	skipnz
  5246  0AAF  2A1C               	goto	l3806
  5247  0AB0  2AB1               	goto	l3830
  5248  0AB1                     l3830:	
  5249  0AB1  3008               	movlw	8
  5250  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0AB4  0240               	subwf	readKeys@count,w
  5253  0AB5  1C03               	skipc
  5254  0AB6  29E7               	goto	l3788
  5255                           
  5256                           ;College_bell.c: 377: }
  5257                           ;College_bell.c: 378: return terminated;
  5258  0AB7  083E               	movf	readKeys@terminated,w
  5259  0AB8  0008               	return
  5260  0AB9                     __end_of_readKeys:	
  5261                           
  5262                           	psect	text12
  5263  0CE9                     __ptext12:	
  5264 ;; *************** function _getKey *****************
  5265 ;; Defined at:
  5266 ;;		line 107 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Keypad.h"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  i               1   12[COMMON] unsigned char 
  5271 ;;  Col             1   11[COMMON] unsigned char 
  5272 ;;  Row             1   10[COMMON] unsigned char 
  5273 ;;  Map             1    9[COMMON] unsigned char 
  5274 ;;  KeyTell         1    8[COMMON] unsigned char 
  5275 ;;  KeyPress        1    7[COMMON] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      unsigned char 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5285 ;;      Params:         0       0       0       0       0
  5286 ;;      Locals:         6       0       0       0       0
  5287 ;;      Temps:          3       0       0       0       0
  5288 ;;      Totals:         9       0       0       0       0
  5289 ;;Total ram usage:        9 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    1
  5292 ;; This function calls:
  5293 ;;		_PinSelect
  5294 ;;		___bmul
  5295 ;;		_readPin
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;;		_readAndStore
  5299 ;;		_SetupTime
  5300 ;;		_readKeys
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           
  5305                           ;psect for function _getKey
  5306  0CE9                     _getKey:	
  5307                           
  5308                           ;Keypad.h: 108: char i, Row, Col, Map=0, KeyTell=0, KeyPress;
  5309                           
  5310                           ;incstack = 0
  5311                           ; Regs used in _getKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5312  0CE9  01F9               	clrf	getKey@Map
  5313  0CEA  01F8               	clrf	getKey@KeyTell
  5314                           
  5315                           ;Keypad.h: 111: if(KIT==0){
  5316  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  5317  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  5318  0CED  0857               	movf	_KIT,w
  5319  0CEE  1D03               	btfss	3,2
  5320  0CEF  2DB0               	goto	l3542
  5321                           
  5322                           ;Keypad.h: 112: for(Row=0; Row<KRows; Row++ ){
  5323  0CF0  01FA               	clrf	getKey@Row
  5324  0CF1                     l3532:	
  5325  0CF1  085A               	movf	_KRows,w
  5326  0CF2  027A               	subwf	getKey@Row,w
  5327  0CF3  1803               	btfsc	3,0
  5328  0CF4  2D96               	goto	l3534
  5329                           
  5330                           ;Keypad.h: 113: Map = Row;
  5331  0CF5  087A               	movf	getKey@Row,w
  5332  0CF6  00F4               	movwf	??_getKey
  5333  0CF7  0874               	movf	??_getKey,w
  5334  0CF8  00F9               	movwf	getKey@Map
  5335                           
  5336                           ;Keypad.h: 114: for(i=0; i<KRows; i++){
  5337  0CF9  01FC               	clrf	getKey@i
  5338  0CFA                     l3500:	
  5339  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0CFC  085A               	movf	_KRows,w
  5342  0CFD  027C               	subwf	getKey@i,w
  5343  0CFE  1803               	btfsc	3,0
  5344  0CFF  2D22               	goto	l3502
  5345                           
  5346                           ;Keypad.h: 115: PinSelect(KRowPins[i], 1);
  5347  0D00  01F0               	clrf	PinSelect@segState
  5348  0D01  0AF0               	incf	PinSelect@segState,f
  5349  0D02  087C               	movf	getKey@i,w
  5350  0D03  0759               	addwf	_KRowPins,w
  5351  0D04  00F4               	movwf	??_getKey
  5352  0D05  0874               	movf	??_getKey,w
  5353  0D06  0084               	movwf	4
  5354  0D07  1383               	bcf	3,7	;select IRP bank0
  5355  0D08  0800               	movf	0,w
  5356  0D09  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5357                           
  5358                           ;Keypad.h: 116: PinSelect(KRowPins[Map], 0);
  5359  0D0E  01F0               	clrf	PinSelect@segState
  5360  0D0F  0879               	movf	getKey@Map,w
  5361  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  5362  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  5363  0D12  0759               	addwf	_KRowPins,w
  5364  0D13  00F4               	movwf	??_getKey
  5365  0D14  0874               	movf	??_getKey,w
  5366  0D15  0084               	movwf	4
  5367  0D16  1383               	bcf	3,7	;select IRP bank0
  5368  0D17  0800               	movf	0,w
  5369  0D18  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5370  0D1D  3001               	movlw	1
  5371  0D1E  00F4               	movwf	??_getKey
  5372  0D1F  0874               	movf	??_getKey,w
  5373  0D20  07FC               	addwf	getKey@i,f
  5374  0D21  2CFA               	goto	l3500
  5375  0D22                     l3502:	
  5376                           
  5377                           ;Keypad.h: 117: }
  5378                           ;Keypad.h: 118: for(Col =0; Col<KCols; Col++ ){
  5379  0D22  01FB               	clrf	getKey@Col
  5380  0D23                     l3528:	
  5381  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  5382  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  5383  0D25  0856               	movf	_KCols,w
  5384  0D26  027B               	subwf	getKey@Col,w
  5385  0D27  1803               	btfsc	3,0
  5386  0D28  2D91               	goto	l3530
  5387                           
  5388                           ;Keypad.h: 119: if(readPin(KColPins[Col]) == 0){
  5389  0D29  087B               	movf	getKey@Col,w
  5390  0D2A  0755               	addwf	_KColPins,w
  5391  0D2B  00F4               	movwf	??_getKey
  5392  0D2C  0874               	movf	??_getKey,w
  5393  0D2D  0084               	movwf	4
  5394  0D2E  1383               	bcf	3,7	;select IRP bank0
  5395  0D2F  0800               	movf	0,w
  5396  0D30  120A  158A  205E  120A  158A  	fcall	_readPin
  5397  0D35  3A00               	xorlw	0
  5398  0D36  1D03               	skipz
  5399  0D37  2D83               	goto	l3524
  5400                           
  5401                           ;Keypad.h: 120: if(Indicator) {
  5402  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  5404  0D3A  0854               	movf	_Indicator,w
  5405  0D3B  1903               	btfsc	3,2
  5406  0D3C  2D5C               	goto	l3518
  5407                           
  5408                           ;Keypad.h: 121: PinSelect(Indicator, 1); _delay((unsigned long)((300)*(20000000/4000.0))
      +                          ); PinSelect(Indicator, 0); KeyTell=1; KeyPress = KMap[(Row*KCols)+Col]; }
  5409  0D3D  01F0               	clrf	PinSelect@segState
  5410  0D3E  0AF0               	incf	PinSelect@segState,f
  5411  0D3F  0854               	movf	_Indicator,w
  5412  0D40  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5413  0D45  3008               	movlw	8
  5414  0D46  00F6               	movwf	??_getKey+2
  5415  0D47  309D               	movlw	157
  5416  0D48  00F5               	movwf	??_getKey+1
  5417  0D49  300B               	movlw	11
  5418  0D4A  00F4               	movwf	??_getKey
  5419  0D4B                     u4257:	
  5420  0D4B  0BF4               	decfsz	??_getKey,f
  5421  0D4C  2D4B               	goto	u4257
  5422  0D4D  0BF5               	decfsz	??_getKey+1,f
  5423  0D4E  2D4B               	goto	u4257
  5424  0D4F  0BF6               	decfsz	??_getKey+2,f
  5425  0D50  2D4B               	goto	u4257
  5426  0D51  2D52               	nop2
  5427  0D52  01F0               	clrf	PinSelect@segState
  5428  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0D55  0854               	movf	_Indicator,w
  5431  0D56  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5432  0D5B  2D69               	goto	L8
  5433  0D5C                     l3518:	
  5434                           
  5435                           ;Keypad.h: 122: else {
  5436                           ;Keypad.h: 123: _delay((unsigned long)((300)*(20000000/4000.0))); KeyTell=1; KeyPress = 
      +                          KMap[(Row*KCols)+Col];}
  5437  0D5C  3008               	movlw	8
  5438  0D5D  00F6               	movwf	??_getKey+2
  5439  0D5E  309D               	movlw	157
  5440  0D5F  00F5               	movwf	??_getKey+1
  5441  0D60  300B               	movlw	11
  5442  0D61  00F4               	movwf	??_getKey
  5443  0D62                     u4267:	
  5444  0D62  0BF4               	decfsz	??_getKey,f
  5445  0D63  2D62               	goto	u4267
  5446  0D64  0BF5               	decfsz	??_getKey+1,f
  5447  0D65  2D62               	goto	u4267
  5448  0D66  0BF6               	decfsz	??_getKey+2,f
  5449  0D67  2D62               	goto	u4267
  5450  0D68  2D69               	nop2
  5451  0D69                     L8:	
  5452  0D69  01F8               	clrf	getKey@KeyTell
  5453  0D6A  0AF8               	incf	getKey@KeyTell,f
  5454  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  5455  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  5456  0D6D  0856               	movf	_KCols,w
  5457  0D6E  00F4               	movwf	??_getKey
  5458  0D6F  0874               	movf	??_getKey,w
  5459  0D70  00F0               	movwf	___bmul@multiplicand
  5460  0D71  087A               	movf	getKey@Row,w
  5461  0D72  160A  158A  2576  120A  158A  	fcall	___bmul
  5462  0D77  077B               	addwf	getKey@Col,w
  5463  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5464  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5465  0D7A  0758               	addwf	_KMap,w
  5466  0D7B  00F5               	movwf	??_getKey+1
  5467  0D7C  0875               	movf	??_getKey+1,w
  5468  0D7D  0084               	movwf	4
  5469  0D7E  1383               	bcf	3,7	;select IRP bank0
  5470  0D7F  0800               	movf	0,w
  5471  0D80  00F6               	movwf	??_getKey+2
  5472  0D81  0876               	movf	??_getKey+2,w
  5473  0D82  00F7               	movwf	getKey@KeyPress
  5474  0D83                     l3524:	
  5475                           
  5476                           ;Keypad.h: 124: }
  5477                           ;Keypad.h: 125: _delay((unsigned long)((5)*(20000000/4000.0)));
  5478  0D83  3021               	movlw	33
  5479  0D84  00F5               	movwf	??_getKey+1
  5480  0D85  3076               	movlw	118
  5481  0D86  00F4               	movwf	??_getKey
  5482  0D87                     u4277:	
  5483  0D87  0BF4               	decfsz	??_getKey,f
  5484  0D88  2D87               	goto	u4277
  5485  0D89  0BF5               	decfsz	??_getKey+1,f
  5486  0D8A  2D87               	goto	u4277
  5487  0D8B  0000               	nop
  5488  0D8C  3001               	movlw	1
  5489  0D8D  00F4               	movwf	??_getKey
  5490  0D8E  0874               	movf	??_getKey,w
  5491  0D8F  07FB               	addwf	getKey@Col,f
  5492  0D90  2D23               	goto	l3528
  5493  0D91                     l3530:	
  5494  0D91  3001               	movlw	1
  5495  0D92  00F4               	movwf	??_getKey
  5496  0D93  0874               	movf	??_getKey,w
  5497  0D94  07FA               	addwf	getKey@Row,f
  5498  0D95  2CF1               	goto	l3532
  5499  0D96                     l3534:	
  5500                           
  5501                           ;Keypad.h: 126: }
  5502                           ;Keypad.h: 127: }
  5503                           ;Keypad.h: 128: for(i=0; i<KRows; i++) PinSelect(KRowPins[i], 1);
  5504  0D96  01FC               	clrf	getKey@i
  5505  0D97                     l3540:	
  5506  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5508  0D99  085A               	movf	_KRows,w
  5509  0D9A  027C               	subwf	getKey@i,w
  5510  0D9B  1803               	btfsc	3,0
  5511  0D9C  2DB0               	goto	l3542
  5512  0D9D  01F0               	clrf	PinSelect@segState
  5513  0D9E  0AF0               	incf	PinSelect@segState,f
  5514  0D9F  087C               	movf	getKey@i,w
  5515  0DA0  0759               	addwf	_KRowPins,w
  5516  0DA1  00F4               	movwf	??_getKey
  5517  0DA2  0874               	movf	??_getKey,w
  5518  0DA3  0084               	movwf	4
  5519  0DA4  1383               	bcf	3,7	;select IRP bank0
  5520  0DA5  0800               	movf	0,w
  5521  0DA6  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5522  0DAB  3001               	movlw	1
  5523  0DAC  00F4               	movwf	??_getKey
  5524  0DAD  0874               	movf	??_getKey,w
  5525  0DAE  07FC               	addwf	getKey@i,f
  5526  0DAF  2D97               	goto	l3540
  5527  0DB0                     l3542:	
  5528                           
  5529                           ;Keypad.h: 129: }
  5530                           ;Keypad.h: 131: if(KIT==1){
  5531  0DB0  0357               	decf	_KIT,w
  5532  0DB1  1D03               	btfss	3,2
  5533  0DB2  2E72               	goto	l3596
  5534                           
  5535                           ;Keypad.h: 132: for(Row=0; Row<KRows; Row++ ){
  5536  0DB3  01FA               	clrf	getKey@Row
  5537  0DB4                     l3586:	
  5538  0DB4  085A               	movf	_KRows,w
  5539  0DB5  027A               	subwf	getKey@Row,w
  5540  0DB6  1803               	btfsc	3,0
  5541  0DB7  2E59               	goto	l3588
  5542                           
  5543                           ;Keypad.h: 133: Map = Row;
  5544  0DB8  087A               	movf	getKey@Row,w
  5545  0DB9  00F4               	movwf	??_getKey
  5546  0DBA  0874               	movf	??_getKey,w
  5547  0DBB  00F9               	movwf	getKey@Map
  5548                           
  5549                           ;Keypad.h: 134: for(i=0; i<KRows; i++){
  5550  0DBC  01FC               	clrf	getKey@i
  5551  0DBD                     l3554:	
  5552  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  5553  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  5554  0DBF  085A               	movf	_KRows,w
  5555  0DC0  027C               	subwf	getKey@i,w
  5556  0DC1  1803               	btfsc	3,0
  5557  0DC2  2DE5               	goto	l3556
  5558                           
  5559                           ;Keypad.h: 135: PinSelect(KRowPins[i], 0);
  5560  0DC3  01F0               	clrf	PinSelect@segState
  5561  0DC4  087C               	movf	getKey@i,w
  5562  0DC5  0759               	addwf	_KRowPins,w
  5563  0DC6  00F4               	movwf	??_getKey
  5564  0DC7  0874               	movf	??_getKey,w
  5565  0DC8  0084               	movwf	4
  5566  0DC9  1383               	bcf	3,7	;select IRP bank0
  5567  0DCA  0800               	movf	0,w
  5568  0DCB  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5569                           
  5570                           ;Keypad.h: 136: PinSelect(KRowPins[Map], 1);
  5571  0DD0  01F0               	clrf	PinSelect@segState
  5572  0DD1  0AF0               	incf	PinSelect@segState,f
  5573  0DD2  0879               	movf	getKey@Map,w
  5574  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  5575  0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  5576  0DD5  0759               	addwf	_KRowPins,w
  5577  0DD6  00F4               	movwf	??_getKey
  5578  0DD7  0874               	movf	??_getKey,w
  5579  0DD8  0084               	movwf	4
  5580  0DD9  1383               	bcf	3,7	;select IRP bank0
  5581  0DDA  0800               	movf	0,w
  5582  0DDB  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5583  0DE0  3001               	movlw	1
  5584  0DE1  00F4               	movwf	??_getKey
  5585  0DE2  0874               	movf	??_getKey,w
  5586  0DE3  07FC               	addwf	getKey@i,f
  5587  0DE4  2DBD               	goto	l3554
  5588  0DE5                     l3556:	
  5589                           
  5590                           ;Keypad.h: 137: }
  5591                           ;Keypad.h: 138: for(Col =0; Col<KCols; Col++ ){
  5592  0DE5  01FB               	clrf	getKey@Col
  5593  0DE6                     l3582:	
  5594  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0DE8  0856               	movf	_KCols,w
  5597  0DE9  027B               	subwf	getKey@Col,w
  5598  0DEA  1803               	btfsc	3,0
  5599  0DEB  2E54               	goto	l3584
  5600                           
  5601                           ;Keypad.h: 139: if(readPin(KColPins[Col]) == 1){
  5602  0DEC  087B               	movf	getKey@Col,w
  5603  0DED  0755               	addwf	_KColPins,w
  5604  0DEE  00F4               	movwf	??_getKey
  5605  0DEF  0874               	movf	??_getKey,w
  5606  0DF0  0084               	movwf	4
  5607  0DF1  1383               	bcf	3,7	;select IRP bank0
  5608  0DF2  0800               	movf	0,w
  5609  0DF3  120A  158A  205E  120A  158A  	fcall	_readPin
  5610  0DF8  3A01               	xorlw	1
  5611  0DF9  1D03               	skipz
  5612  0DFA  2E46               	goto	l3578
  5613                           
  5614                           ;Keypad.h: 140: if(Indicator) {
  5615  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  5616  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  5617  0DFD  0854               	movf	_Indicator,w
  5618  0DFE  1903               	btfsc	3,2
  5619  0DFF  2E1F               	goto	l3572
  5620                           
  5621                           ;Keypad.h: 141: PinSelect(Indicator, 1); _delay((unsigned long)((300)*(20000000/4000.0))
      +                          ); PinSelect(Indicator, 0); KeyTell=1; KeyPress = KMap[(Row*KCols)+Col];}
  5622  0E00  01F0               	clrf	PinSelect@segState
  5623  0E01  0AF0               	incf	PinSelect@segState,f
  5624  0E02  0854               	movf	_Indicator,w
  5625  0E03  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5626  0E08  3008               	movlw	8
  5627  0E09  00F6               	movwf	??_getKey+2
  5628  0E0A  309D               	movlw	157
  5629  0E0B  00F5               	movwf	??_getKey+1
  5630  0E0C  300B               	movlw	11
  5631  0E0D  00F4               	movwf	??_getKey
  5632  0E0E                     u4287:	
  5633  0E0E  0BF4               	decfsz	??_getKey,f
  5634  0E0F  2E0E               	goto	u4287
  5635  0E10  0BF5               	decfsz	??_getKey+1,f
  5636  0E11  2E0E               	goto	u4287
  5637  0E12  0BF6               	decfsz	??_getKey+2,f
  5638  0E13  2E0E               	goto	u4287
  5639  0E14  2E15               	nop2
  5640  0E15  01F0               	clrf	PinSelect@segState
  5641  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0E18  0854               	movf	_Indicator,w
  5644  0E19  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5645  0E1E  2E2C               	goto	L9
  5646  0E1F                     l3572:	
  5647                           
  5648                           ;Keypad.h: 142: else {
  5649                           ;Keypad.h: 143: _delay((unsigned long)((300)*(20000000/4000.0))); KeyTell=1; KeyPress = 
      +                          KMap[(Row*KCols)+Col];}
  5650  0E1F  3008               	movlw	8
  5651  0E20  00F6               	movwf	??_getKey+2
  5652  0E21  309D               	movlw	157
  5653  0E22  00F5               	movwf	??_getKey+1
  5654  0E23  300B               	movlw	11
  5655  0E24  00F4               	movwf	??_getKey
  5656  0E25                     u4297:	
  5657  0E25  0BF4               	decfsz	??_getKey,f
  5658  0E26  2E25               	goto	u4297
  5659  0E27  0BF5               	decfsz	??_getKey+1,f
  5660  0E28  2E25               	goto	u4297
  5661  0E29  0BF6               	decfsz	??_getKey+2,f
  5662  0E2A  2E25               	goto	u4297
  5663  0E2B  2E2C               	nop2
  5664  0E2C                     L9:	
  5665  0E2C  01F8               	clrf	getKey@KeyTell
  5666  0E2D  0AF8               	incf	getKey@KeyTell,f
  5667  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  5669  0E30  0856               	movf	_KCols,w
  5670  0E31  00F4               	movwf	??_getKey
  5671  0E32  0874               	movf	??_getKey,w
  5672  0E33  00F0               	movwf	___bmul@multiplicand
  5673  0E34  087A               	movf	getKey@Row,w
  5674  0E35  160A  158A  2576  120A  158A  	fcall	___bmul
  5675  0E3A  077B               	addwf	getKey@Col,w
  5676  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  5677  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  5678  0E3D  0758               	addwf	_KMap,w
  5679  0E3E  00F5               	movwf	??_getKey+1
  5680  0E3F  0875               	movf	??_getKey+1,w
  5681  0E40  0084               	movwf	4
  5682  0E41  1383               	bcf	3,7	;select IRP bank0
  5683  0E42  0800               	movf	0,w
  5684  0E43  00F6               	movwf	??_getKey+2
  5685  0E44  0876               	movf	??_getKey+2,w
  5686  0E45  00F7               	movwf	getKey@KeyPress
  5687  0E46                     l3578:	
  5688                           
  5689                           ;Keypad.h: 144: }
  5690                           ;Keypad.h: 145: _delay((unsigned long)((5)*(20000000/4000.0)));
  5691  0E46  3021               	movlw	33
  5692  0E47  00F5               	movwf	??_getKey+1
  5693  0E48  3076               	movlw	118
  5694  0E49  00F4               	movwf	??_getKey
  5695  0E4A                     u4307:	
  5696  0E4A  0BF4               	decfsz	??_getKey,f
  5697  0E4B  2E4A               	goto	u4307
  5698  0E4C  0BF5               	decfsz	??_getKey+1,f
  5699  0E4D  2E4A               	goto	u4307
  5700  0E4E  0000               	nop
  5701  0E4F  3001               	movlw	1
  5702  0E50  00F4               	movwf	??_getKey
  5703  0E51  0874               	movf	??_getKey,w
  5704  0E52  07FB               	addwf	getKey@Col,f
  5705  0E53  2DE6               	goto	l3582
  5706  0E54                     l3584:	
  5707  0E54  3001               	movlw	1
  5708  0E55  00F4               	movwf	??_getKey
  5709  0E56  0874               	movf	??_getKey,w
  5710  0E57  07FA               	addwf	getKey@Row,f
  5711  0E58  2DB4               	goto	l3586
  5712  0E59                     l3588:	
  5713                           
  5714                           ;Keypad.h: 146: }
  5715                           ;Keypad.h: 147: }
  5716                           ;Keypad.h: 148: for(i=0; i<KRows; i++) PinSelect(KRowPins[i], 0);
  5717  0E59  01FC               	clrf	getKey@i
  5718  0E5A                     l3594:	
  5719  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  5720  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  5721  0E5C  085A               	movf	_KRows,w
  5722  0E5D  027C               	subwf	getKey@i,w
  5723  0E5E  1803               	btfsc	3,0
  5724  0E5F  2E72               	goto	l3596
  5725  0E60  01F0               	clrf	PinSelect@segState
  5726  0E61  087C               	movf	getKey@i,w
  5727  0E62  0759               	addwf	_KRowPins,w
  5728  0E63  00F4               	movwf	??_getKey
  5729  0E64  0874               	movf	??_getKey,w
  5730  0E65  0084               	movwf	4
  5731  0E66  1383               	bcf	3,7	;select IRP bank0
  5732  0E67  0800               	movf	0,w
  5733  0E68  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5734  0E6D  3001               	movlw	1
  5735  0E6E  00F4               	movwf	??_getKey
  5736  0E6F  0874               	movf	??_getKey,w
  5737  0E70  07FC               	addwf	getKey@i,f
  5738  0E71  2E5A               	goto	l3594
  5739  0E72                     l3596:	
  5740                           
  5741                           ;Keypad.h: 149: }
  5742                           ;Keypad.h: 153: if(KIT==2){
  5743  0E72  3002               	movlw	2
  5744  0E73  0657               	xorwf	_KIT,w
  5745  0E74  1D03               	btfss	3,2
  5746  0E75  2F36               	goto	l3650
  5747                           
  5748                           ;Keypad.h: 154: for(Row=0; Row<KCols; Row++ ){
  5749  0E76  01FA               	clrf	getKey@Row
  5750  0E77                     l3640:	
  5751  0E77  0856               	movf	_KCols,w
  5752  0E78  027A               	subwf	getKey@Row,w
  5753  0E79  1803               	btfsc	3,0
  5754  0E7A  2F1C               	goto	l3642
  5755                           
  5756                           ;Keypad.h: 155: Map = Row;
  5757  0E7B  087A               	movf	getKey@Row,w
  5758  0E7C  00F4               	movwf	??_getKey
  5759  0E7D  0874               	movf	??_getKey,w
  5760  0E7E  00F9               	movwf	getKey@Map
  5761                           
  5762                           ;Keypad.h: 156: for(i=0; i<KRows; i++){
  5763  0E7F  01FC               	clrf	getKey@i
  5764  0E80                     l3608:	
  5765  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0E82  085A               	movf	_KRows,w
  5768  0E83  027C               	subwf	getKey@i,w
  5769  0E84  1803               	btfsc	3,0
  5770  0E85  2EA8               	goto	l3610
  5771                           
  5772                           ;Keypad.h: 157: PinSelect(KColPins[i], 1);
  5773  0E86  01F0               	clrf	PinSelect@segState
  5774  0E87  0AF0               	incf	PinSelect@segState,f
  5775  0E88  087C               	movf	getKey@i,w
  5776  0E89  0755               	addwf	_KColPins,w
  5777  0E8A  00F4               	movwf	??_getKey
  5778  0E8B  0874               	movf	??_getKey,w
  5779  0E8C  0084               	movwf	4
  5780  0E8D  1383               	bcf	3,7	;select IRP bank0
  5781  0E8E  0800               	movf	0,w
  5782  0E8F  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5783                           
  5784                           ;Keypad.h: 158: PinSelect(KColPins[Map], 0);
  5785  0E94  01F0               	clrf	PinSelect@segState
  5786  0E95  0879               	movf	getKey@Map,w
  5787  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  5788  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0E98  0755               	addwf	_KColPins,w
  5790  0E99  00F4               	movwf	??_getKey
  5791  0E9A  0874               	movf	??_getKey,w
  5792  0E9B  0084               	movwf	4
  5793  0E9C  1383               	bcf	3,7	;select IRP bank0
  5794  0E9D  0800               	movf	0,w
  5795  0E9E  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5796  0EA3  3001               	movlw	1
  5797  0EA4  00F4               	movwf	??_getKey
  5798  0EA5  0874               	movf	??_getKey,w
  5799  0EA6  07FC               	addwf	getKey@i,f
  5800  0EA7  2E80               	goto	l3608
  5801  0EA8                     l3610:	
  5802                           
  5803                           ;Keypad.h: 159: }
  5804                           ;Keypad.h: 160: for(Col =0; Col<KRows; Col++ ){
  5805  0EA8  01FB               	clrf	getKey@Col
  5806  0EA9                     l3636:	
  5807  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  5809  0EAB  085A               	movf	_KRows,w
  5810  0EAC  027B               	subwf	getKey@Col,w
  5811  0EAD  1803               	btfsc	3,0
  5812  0EAE  2F17               	goto	l3638
  5813                           
  5814                           ;Keypad.h: 161: if(readPin(KRowPins[Col]) == 0){
  5815  0EAF  087B               	movf	getKey@Col,w
  5816  0EB0  0759               	addwf	_KRowPins,w
  5817  0EB1  00F4               	movwf	??_getKey
  5818  0EB2  0874               	movf	??_getKey,w
  5819  0EB3  0084               	movwf	4
  5820  0EB4  1383               	bcf	3,7	;select IRP bank0
  5821  0EB5  0800               	movf	0,w
  5822  0EB6  120A  158A  205E  120A  158A  	fcall	_readPin
  5823  0EBB  3A00               	xorlw	0
  5824  0EBC  1D03               	skipz
  5825  0EBD  2F09               	goto	l3632
  5826                           
  5827                           ;Keypad.h: 162: if(Indicator) {
  5828  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  5830  0EC0  0854               	movf	_Indicator,w
  5831  0EC1  1903               	btfsc	3,2
  5832  0EC2  2EE2               	goto	l3626
  5833                           
  5834                           ;Keypad.h: 163: PinSelect(Indicator, 1); _delay((unsigned long)((300)*(20000000/4000.0))
      +                          ); PinSelect(Indicator, 0); KeyTell=1; KeyPress = KMap[(Col*KCols)+Row];}
  5835  0EC3  01F0               	clrf	PinSelect@segState
  5836  0EC4  0AF0               	incf	PinSelect@segState,f
  5837  0EC5  0854               	movf	_Indicator,w
  5838  0EC6  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5839  0ECB  3008               	movlw	8
  5840  0ECC  00F6               	movwf	??_getKey+2
  5841  0ECD  309D               	movlw	157
  5842  0ECE  00F5               	movwf	??_getKey+1
  5843  0ECF  300B               	movlw	11
  5844  0ED0  00F4               	movwf	??_getKey
  5845  0ED1                     u4317:	
  5846  0ED1  0BF4               	decfsz	??_getKey,f
  5847  0ED2  2ED1               	goto	u4317
  5848  0ED3  0BF5               	decfsz	??_getKey+1,f
  5849  0ED4  2ED1               	goto	u4317
  5850  0ED5  0BF6               	decfsz	??_getKey+2,f
  5851  0ED6  2ED1               	goto	u4317
  5852  0ED7  2ED8               	nop2
  5853  0ED8  01F0               	clrf	PinSelect@segState
  5854  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  5855  0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  5856  0EDB  0854               	movf	_Indicator,w
  5857  0EDC  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5858  0EE1  2EEF               	goto	L10
  5859  0EE2                     l3626:	
  5860                           
  5861                           ;Keypad.h: 164: else {
  5862                           ;Keypad.h: 165: _delay((unsigned long)((300)*(20000000/4000.0))); KeyTell=1; KeyPress = 
      +                          KMap[(Col*KCols)+Row];}
  5863  0EE2  3008               	movlw	8
  5864  0EE3  00F6               	movwf	??_getKey+2
  5865  0EE4  309D               	movlw	157
  5866  0EE5  00F5               	movwf	??_getKey+1
  5867  0EE6  300B               	movlw	11
  5868  0EE7  00F4               	movwf	??_getKey
  5869  0EE8                     u4327:	
  5870  0EE8  0BF4               	decfsz	??_getKey,f
  5871  0EE9  2EE8               	goto	u4327
  5872  0EEA  0BF5               	decfsz	??_getKey+1,f
  5873  0EEB  2EE8               	goto	u4327
  5874  0EEC  0BF6               	decfsz	??_getKey+2,f
  5875  0EED  2EE8               	goto	u4327
  5876  0EEE  2EEF               	nop2
  5877  0EEF                     L10:	
  5878  0EEF  01F8               	clrf	getKey@KeyTell
  5879  0EF0  0AF8               	incf	getKey@KeyTell,f
  5880  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  5881  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  5882  0EF3  0856               	movf	_KCols,w
  5883  0EF4  00F4               	movwf	??_getKey
  5884  0EF5  0874               	movf	??_getKey,w
  5885  0EF6  00F0               	movwf	___bmul@multiplicand
  5886  0EF7  087B               	movf	getKey@Col,w
  5887  0EF8  160A  158A  2576  120A  158A  	fcall	___bmul
  5888  0EFD  077A               	addwf	getKey@Row,w
  5889  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  5890  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  5891  0F00  0758               	addwf	_KMap,w
  5892  0F01  00F5               	movwf	??_getKey+1
  5893  0F02  0875               	movf	??_getKey+1,w
  5894  0F03  0084               	movwf	4
  5895  0F04  1383               	bcf	3,7	;select IRP bank0
  5896  0F05  0800               	movf	0,w
  5897  0F06  00F6               	movwf	??_getKey+2
  5898  0F07  0876               	movf	??_getKey+2,w
  5899  0F08  00F7               	movwf	getKey@KeyPress
  5900  0F09                     l3632:	
  5901                           
  5902                           ;Keypad.h: 166: }
  5903                           ;Keypad.h: 167: _delay((unsigned long)((5)*(20000000/4000.0)));
  5904  0F09  3021               	movlw	33
  5905  0F0A  00F5               	movwf	??_getKey+1
  5906  0F0B  3076               	movlw	118
  5907  0F0C  00F4               	movwf	??_getKey
  5908  0F0D                     u4337:	
  5909  0F0D  0BF4               	decfsz	??_getKey,f
  5910  0F0E  2F0D               	goto	u4337
  5911  0F0F  0BF5               	decfsz	??_getKey+1,f
  5912  0F10  2F0D               	goto	u4337
  5913  0F11  0000               	nop
  5914  0F12  3001               	movlw	1
  5915  0F13  00F4               	movwf	??_getKey
  5916  0F14  0874               	movf	??_getKey,w
  5917  0F15  07FB               	addwf	getKey@Col,f
  5918  0F16  2EA9               	goto	l3636
  5919  0F17                     l3638:	
  5920  0F17  3001               	movlw	1
  5921  0F18  00F4               	movwf	??_getKey
  5922  0F19  0874               	movf	??_getKey,w
  5923  0F1A  07FA               	addwf	getKey@Row,f
  5924  0F1B  2E77               	goto	l3640
  5925  0F1C                     l3642:	
  5926                           
  5927                           ;Keypad.h: 168: }
  5928                           ;Keypad.h: 169: }
  5929                           ;Keypad.h: 170: for(i=0; i<KCols; i++) PinSelect(KColPins[i] , 1);
  5930  0F1C  01FC               	clrf	getKey@i
  5931  0F1D                     l3648:	
  5932  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  5933  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  5934  0F1F  0856               	movf	_KCols,w
  5935  0F20  027C               	subwf	getKey@i,w
  5936  0F21  1803               	btfsc	3,0
  5937  0F22  2F36               	goto	l3650
  5938  0F23  01F0               	clrf	PinSelect@segState
  5939  0F24  0AF0               	incf	PinSelect@segState,f
  5940  0F25  087C               	movf	getKey@i,w
  5941  0F26  0755               	addwf	_KColPins,w
  5942  0F27  00F4               	movwf	??_getKey
  5943  0F28  0874               	movf	??_getKey,w
  5944  0F29  0084               	movwf	4
  5945  0F2A  1383               	bcf	3,7	;select IRP bank0
  5946  0F2B  0800               	movf	0,w
  5947  0F2C  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5948  0F31  3001               	movlw	1
  5949  0F32  00F4               	movwf	??_getKey
  5950  0F33  0874               	movf	??_getKey,w
  5951  0F34  07FC               	addwf	getKey@i,f
  5952  0F35  2F1D               	goto	l3648
  5953  0F36                     l3650:	
  5954                           
  5955                           ;Keypad.h: 171: }
  5956                           ;Keypad.h: 173: if(KIT==3){
  5957  0F36  3003               	movlw	3
  5958  0F37  0657               	xorwf	_KIT,w
  5959  0F38  1D03               	btfss	3,2
  5960  0F39  2FF9               	goto	l3704
  5961                           
  5962                           ;Keypad.h: 174: for(Row=0; Row<KCols; Row++ ){
  5963  0F3A  01FA               	clrf	getKey@Row
  5964  0F3B                     l3694:	
  5965  0F3B  0856               	movf	_KCols,w
  5966  0F3C  027A               	subwf	getKey@Row,w
  5967  0F3D  1803               	btfsc	3,0
  5968  0F3E  2FE0               	goto	l3696
  5969                           
  5970                           ;Keypad.h: 175: Map = Row;
  5971  0F3F  087A               	movf	getKey@Row,w
  5972  0F40  00F4               	movwf	??_getKey
  5973  0F41  0874               	movf	??_getKey,w
  5974  0F42  00F9               	movwf	getKey@Map
  5975                           
  5976                           ;Keypad.h: 176: for(i=0; i<KRows; i++){
  5977  0F43  01FC               	clrf	getKey@i
  5978  0F44                     l3662:	
  5979  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  5980  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  5981  0F46  085A               	movf	_KRows,w
  5982  0F47  027C               	subwf	getKey@i,w
  5983  0F48  1803               	btfsc	3,0
  5984  0F49  2F6C               	goto	l3664
  5985                           
  5986                           ;Keypad.h: 177: PinSelect(KColPins[i] ,0);
  5987  0F4A  01F0               	clrf	PinSelect@segState
  5988  0F4B  087C               	movf	getKey@i,w
  5989  0F4C  0755               	addwf	_KColPins,w
  5990  0F4D  00F4               	movwf	??_getKey
  5991  0F4E  0874               	movf	??_getKey,w
  5992  0F4F  0084               	movwf	4
  5993  0F50  1383               	bcf	3,7	;select IRP bank0
  5994  0F51  0800               	movf	0,w
  5995  0F52  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  5996                           
  5997                           ;Keypad.h: 178: PinSelect(KColPins[Map] ,1);
  5998  0F57  01F0               	clrf	PinSelect@segState
  5999  0F58  0AF0               	incf	PinSelect@segState,f
  6000  0F59  0879               	movf	getKey@Map,w
  6001  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  6002  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  6003  0F5C  0755               	addwf	_KColPins,w
  6004  0F5D  00F4               	movwf	??_getKey
  6005  0F5E  0874               	movf	??_getKey,w
  6006  0F5F  0084               	movwf	4
  6007  0F60  1383               	bcf	3,7	;select IRP bank0
  6008  0F61  0800               	movf	0,w
  6009  0F62  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  6010  0F67  3001               	movlw	1
  6011  0F68  00F4               	movwf	??_getKey
  6012  0F69  0874               	movf	??_getKey,w
  6013  0F6A  07FC               	addwf	getKey@i,f
  6014  0F6B  2F44               	goto	l3662
  6015  0F6C                     l3664:	
  6016                           
  6017                           ;Keypad.h: 179: }
  6018                           ;Keypad.h: 180: for(Col =0; Col<KRows; Col++ ){
  6019  0F6C  01FB               	clrf	getKey@Col
  6020  0F6D                     l3690:	
  6021  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  6022  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  6023  0F6F  085A               	movf	_KRows,w
  6024  0F70  027B               	subwf	getKey@Col,w
  6025  0F71  1803               	btfsc	3,0
  6026  0F72  2FDB               	goto	l3692
  6027                           
  6028                           ;Keypad.h: 181: if(readPin(KRowPins[Col]) == 1){
  6029  0F73  087B               	movf	getKey@Col,w
  6030  0F74  0759               	addwf	_KRowPins,w
  6031  0F75  00F4               	movwf	??_getKey
  6032  0F76  0874               	movf	??_getKey,w
  6033  0F77  0084               	movwf	4
  6034  0F78  1383               	bcf	3,7	;select IRP bank0
  6035  0F79  0800               	movf	0,w
  6036  0F7A  120A  158A  205E  120A  158A  	fcall	_readPin
  6037  0F7F  3A01               	xorlw	1
  6038  0F80  1D03               	skipz
  6039  0F81  2FCD               	goto	l3686
  6040                           
  6041                           ;Keypad.h: 182: if(Indicator) {
  6042  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  6043  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  6044  0F84  0854               	movf	_Indicator,w
  6045  0F85  1903               	btfsc	3,2
  6046  0F86  2FA6               	goto	l3680
  6047                           
  6048                           ;Keypad.h: 183: PinSelect(Indicator, 1); _delay((unsigned long)((300)*(20000000/4000.0))
      +                          ); PinSelect(Indicator, 0); KeyTell=1; KeyPress = KMap[(Col*KCols)+Row];}
  6049  0F87  01F0               	clrf	PinSelect@segState
  6050  0F88  0AF0               	incf	PinSelect@segState,f
  6051  0F89  0854               	movf	_Indicator,w
  6052  0F8A  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  6053  0F8F  3008               	movlw	8
  6054  0F90  00F6               	movwf	??_getKey+2
  6055  0F91  309D               	movlw	157
  6056  0F92  00F5               	movwf	??_getKey+1
  6057  0F93  300B               	movlw	11
  6058  0F94  00F4               	movwf	??_getKey
  6059  0F95                     u4347:	
  6060  0F95  0BF4               	decfsz	??_getKey,f
  6061  0F96  2F95               	goto	u4347
  6062  0F97  0BF5               	decfsz	??_getKey+1,f
  6063  0F98  2F95               	goto	u4347
  6064  0F99  0BF6               	decfsz	??_getKey+2,f
  6065  0F9A  2F95               	goto	u4347
  6066  0F9B  2F9C               	nop2
  6067  0F9C  01F0               	clrf	PinSelect@segState
  6068  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  6070  0F9F  0854               	movf	_Indicator,w
  6071  0FA0  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  6072  0FA5  2FB3               	goto	L11
  6073  0FA6                     l3680:	
  6074                           
  6075                           ;Keypad.h: 184: else {
  6076                           ;Keypad.h: 185: _delay((unsigned long)((300)*(20000000/4000.0))); KeyTell=1; KeyPress = 
      +                          KMap[(Col*KCols)+Row];}
  6077  0FA6  3008               	movlw	8
  6078  0FA7  00F6               	movwf	??_getKey+2
  6079  0FA8  309D               	movlw	157
  6080  0FA9  00F5               	movwf	??_getKey+1
  6081  0FAA  300B               	movlw	11
  6082  0FAB  00F4               	movwf	??_getKey
  6083  0FAC                     u4357:	
  6084  0FAC  0BF4               	decfsz	??_getKey,f
  6085  0FAD  2FAC               	goto	u4357
  6086  0FAE  0BF5               	decfsz	??_getKey+1,f
  6087  0FAF  2FAC               	goto	u4357
  6088  0FB0  0BF6               	decfsz	??_getKey+2,f
  6089  0FB1  2FAC               	goto	u4357
  6090  0FB2  2FB3               	nop2
  6091  0FB3                     L11:	
  6092  0FB3  01F8               	clrf	getKey@KeyTell
  6093  0FB4  0AF8               	incf	getKey@KeyTell,f
  6094  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  6095  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  6096  0FB7  0856               	movf	_KCols,w
  6097  0FB8  00F4               	movwf	??_getKey
  6098  0FB9  0874               	movf	??_getKey,w
  6099  0FBA  00F0               	movwf	___bmul@multiplicand
  6100  0FBB  087B               	movf	getKey@Col,w
  6101  0FBC  160A  158A  2576  120A  158A  	fcall	___bmul
  6102  0FC1  077A               	addwf	getKey@Row,w
  6103  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  6104  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  6105  0FC4  0758               	addwf	_KMap,w
  6106  0FC5  00F5               	movwf	??_getKey+1
  6107  0FC6  0875               	movf	??_getKey+1,w
  6108  0FC7  0084               	movwf	4
  6109  0FC8  1383               	bcf	3,7	;select IRP bank0
  6110  0FC9  0800               	movf	0,w
  6111  0FCA  00F6               	movwf	??_getKey+2
  6112  0FCB  0876               	movf	??_getKey+2,w
  6113  0FCC  00F7               	movwf	getKey@KeyPress
  6114  0FCD                     l3686:	
  6115                           
  6116                           ;Keypad.h: 186: }
  6117                           ;Keypad.h: 187: _delay((unsigned long)((5)*(20000000/4000.0)));
  6118  0FCD  3021               	movlw	33
  6119  0FCE  00F5               	movwf	??_getKey+1
  6120  0FCF  3076               	movlw	118
  6121  0FD0  00F4               	movwf	??_getKey
  6122  0FD1                     u4367:	
  6123  0FD1  0BF4               	decfsz	??_getKey,f
  6124  0FD2  2FD1               	goto	u4367
  6125  0FD3  0BF5               	decfsz	??_getKey+1,f
  6126  0FD4  2FD1               	goto	u4367
  6127  0FD5  0000               	nop
  6128  0FD6  3001               	movlw	1
  6129  0FD7  00F4               	movwf	??_getKey
  6130  0FD8  0874               	movf	??_getKey,w
  6131  0FD9  07FB               	addwf	getKey@Col,f
  6132  0FDA  2F6D               	goto	l3690
  6133  0FDB                     l3692:	
  6134  0FDB  3001               	movlw	1
  6135  0FDC  00F4               	movwf	??_getKey
  6136  0FDD  0874               	movf	??_getKey,w
  6137  0FDE  07FA               	addwf	getKey@Row,f
  6138  0FDF  2F3B               	goto	l3694
  6139  0FE0                     l3696:	
  6140                           
  6141                           ;Keypad.h: 188: }
  6142                           ;Keypad.h: 189: }
  6143                           ;Keypad.h: 190: for(i=0; i<KCols; i++) PinSelect(KColPins[i], 0);
  6144  0FE0  01FC               	clrf	getKey@i
  6145  0FE1                     l3702:	
  6146  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  6147  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  6148  0FE3  0856               	movf	_KCols,w
  6149  0FE4  027C               	subwf	getKey@i,w
  6150  0FE5  1803               	btfsc	3,0
  6151  0FE6  2FF9               	goto	l3704
  6152  0FE7  01F0               	clrf	PinSelect@segState
  6153  0FE8  087C               	movf	getKey@i,w
  6154  0FE9  0755               	addwf	_KColPins,w
  6155  0FEA  00F4               	movwf	??_getKey
  6156  0FEB  0874               	movf	??_getKey,w
  6157  0FEC  0084               	movwf	4
  6158  0FED  1383               	bcf	3,7	;select IRP bank0
  6159  0FEE  0800               	movf	0,w
  6160  0FEF  120A  158A  22B9  120A  158A  	fcall	_PinSelect
  6161  0FF4  3001               	movlw	1
  6162  0FF5  00F4               	movwf	??_getKey
  6163  0FF6  0874               	movf	??_getKey,w
  6164  0FF7  07FC               	addwf	getKey@i,f
  6165  0FF8  2FE1               	goto	l3702
  6166  0FF9                     l3704:	
  6167                           
  6168                           ;Keypad.h: 191: }
  6169                           ;Keypad.h: 193: if(KeyTell) return KeyPress;
  6170  0FF9  0878               	movf	getKey@KeyTell,w
  6171  0FFA  1903               	btfsc	3,2
  6172  0FFB  2FFE               	goto	l3712
  6173  0FFC  0877               	movf	getKey@KeyPress,w
  6174  0FFD  0008               	return
  6175  0FFE                     l3712:	
  6176                           
  6177                           ;Keypad.h: 194: else return 0;
  6178  0FFE  3000               	movlw	0
  6179  0FFF  0008               	return
  6180  1000                     __end_of_getKey:	
  6181                           
  6182                           	psect	text13
  6183  16F0                     __ptext13:	
  6184 ;; *************** function _LCD5110_writeText *****************
  6185 ;; Defined at:
  6186 ;;		line 342 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  userFont        2   14[BANK0 ] PTR const unsigned char 
  6189 ;;		 -> FONT_3x5(288), 
  6190 ;;  fontWidth       1   16[BANK0 ] unsigned char 
  6191 ;;  fontOffset      1   17[BANK0 ] unsigned char 
  6192 ;;  row             1   18[BANK0 ] unsigned char 
  6193 ;;  col             1   19[BANK0 ] unsigned char 
  6194 ;;  characters      2   20[BANK0 ] PTR unsigned char 
  6195 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  6196 ;;		 -> STR_16(6), STR_15(7), STR_14(16), STR_13(16), 
  6197 ;;		 -> STR_12(16), STR_11(10), STR_10(4), main@ringsno(0), 
  6198 ;;		 -> STR_9(18), STR_8(17), STR_7(16), STR_6(16), 
  6199 ;;		 -> STR_4(6), STR_3(7), STR_2(6), STR_1(11), 
  6200 ;;		 -> main@time(9), 
  6201 ;;  dispType        1   22[BANK0 ] unsigned char 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  2   14[BANK0 ] int 
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6213 ;;      Params:         0       9       0       0       0
  6214 ;;      Locals:         0       0       0       0       0
  6215 ;;      Temps:          0       3       0       0       0
  6216 ;;      Totals:         0      12       0       0       0
  6217 ;;Total ram usage:       12 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    5
  6220 ;; This function calls:
  6221 ;;		_LCD5110_internalWrite
  6222 ;;		_LCD5110_writeCP
  6223 ;;		_gotoXY
  6224 ;; This function is called by:
  6225 ;;		_main
  6226 ;;		_readAndStore
  6227 ;;		_SetupTime
  6228 ;;		_readKeys
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           
  6233                           ;psect for function _LCD5110_writeText
  6234  16F0                     _LCD5110_writeText:	
  6235                           
  6236                           ;LCD5110.h: 343: switch(dispType){
  6237                           
  6238                           ;incstack = 0
  6239 ;; using string table level
  6240                           ; Regs used in _LCD5110_writeText: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6241  16F0  2F23               	goto	l3476
  6242  16F1                     l3470:	
  6243                           ;LCD5110.h: 344: case 0x00: {LCD5110_internalWrite(0, 0x20);
  6244                           
  6245  16F1  3020               	movlw	32
  6246  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  6247  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  6248  16F4  00B7               	movwf	??_LCD5110_writeText
  6249  16F5  0837               	movf	??_LCD5110_writeText,w
  6250  16F6  00F2               	movwf	LCD5110_internalWrite@dataByte
  6251  16F7  3000               	movlw	0
  6252  16F8  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  6253                           
  6254                           ;LCD5110.h: 345: LCD5110_internalWrite(0, 0x0C);
  6255  16FD  300C               	movlw	12
  6256  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  6257  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  6258  1700  00B7               	movwf	??_LCD5110_writeText
  6259  1701  0837               	movf	??_LCD5110_writeText,w
  6260  1702  00F2               	movwf	LCD5110_internalWrite@dataByte
  6261  1703  3000               	movlw	0
  6262  1704  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  6263                           
  6264                           ;LCD5110.h: 346: break;
  6265  1709  2F2D               	goto	l3478
  6266  170A                     l3472:	
  6267                           ;LCD5110.h: 347: }
  6268                           ;LCD5110.h: 348: case 0xFF: {LCD5110_internalWrite(0, 0x20);
  6269                           
  6270  170A  3020               	movlw	32
  6271  170B  1283               	bcf	3,5	;RP0=0, select bank0
  6272  170C  1303               	bcf	3,6	;RP1=0, select bank0
  6273  170D  00B7               	movwf	??_LCD5110_writeText
  6274  170E  0837               	movf	??_LCD5110_writeText,w
  6275  170F  00F2               	movwf	LCD5110_internalWrite@dataByte
  6276  1710  3000               	movlw	0
  6277  1711  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  6278                           
  6279                           ;LCD5110.h: 349: LCD5110_internalWrite(0, 0x0D);
  6280  1716  300D               	movlw	13
  6281  1717  1283               	bcf	3,5	;RP0=0, select bank0
  6282  1718  1303               	bcf	3,6	;RP1=0, select bank0
  6283  1719  00B7               	movwf	??_LCD5110_writeText
  6284  171A  0837               	movf	??_LCD5110_writeText,w
  6285  171B  00F2               	movwf	LCD5110_internalWrite@dataByte
  6286  171C  3000               	movlw	0
  6287  171D  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  6288                           
  6289                           ;LCD5110.h: 351: }
  6290                           ;LCD5110.h: 352: }
  6291                           
  6292                           ;LCD5110.h: 350: break;
  6293  1722  2F2D               	goto	l3478
  6294  1723                     l3476:	
  6295  1723  1283               	bcf	3,5	;RP0=0, select bank0
  6296  1724  1303               	bcf	3,6	;RP1=0, select bank0
  6297  1725  0836               	movf	LCD5110_writeText@dispType,w
  6298                           
  6299                           ; Switch size 1, requested type "space"
  6300                           ; Number of cases is 2, Range of values is 0 to 255
  6301                           ; switch strategies available:
  6302                           ; Name         Instructions Cycles
  6303                           ; simple_byte            7     4 (average)
  6304                           ; jumptable            260     6 (fixed)
  6305                           ;	Chosen strategy is simple_byte
  6306  1726  3A00               	xorlw	0	; case 0
  6307  1727  1903               	skipnz
  6308  1728  2EF1               	goto	l3470
  6309  1729  3AFF               	xorlw	255	; case 255
  6310  172A  1903               	skipnz
  6311  172B  2F0A               	goto	l3472
  6312  172C  2F2D               	goto	l3478
  6313  172D                     l3478:	
  6314                           
  6315                           ;LCD5110.h: 353: gotoXY((row-1), (col-1));
  6316  172D  1283               	bcf	3,5	;RP0=0, select bank0
  6317  172E  1303               	bcf	3,6	;RP1=0, select bank0
  6318  172F  0833               	movf	LCD5110_writeText@col,w
  6319  1730  3EFF               	addlw	255
  6320  1731  00B7               	movwf	??_LCD5110_writeText
  6321  1732  0837               	movf	??_LCD5110_writeText,w
  6322  1733  00F8               	movwf	gotoXY@X
  6323  1734  0832               	movf	LCD5110_writeText@row,w
  6324  1735  3EFF               	addlw	255
  6325  1736  160A  158A  26BC  160A  118A  	fcall	_gotoXY
  6326  173B                     l3484:	
  6327                           ;LCD5110.h: 354: while (*characters) {
  6328                           
  6329  173B  1283               	bcf	3,5	;RP0=0, select bank0
  6330  173C  1303               	bcf	3,6	;RP1=0, select bank0
  6331  173D  0835               	movf	LCD5110_writeText@characters+1,w
  6332  173E  00FF               	movwf	127
  6333  173F  0834               	movf	LCD5110_writeText@characters,w
  6334  1740  0084               	movwf	4
  6335  1741  160A  118A  2000  160A  118A  	fcall	stringtab
  6336  1746  3A00               	xorlw	0
  6337  1747  1903               	btfsc	3,2
  6338  1748  0008               	return
  6339                           
  6340                           ;LCD5110.h: 355: LCD5110_writeCP(userFont, fontWidth, fontOffset, *characters++);
  6341  1749  1283               	bcf	3,5	;RP0=0, select bank0
  6342  174A  1303               	bcf	3,6	;RP1=0, select bank0
  6343  174B  082E               	movf	LCD5110_writeText@userFont,w
  6344  174C  00A0               	movwf	LCD5110_writeCP@userFont
  6345  174D  082F               	movf	LCD5110_writeText@userFont+1,w
  6346  174E  00A1               	movwf	LCD5110_writeCP@userFont+1
  6347  174F  0830               	movf	LCD5110_writeText@fontWidth,w
  6348  1750  00B7               	movwf	??_LCD5110_writeText
  6349  1751  0837               	movf	??_LCD5110_writeText,w
  6350  1752  00A2               	movwf	LCD5110_writeCP@fontWidth
  6351  1753  0831               	movf	LCD5110_writeText@fontOffset,w
  6352  1754  00B8               	movwf	??_LCD5110_writeText+1
  6353  1755  0838               	movf	??_LCD5110_writeText+1,w
  6354  1756  00A3               	movwf	LCD5110_writeCP@fontOffset
  6355  1757  0835               	movf	LCD5110_writeText@characters+1,w
  6356  1758  00FF               	movwf	127
  6357  1759  0834               	movf	LCD5110_writeText@characters,w
  6358  175A  0084               	movwf	4
  6359  175B  160A  118A  2000  160A  118A  	fcall	stringtab
  6360  1760  00B9               	movwf	??_LCD5110_writeText+2
  6361  1761  0839               	movf	??_LCD5110_writeText+2,w
  6362  1762  00A4               	movwf	LCD5110_writeCP@character
  6363  1763  160A  118A  260A  160A  118A  	fcall	_LCD5110_writeCP
  6364  1768  3001               	movlw	1
  6365  1769  1283               	bcf	3,5	;RP0=0, select bank0
  6366  176A  1303               	bcf	3,6	;RP1=0, select bank0
  6367  176B  07B4               	addwf	LCD5110_writeText@characters,f
  6368  176C  1803               	skipnc
  6369  176D  0AB5               	incf	LCD5110_writeText@characters+1,f
  6370  176E  3000               	movlw	0
  6371  176F  07B5               	addwf	LCD5110_writeText@characters+1,f
  6372  1770  2F3B               	goto	l3484
  6373  1771                     __end_of_LCD5110_writeText:	
  6374                           
  6375                           	psect	text14
  6376  160A                     __ptext14:	
  6377 ;; *************** function _LCD5110_writeCP *****************
  6378 ;; Defined at:
  6379 ;;		line 299 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  userFont        2    0[BANK0 ] PTR const unsigned char 
  6382 ;;		 -> FONT_3x5(288), 
  6383 ;;  fontWidth       1    2[BANK0 ] unsigned char 
  6384 ;;  fontOffset      1    3[BANK0 ] unsigned char 
  6385 ;;  character       1    4[BANK0 ] unsigned char 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  pos_x           1   13[BANK0 ] unsigned char 
  6388 ;;  _data           1   12[BANK0 ] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    0[BANK0 ] int 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6398 ;;      Params:         0       5       0       0       0
  6399 ;;      Locals:         0       2       0       0       0
  6400 ;;      Temps:          0       7       0       0       0
  6401 ;;      Totals:         0      14       0       0       0
  6402 ;;Total ram usage:       14 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    4
  6405 ;; This function calls:
  6406 ;;		_LCD5110_inWrite
  6407 ;;		_LCD5110_internalWrite
  6408 ;;		___wmul
  6409 ;; This function is called by:
  6410 ;;		_LCD5110_writeText
  6411 ;;		_readAndStore
  6412 ;;		_LCD5110_writeTextCP
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           
  6417                           ;psect for function _LCD5110_writeCP
  6418  160A                     _LCD5110_writeCP:	
  6419                           
  6420                           ;LCD5110.h: 301: unsigned char pos_x = 0, _data;
  6421                           
  6422                           ;incstack = 0
  6423 ;; using string table level
  6424                           ; Regs used in _LCD5110_writeCP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6425  160A  1283               	bcf	3,5	;RP0=0, select bank0
  6426  160B  1303               	bcf	3,6	;RP1=0, select bank0
  6427  160C  01AD               	clrf	LCD5110_writeCP@pos_x
  6428                           
  6429                           ;LCD5110.h: 302: LCD5110_internalWrite(1, 0x00);
  6430  160D  01F2               	clrf	LCD5110_internalWrite@dataByte
  6431  160E  3001               	movlw	1
  6432  160F  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  6433  1614                     l3422:	
  6434  1614  3001               	movlw	1
  6435  1615  1283               	bcf	3,5	;RP0=0, select bank0
  6436  1616  1303               	bcf	3,6	;RP1=0, select bank0
  6437  1617  00A5               	movwf	??_LCD5110_writeCP
  6438  1618  0825               	movf	??_LCD5110_writeCP,w
  6439  1619  07E2               	addwf	_colCheck,f
  6440  161A  0822               	movf	LCD5110_writeCP@fontWidth,w
  6441  161B  022D               	subwf	LCD5110_writeCP@pos_x,w
  6442  161C  1803               	btfsc	3,0
  6443  161D  2E66               	goto	l3426
  6444                           
  6445                           ;LCD5110.h: 305: _data = userFont[((character - fontOffset) * fontWidth) + pos_x++];
  6446                           
  6447                           ;LCD5110.h: 304: while(pos_x < fontWidth) {
  6448                           
  6449                           ;LCD5110.h: 303: colCheck++;
  6450  161E  0823               	movf	LCD5110_writeCP@fontOffset,w
  6451  161F  00A5               	movwf	??_LCD5110_writeCP
  6452  1620  01A6               	clrf	??_LCD5110_writeCP+1
  6453  1621  09A5               	comf	??_LCD5110_writeCP,f
  6454  1622  09A6               	comf	??_LCD5110_writeCP+1,f
  6455  1623  0AA5               	incf	??_LCD5110_writeCP,f
  6456  1624  1903               	skipnz
  6457  1625  0AA6               	incf	??_LCD5110_writeCP+1,f
  6458  1626  0824               	movf	LCD5110_writeCP@character,w
  6459  1627  0725               	addwf	??_LCD5110_writeCP,w
  6460  1628  00F0               	movwf	___wmul@multiplier
  6461  1629  0826               	movf	??_LCD5110_writeCP+1,w
  6462  162A  1803               	skipnc
  6463  162B  0A26               	incf	??_LCD5110_writeCP+1,w
  6464  162C  00F1               	movwf	___wmul@multiplier+1
  6465  162D  0822               	movf	LCD5110_writeCP@fontWidth,w
  6466  162E  00A7               	movwf	??_LCD5110_writeCP+2
  6467  162F  01A8               	clrf	??_LCD5110_writeCP+3
  6468  1630  0827               	movf	??_LCD5110_writeCP+2,w
  6469  1631  00F2               	movwf	___wmul@multiplicand
  6470  1632  0828               	movf	??_LCD5110_writeCP+3,w
  6471  1633  00F3               	movwf	___wmul@multiplicand+1
  6472  1634  160A  158A  264F  160A  118A  	fcall	___wmul
  6473  1639  1283               	bcf	3,5	;RP0=0, select bank0
  6474  163A  1303               	bcf	3,6	;RP1=0, select bank0
  6475  163B  082D               	movf	LCD5110_writeCP@pos_x,w
  6476  163C  0770               	addwf	?___wmul,w
  6477  163D  00A9               	movwf	??_LCD5110_writeCP+4
  6478  163E  3000               	movlw	0
  6479  163F  1803               	skipnc
  6480  1640  3001               	movlw	1
  6481  1641  0771               	addwf	?___wmul+1,w
  6482  1642  00AA               	movwf	??_LCD5110_writeCP+5
  6483  1643  0829               	movf	??_LCD5110_writeCP+4,w
  6484  1644  0720               	addwf	LCD5110_writeCP@userFont,w
  6485  1645  0084               	movwf	4
  6486  1646  082A               	movf	??_LCD5110_writeCP+5,w
  6487  1647  1803               	skipnc
  6488  1648  0A2A               	incf	??_LCD5110_writeCP+5,w
  6489  1649  0721               	addwf	LCD5110_writeCP@userFont+1,w
  6490  164A  00FF               	movwf	127
  6491  164B  160A  118A  2000  160A  118A  	fcall	stringtab
  6492  1650  00AB               	movwf	??_LCD5110_writeCP+6
  6493  1651  082B               	movf	??_LCD5110_writeCP+6,w
  6494  1652  00AC               	movwf	LCD5110_writeCP@_data
  6495  1653  3001               	movlw	1
  6496  1654  00A5               	movwf	??_LCD5110_writeCP
  6497  1655  0825               	movf	??_LCD5110_writeCP,w
  6498  1656  07AD               	addwf	LCD5110_writeCP@pos_x,f
  6499                           
  6500                           ;LCD5110.h: 306: LCD5110_inWrite(rowCheck, colCheck++, _data);
  6501  1657  0862               	movf	_colCheck,w
  6502  1658  00A5               	movwf	??_LCD5110_writeCP
  6503  1659  0825               	movf	??_LCD5110_writeCP,w
  6504  165A  00FA               	movwf	LCD5110_inWrite@coll
  6505  165B  082C               	movf	LCD5110_writeCP@_data,w
  6506  165C  00A6               	movwf	??_LCD5110_writeCP+1
  6507  165D  0826               	movf	??_LCD5110_writeCP+1,w
  6508  165E  00FB               	movwf	LCD5110_inWrite@dat
  6509  165F  0865               	movf	_rowCheck,w
  6510  1660  160A  158A  2612  160A  118A  	fcall	_LCD5110_inWrite
  6511  1665  2E14               	goto	l3422
  6512  1666                     l3426:	
  6513                           
  6514                           ;LCD5110.h: 307: }
  6515                           ;LCD5110.h: 308: LCD5110_internalWrite(1, 0x00);
  6516  1666  01F2               	clrf	LCD5110_internalWrite@dataByte
  6517  1667  3001               	movlw	1
  6518  1668  160A  118A  24D8   	fcall	_LCD5110_internalWrite
  6519                           
  6520                           ;LCD5110.h: 309: colCheck++;
  6521  166B  3001               	movlw	1
  6522  166C  1283               	bcf	3,5	;RP0=0, select bank0
  6523  166D  1303               	bcf	3,6	;RP1=0, select bank0
  6524  166E  00A5               	movwf	??_LCD5110_writeCP
  6525  166F  0825               	movf	??_LCD5110_writeCP,w
  6526  1670  07E2               	addwf	_colCheck,f
  6527  1671  0008               	return
  6528  1672                     __end_of_LCD5110_writeCP:	
  6529                           
  6530                           	psect	text15
  6531  1E4F                     __ptext15:	
  6532 ;; *************** function ___wmul *****************
  6533 ;; Defined at:
  6534 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  multiplier      2    0[COMMON] unsigned int 
  6537 ;;  multiplicand    2    2[COMMON] unsigned int 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  product         2    4[COMMON] unsigned int 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  2    0[COMMON] unsigned int 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6549 ;;      Params:         4       0       0       0       0
  6550 ;;      Locals:         2       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0
  6552 ;;      Totals:         6       0       0       0       0
  6553 ;;Total ram usage:        6 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_LCD5110_writeCP
  6559 ;;		_main
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           
  6564                           ;psect for function ___wmul
  6565  1E4F                     ___wmul:	
  6566                           
  6567                           ;incstack = 0
  6568                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6569  1E4F  01F4               	clrf	___wmul@product
  6570  1E50  01F5               	clrf	___wmul@product+1
  6571  1E51                     l3244:	
  6572  1E51  1C70               	btfss	___wmul@multiplier,0
  6573  1E52  2E59               	goto	l836
  6574  1E53  0872               	movf	___wmul@multiplicand,w
  6575  1E54  07F4               	addwf	___wmul@product,f
  6576  1E55  1803               	skipnc
  6577  1E56  0AF5               	incf	___wmul@product+1,f
  6578  1E57  0873               	movf	___wmul@multiplicand+1,w
  6579  1E58  07F5               	addwf	___wmul@product+1,f
  6580  1E59                     l836:	
  6581  1E59  3001               	movlw	1
  6582  1E5A                     u2705:	
  6583  1E5A  1003               	clrc
  6584  1E5B  0DF2               	rlf	___wmul@multiplicand,f
  6585  1E5C  0DF3               	rlf	___wmul@multiplicand+1,f
  6586  1E5D  3EFF               	addlw	-1
  6587  1E5E  1D03               	skipz
  6588  1E5F  2E5A               	goto	u2705
  6589  1E60  3001               	movlw	1
  6590  1E61                     u2715:	
  6591  1E61  1003               	clrc
  6592  1E62  0CF1               	rrf	___wmul@multiplier+1,f
  6593  1E63  0CF0               	rrf	___wmul@multiplier,f
  6594  1E64  3EFF               	addlw	-1
  6595  1E65  1D03               	skipz
  6596  1E66  2E61               	goto	u2715
  6597  1E67  0870               	movf	___wmul@multiplier,w
  6598  1E68  0471               	iorwf	___wmul@multiplier+1,w
  6599  1E69  1D03               	btfss	3,2
  6600  1E6A  2E51               	goto	l3244
  6601  1E6B  0875               	movf	___wmul@product+1,w
  6602  1E6C  00F1               	movwf	?___wmul+1
  6603  1E6D  0874               	movf	___wmul@product,w
  6604  1E6E  00F0               	movwf	?___wmul
  6605  1E6F  0008               	return
  6606  1E70                     __end_of___wmul:	
  6607                           
  6608                           	psect	text16
  6609  1E12                     __ptext16:	
  6610 ;; *************** function _LCD5110_inWrite *****************
  6611 ;; Defined at:
  6612 ;;		line 289 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  roww            1    wreg     unsigned char 
  6615 ;;  coll            1   10[COMMON] unsigned char 
  6616 ;;  dat             1   11[COMMON] unsigned char 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  roww            1   13[COMMON] unsigned char 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  2   10[COMMON] int 
  6621 ;; Registers used:
  6622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         2       0       0       0       0
  6629 ;;      Locals:         1       0       0       0       0
  6630 ;;      Temps:          1       0       0       0       0
  6631 ;;      Totals:         4       0       0       0       0
  6632 ;;Total ram usage:        4 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    3
  6635 ;; This function calls:
  6636 ;;		_LCD5110_internalWrite
  6637 ;;		_LCD5110_startCol
  6638 ;; This function is called by:
  6639 ;;		_LCD5110_writeCP
  6640 ;;		_LCD5110_write
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           
  6645                           ;psect for function _LCD5110_inWrite
  6646  1E12                     _LCD5110_inWrite:	
  6647                           
  6648                           ;incstack = 0
  6649                           ; Regs used in _LCD5110_inWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6650                           ;LCD5110_inWrite@roww stored from wreg
  6651  1E12  00FD               	movwf	LCD5110_inWrite@roww
  6652                           
  6653                           ;LCD5110.h: 290: colCheck = coll;
  6654  1E13  087A               	movf	LCD5110_inWrite@coll,w
  6655  1E14  00FC               	movwf	??_LCD5110_inWrite
  6656  1E15  087C               	movf	??_LCD5110_inWrite,w
  6657  1E16  1283               	bcf	3,5	;RP0=0, select bank0
  6658  1E17  1303               	bcf	3,6	;RP1=0, select bank0
  6659  1E18  00E2               	movwf	_colCheck
  6660                           
  6661                           ;LCD5110.h: 291: rowCheck = roww;
  6662  1E19  087D               	movf	LCD5110_inWrite@roww,w
  6663  1E1A  00FC               	movwf	??_LCD5110_inWrite
  6664  1E1B  087C               	movf	??_LCD5110_inWrite,w
  6665  1E1C  00E5               	movwf	_rowCheck
  6666                           
  6667                           ;LCD5110.h: 292: if(coll > 84);
  6668  1E1D  3055               	movlw	85
  6669  1E1E  027A               	subwf	LCD5110_inWrite@coll,w
  6670  1E1F  1803               	btfsc	3,0
  6671  1E20  0008               	return
  6672                           
  6673                           ;LCD5110.h: 293: else {
  6674                           ;LCD5110.h: 294: LCD5110_startCol(coll);
  6675  1E21  087A               	movf	LCD5110_inWrite@coll,w
  6676  1E22  160A  158A  2553  160A  158A  	fcall	_LCD5110_startCol
  6677                           
  6678                           ;LCD5110.h: 295: LCD5110_internalWrite(1, dat);
  6679  1E27  087B               	movf	LCD5110_inWrite@dat,w
  6680  1E28  00FC               	movwf	??_LCD5110_inWrite
  6681  1E29  087C               	movf	??_LCD5110_inWrite,w
  6682  1E2A  00F2               	movwf	LCD5110_internalWrite@dataByte
  6683  1E2B  3001               	movlw	1
  6684  1E2C  160A  118A  24D8   	fcall	_LCD5110_internalWrite
  6685  1E2F  0008               	return
  6686  1E30                     __end_of_LCD5110_inWrite:	
  6687                           
  6688                           	psect	text17
  6689  1D53                     __ptext17:	
  6690 ;; *************** function _LCD5110_startCol *****************
  6691 ;; Defined at:
  6692 ;;		line 268 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  col             1    wreg     unsigned char 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  col             1    9[COMMON] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6706 ;;      Params:         0       0       0       0       0
  6707 ;;      Locals:         1       0       0       0       0
  6708 ;;      Temps:          1       0       0       0       0
  6709 ;;      Totals:         2       0       0       0       0
  6710 ;;Total ram usage:        2 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    2
  6713 ;; This function calls:
  6714 ;;		_LCD5110_internalWrite
  6715 ;; This function is called by:
  6716 ;;		_LCD5110_inWrite
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           
  6721                           ;psect for function _LCD5110_startCol
  6722  1D53                     _LCD5110_startCol:	
  6723                           
  6724                           ;incstack = 0
  6725                           ; Regs used in _LCD5110_startCol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6726                           ;LCD5110_startCol@col stored from wreg
  6727  1D53  00F9               	movwf	LCD5110_startCol@col
  6728                           
  6729                           ;LCD5110.h: 269: LCD5110_internalWrite(0, (0x80 | col));
  6730  1D54  0879               	movf	LCD5110_startCol@col,w
  6731  1D55  3880               	iorlw	128
  6732  1D56  00F8               	movwf	??_LCD5110_startCol
  6733  1D57  0878               	movf	??_LCD5110_startCol,w
  6734  1D58  00F2               	movwf	LCD5110_internalWrite@dataByte
  6735  1D59  3000               	movlw	0
  6736  1D5A  160A  118A  24D8   	fcall	_LCD5110_internalWrite
  6737  1D5D  0008               	return
  6738  1D5E                     __end_of_LCD5110_startCol:	
  6739                           
  6740                           	psect	text18
  6741  130A                     __ptext18:	
  6742 ;; *************** function _Time_write *****************
  6743 ;; Defined at:
  6744 ;;		line 301 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  hr              1    wreg     unsigned char 
  6747 ;;  min             1   12[COMMON] unsigned char 
  6748 ;;  seconds         1   13[COMMON] unsigned char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  hr              1    4[BANK0 ] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6760 ;;      Params:         2       0       0       0       0
  6761 ;;      Locals:         0       1       0       0       0
  6762 ;;      Temps:          0       1       0       0       0
  6763 ;;      Totals:         2       2       0       0       0
  6764 ;;Total ram usage:        4 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    4
  6767 ;; This function calls:
  6768 ;;		_Binary2BCD
  6769 ;;		_DS1302_write
  6770 ;; This function is called by:
  6771 ;;		_SetupTime
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           
  6776                           ;psect for function _Time_write
  6777  130A                     _Time_write:	
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in _Time_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6781                           ;Time_write@hr stored from wreg
  6782  130A  1283               	bcf	3,5	;RP0=0, select bank0
  6783  130B  1303               	bcf	3,6	;RP1=0, select bank0
  6784  130C  00A4               	movwf	Time_write@hr
  6785                           
  6786                           ;Ds1302.h: 302: min = Binary2BCD(min);
  6787  130D  087C               	movf	Time_write@min,w
  6788  130E  160A  118A  25A2  160A  118A  	fcall	_Binary2BCD
  6789  1313  1283               	bcf	3,5	;RP0=0, select bank0
  6790  1314  1303               	bcf	3,6	;RP1=0, select bank0
  6791  1315  00A3               	movwf	??_Time_write
  6792  1316  0823               	movf	??_Time_write,w
  6793  1317  00FC               	movwf	Time_write@min
  6794                           
  6795                           ;Ds1302.h: 303: hr = Binary2BCD(hr);
  6796  1318  0824               	movf	Time_write@hr,w
  6797  1319  160A  118A  25A2  160A  118A  	fcall	_Binary2BCD
  6798  131E  1283               	bcf	3,5	;RP0=0, select bank0
  6799  131F  1303               	bcf	3,6	;RP1=0, select bank0
  6800  1320  00A3               	movwf	??_Time_write
  6801  1321  0823               	movf	??_Time_write,w
  6802  1322  00A4               	movwf	Time_write@hr
  6803                           
  6804                           ;Ds1302.h: 304: seconds = Binary2BCD(seconds);
  6805  1323  087D               	movf	Time_write@seconds,w
  6806  1324  160A  118A  25A2  160A  118A  	fcall	_Binary2BCD
  6807  1329  1283               	bcf	3,5	;RP0=0, select bank0
  6808  132A  1303               	bcf	3,6	;RP1=0, select bank0
  6809  132B  00A3               	movwf	??_Time_write
  6810  132C  0823               	movf	??_Time_write,w
  6811  132D  00FD               	movwf	Time_write@seconds
  6812                           
  6813                           ;Ds1302.h: 307: DS1302_write( 0x82,min);
  6814  132E  087C               	movf	Time_write@min,w
  6815  132F  00A3               	movwf	??_Time_write
  6816  1330  0823               	movf	??_Time_write,w
  6817  1331  00F7               	movwf	DS1302_write@data
  6818  1332  3082               	movlw	130
  6819  1333  160A  158A  2694  160A  118A  	fcall	_DS1302_write
  6820                           
  6821                           ;Ds1302.h: 308: DS1302_write(0x84, hr);
  6822  1338  1283               	bcf	3,5	;RP0=0, select bank0
  6823  1339  1303               	bcf	3,6	;RP1=0, select bank0
  6824  133A  0824               	movf	Time_write@hr,w
  6825  133B  00A3               	movwf	??_Time_write
  6826  133C  0823               	movf	??_Time_write,w
  6827  133D  00F7               	movwf	DS1302_write@data
  6828  133E  3084               	movlw	132
  6829  133F  160A  158A  2694  160A  118A  	fcall	_DS1302_write
  6830                           
  6831                           ;Ds1302.h: 309: DS1302_write(0x80,seconds);
  6832  1344  087D               	movf	Time_write@seconds,w
  6833  1345  1283               	bcf	3,5	;RP0=0, select bank0
  6834  1346  1303               	bcf	3,6	;RP1=0, select bank0
  6835  1347  00A3               	movwf	??_Time_write
  6836  1348  0823               	movf	??_Time_write,w
  6837  1349  00F7               	movwf	DS1302_write@data
  6838  134A  3080               	movlw	128
  6839  134B  160A  158A  2694   	fcall	_DS1302_write
  6840  134E  0008               	return
  6841  134F                     __end_of_Time_write:	
  6842                           
  6843                           	psect	text19
  6844  1672                     __ptext19:	
  6845 ;; *************** function _ReadArrayFromRAM *****************
  6846 ;; Defined at:
  6847 ;;		line 287 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  timearray       1    wreg     PTR unsigned char 
  6850 ;;		 -> main@time2(9), 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  timearray       1    3[BANK0 ] PTR unsigned char 
  6853 ;;		 -> main@time2(9), 
  6854 ;;  mytime          1    6[BANK0 ] PTR unsigned char 
  6855 ;;		 -> main@time2(9), 
  6856 ;;  mins            1    5[BANK0 ] unsigned char 
  6857 ;;  hr              1    4[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6867 ;;      Params:         0       0       0       0       0
  6868 ;;      Locals:         0       4       0       0       0
  6869 ;;      Temps:          1       0       0       0       0
  6870 ;;      Totals:         1       4       0       0       0
  6871 ;;Total ram usage:        5 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    5
  6874 ;; This function calls:
  6875 ;;		_BCD2LowerCh
  6876 ;;		_BCD2UpperCh
  6877 ;;		_Binary2BCD
  6878 ;;		_RAM_read
  6879 ;; This function is called by:
  6880 ;;		_main
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           
  6885                           ;psect for function _ReadArrayFromRAM
  6886  1672                     _ReadArrayFromRAM:	
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _ReadArrayFromRAM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6890                           ;ReadArrayFromRAM@timearray stored from wreg
  6891  1672  1283               	bcf	3,5	;RP0=0, select bank0
  6892  1673  1303               	bcf	3,6	;RP1=0, select bank0
  6893  1674  00A3               	movwf	ReadArrayFromRAM@timearray
  6894                           
  6895                           ;College_bell.c: 288: char *mytime;
  6896                           ;College_bell.c: 289: unsigned char hr=0,mins=0;
  6897  1675  01A4               	clrf	ReadArrayFromRAM@hr
  6898  1676  01A5               	clrf	ReadArrayFromRAM@mins
  6899                           
  6900                           ;College_bell.c: 290: mytime = timearray;
  6901  1677  0823               	movf	ReadArrayFromRAM@timearray,w
  6902  1678  00FD               	movwf	??_ReadArrayFromRAM
  6903  1679  087D               	movf	??_ReadArrayFromRAM,w
  6904  167A  00A6               	movwf	ReadArrayFromRAM@mytime
  6905                           
  6906                           ;College_bell.c: 293: mins = RAM_read(lastwritecount);lastwritecount = lastwritecount-2;
      +                          mins =Binary2BCD(mins);
  6907  167B  1683               	bsf	3,5	;RP0=1, select bank1
  6908  167C  1303               	bcf	3,6	;RP1=0, select bank1
  6909  167D  086B               	movf	_lastwritecount^(0+128),w
  6910  167E  160A  158A  25AA  160A  118A  	fcall	_RAM_read
  6911  1683  00FD               	movwf	??_ReadArrayFromRAM
  6912  1684  087D               	movf	??_ReadArrayFromRAM,w
  6913  1685  1283               	bcf	3,5	;RP0=0, select bank0
  6914  1686  1303               	bcf	3,6	;RP1=0, select bank0
  6915  1687  00A5               	movwf	ReadArrayFromRAM@mins
  6916  1688  1683               	bsf	3,5	;RP0=1, select bank1
  6917  1689  1303               	bcf	3,6	;RP1=0, select bank1
  6918  168A  086B               	movf	_lastwritecount^(0+128),w
  6919  168B  3EFE               	addlw	254
  6920  168C  00EB               	movwf	_lastwritecount^(0+128)
  6921  168D  086C               	movf	(_lastwritecount+1)^(0+128),w
  6922  168E  1803               	skipnc
  6923  168F  3E01               	addlw	1
  6924  1690  3EFF               	addlw	255
  6925  1691  00EC               	movwf	(_lastwritecount+1)^(0+128)
  6926  1692  1283               	bcf	3,5	;RP0=0, select bank0
  6927  1693  1303               	bcf	3,6	;RP1=0, select bank0
  6928  1694  0825               	movf	ReadArrayFromRAM@mins,w
  6929  1695  160A  118A  25A2  160A  118A  	fcall	_Binary2BCD
  6930  169A  00FD               	movwf	??_ReadArrayFromRAM
  6931  169B  087D               	movf	??_ReadArrayFromRAM,w
  6932  169C  1283               	bcf	3,5	;RP0=0, select bank0
  6933  169D  1303               	bcf	3,6	;RP1=0, select bank0
  6934  169E  00A5               	movwf	ReadArrayFromRAM@mins
  6935                           
  6936                           ;College_bell.c: 294: hr= RAM_read(lastwritecount);hr= Binary2BCD(hr);
  6937  169F  1683               	bsf	3,5	;RP0=1, select bank1
  6938  16A0  1303               	bcf	3,6	;RP1=0, select bank1
  6939  16A1  086B               	movf	_lastwritecount^(0+128),w
  6940  16A2  160A  158A  25AA  160A  118A  	fcall	_RAM_read
  6941  16A7  00FD               	movwf	??_ReadArrayFromRAM
  6942  16A8  087D               	movf	??_ReadArrayFromRAM,w
  6943  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  6944  16AA  1303               	bcf	3,6	;RP1=0, select bank0
  6945  16AB  00A4               	movwf	ReadArrayFromRAM@hr
  6946  16AC  0824               	movf	ReadArrayFromRAM@hr,w
  6947  16AD  160A  118A  25A2  160A  118A  	fcall	_Binary2BCD
  6948  16B2  00FD               	movwf	??_ReadArrayFromRAM
  6949  16B3  087D               	movf	??_ReadArrayFromRAM,w
  6950  16B4  1283               	bcf	3,5	;RP0=0, select bank0
  6951  16B5  1303               	bcf	3,6	;RP1=0, select bank0
  6952  16B6  00A4               	movwf	ReadArrayFromRAM@hr
  6953                           
  6954                           ;College_bell.c: 295: mytime[0]=BCD2UpperCh(hr);
  6955  16B7  0824               	movf	ReadArrayFromRAM@hr,w
  6956  16B8  160A  158A  255E  160A  118A  	fcall	_BCD2UpperCh
  6957  16BD  00FD               	movwf	??_ReadArrayFromRAM
  6958  16BE  1283               	bcf	3,5	;RP0=0, select bank0
  6959  16BF  1303               	bcf	3,6	;RP1=0, select bank0
  6960  16C0  0826               	movf	ReadArrayFromRAM@mytime,w
  6961  16C1  0084               	movwf	4
  6962  16C2  087D               	movf	??_ReadArrayFromRAM,w
  6963  16C3  1383               	bcf	3,7	;select IRP bank0
  6964  16C4  0080               	movwf	0
  6965                           
  6966                           ;College_bell.c: 296: mytime[1]=BCD2LowerCh(hr);
  6967  16C5  0824               	movf	ReadArrayFromRAM@hr,w
  6968  16C6  160A  158A  253D  160A  118A  	fcall	_BCD2LowerCh
  6969  16CB  00FD               	movwf	??_ReadArrayFromRAM
  6970  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  6971  16CD  1303               	bcf	3,6	;RP1=0, select bank0
  6972  16CE  0A26               	incf	ReadArrayFromRAM@mytime,w
  6973  16CF  0084               	movwf	4
  6974  16D0  087D               	movf	??_ReadArrayFromRAM,w
  6975  16D1  1383               	bcf	3,7	;select IRP bank0
  6976  16D2  0080               	movwf	0
  6977                           
  6978                           ;College_bell.c: 297: mytime[3]=BCD2UpperCh(mins);
  6979  16D3  0825               	movf	ReadArrayFromRAM@mins,w
  6980  16D4  160A  158A  255E  160A  118A  	fcall	_BCD2UpperCh
  6981  16D9  00FD               	movwf	??_ReadArrayFromRAM
  6982  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  6983  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  6984  16DC  0826               	movf	ReadArrayFromRAM@mytime,w
  6985  16DD  3E03               	addlw	3
  6986  16DE  0084               	movwf	4
  6987  16DF  087D               	movf	??_ReadArrayFromRAM,w
  6988  16E0  1383               	bcf	3,7	;select IRP bank0
  6989  16E1  0080               	movwf	0
  6990                           
  6991                           ;College_bell.c: 298: mytime[4]=BCD2LowerCh(mins);
  6992  16E2  0825               	movf	ReadArrayFromRAM@mins,w
  6993  16E3  160A  158A  253D   	fcall	_BCD2LowerCh
  6994  16E6  00FD               	movwf	??_ReadArrayFromRAM
  6995  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  6996  16E8  1303               	bcf	3,6	;RP1=0, select bank0
  6997  16E9  0826               	movf	ReadArrayFromRAM@mytime,w
  6998  16EA  3E04               	addlw	4
  6999  16EB  0084               	movwf	4
  7000  16EC  087D               	movf	??_ReadArrayFromRAM,w
  7001  16ED  1383               	bcf	3,7	;select IRP bank0
  7002  16EE  0080               	movwf	0
  7003  16EF  0008               	return
  7004  16F0                     __end_of_ReadArrayFromRAM:	
  7005                           
  7006                           	psect	text20
  7007  1DAA                     __ptext20:	
  7008 ;; *************** function _RAM_read *****************
  7009 ;; Defined at:
  7010 ;;		line 240 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  address         1    wreg     unsigned char 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  address         1   11[COMMON] unsigned char 
  7015 ;;  data            1   12[COMMON] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      unsigned char 
  7018 ;; Registers used:
  7019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7025 ;;      Params:         0       0       0       0       0
  7026 ;;      Locals:         2       0       0       0       0
  7027 ;;      Temps:          1       0       0       0       0
  7028 ;;      Totals:         3       0       0       0       0
  7029 ;;Total ram usage:        3 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    4
  7032 ;; This function calls:
  7033 ;;		_BCD2Binary
  7034 ;;		_DS1302_read
  7035 ;; This function is called by:
  7036 ;;		_ReadArrayFromRAM
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           
  7041                           ;psect for function _RAM_read
  7042  1DAA                     _RAM_read:	
  7043                           
  7044                           ;incstack = 0
  7045                           ; Regs used in _RAM_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7046                           ;RAM_read@address stored from wreg
  7047  1DAA  00FB               	movwf	RAM_read@address
  7048                           
  7049                           ;Ds1302.h: 241: char data = 0x00;
  7050  1DAB  01FC               	clrf	RAM_read@data
  7051                           
  7052                           ;Ds1302.h: 242: data = DS1302_read(address|0xC1);
  7053  1DAC  087B               	movf	RAM_read@address,w
  7054  1DAD  38C1               	iorlw	193
  7055  1DAE  160A  118A  2299  160A  158A  	fcall	_DS1302_read
  7056  1DB3  00FA               	movwf	??_RAM_read
  7057  1DB4  087A               	movf	??_RAM_read,w
  7058  1DB5  00FC               	movwf	RAM_read@data
  7059                           
  7060                           ;Ds1302.h: 243: data = BCD2Binary(data);
  7061  1DB6  087C               	movf	RAM_read@data,w
  7062  1DB7  160A  118A  2238   	fcall	_BCD2Binary
  7063  1DBA  00FA               	movwf	??_RAM_read
  7064  1DBB  087A               	movf	??_RAM_read,w
  7065  1DBC  00FC               	movwf	RAM_read@data
  7066                           
  7067                           ;Ds1302.h: 244: return data;
  7068  1DBD  087C               	movf	RAM_read@data,w
  7069  1DBE  0008               	return
  7070  1DBF                     __end_of_RAM_read:	
  7071                           
  7072                           	psect	text21
  7073  1238                     __ptext21:	
  7074 ;; *************** function _BCD2Binary *****************
  7075 ;; Defined at:
  7076 ;;		line 373 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  aa              1    wreg     unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  aa              1    7[COMMON] unsigned char 
  7081 ;;  tt              1    8[COMMON] unsigned char 
  7082 ;;  rr              1    6[COMMON] unsigned char 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      unsigned char 
  7085 ;; Registers used:
  7086 ;;		wreg, status,2, status,0, pclath, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7092 ;;      Params:         0       0       0       0       0
  7093 ;;      Locals:         3       0       0       0       0
  7094 ;;      Temps:          2       0       0       0       0
  7095 ;;      Totals:         5       0       0       0       0
  7096 ;;Total ram usage:        5 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    1
  7099 ;; This function calls:
  7100 ;;		___bmul
  7101 ;; This function is called by:
  7102 ;;		_RAM_read
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           
  7107                           ;psect for function _BCD2Binary
  7108  1238                     _BCD2Binary:	
  7109                           
  7110                           ;incstack = 0
  7111                           ; Regs used in _BCD2Binary: [wreg+status,2+status,0+pclath+cstack]
  7112                           ;BCD2Binary@aa stored from wreg
  7113  1238  00F7               	movwf	BCD2Binary@aa
  7114                           
  7115                           ;Ds1302.h: 375: char rr,tt;
  7116                           ;Ds1302.h: 376: tt = aa & 0x0F;
  7117  1239  0877               	movf	BCD2Binary@aa,w
  7118  123A  390F               	andlw	15
  7119  123B  00F4               	movwf	??_BCD2Binary
  7120  123C  0874               	movf	??_BCD2Binary,w
  7121  123D  00F8               	movwf	BCD2Binary@tt
  7122                           
  7123                           ;Ds1302.h: 377: rr = tt;
  7124  123E  0878               	movf	BCD2Binary@tt,w
  7125  123F  00F4               	movwf	??_BCD2Binary
  7126  1240  0874               	movf	??_BCD2Binary,w
  7127  1241  00F6               	movwf	BCD2Binary@rr
  7128                           
  7129                           ;Ds1302.h: 378: aa = 0xF0 & aa;
  7130  1242  0877               	movf	BCD2Binary@aa,w
  7131  1243  39F0               	andlw	240
  7132  1244  00F4               	movwf	??_BCD2Binary
  7133  1245  0874               	movf	??_BCD2Binary,w
  7134  1246  00F7               	movwf	BCD2Binary@aa
  7135                           
  7136                           ;Ds1302.h: 379: tt = aa >> 4;
  7137  1247  0877               	movf	BCD2Binary@aa,w
  7138  1248  00F4               	movwf	??_BCD2Binary
  7139  1249  3004               	movlw	4
  7140  124A                     u2995:	
  7141  124A  1003               	clrc
  7142  124B  0CF4               	rrf	??_BCD2Binary,f
  7143  124C  3EFF               	addlw	-1
  7144  124D  1D03               	skipz
  7145  124E  2A4A               	goto	u2995
  7146  124F  0874               	movf	??_BCD2Binary,w
  7147  1250  00F5               	movwf	??_BCD2Binary+1
  7148  1251  0875               	movf	??_BCD2Binary+1,w
  7149  1252  00F8               	movwf	BCD2Binary@tt
  7150                           
  7151                           ;Ds1302.h: 380: tt = 0x0F & tt;
  7152  1253  0878               	movf	BCD2Binary@tt,w
  7153  1254  390F               	andlw	15
  7154  1255  00F4               	movwf	??_BCD2Binary
  7155  1256  0874               	movf	??_BCD2Binary,w
  7156  1257  00F8               	movwf	BCD2Binary@tt
  7157                           
  7158                           ;Ds1302.h: 381: rr = tt*10 + rr;
  7159  1258  300A               	movlw	10
  7160  1259  00F4               	movwf	??_BCD2Binary
  7161  125A  0874               	movf	??_BCD2Binary,w
  7162  125B  00F0               	movwf	___bmul@multiplicand
  7163  125C  0878               	movf	BCD2Binary@tt,w
  7164  125D  160A  158A  2576   	fcall	___bmul
  7165  1260  0776               	addwf	BCD2Binary@rr,w
  7166  1261  00F5               	movwf	??_BCD2Binary+1
  7167  1262  0875               	movf	??_BCD2Binary+1,w
  7168  1263  00F6               	movwf	BCD2Binary@rr
  7169                           
  7170                           ;Ds1302.h: 382: return rr;
  7171  1264  0876               	movf	BCD2Binary@rr,w
  7172  1265  0008               	return
  7173  1266                     __end_of_BCD2Binary:	
  7174                           
  7175                           	psect	text22
  7176  15A2                     __ptext22:	
  7177 ;; *************** function _Binary2BCD *****************
  7178 ;; Defined at:
  7179 ;;		line 359 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  aa              1    wreg     unsigned char 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  aa              1    0[BANK0 ] unsigned char 
  7184 ;;  t2              1    2[BANK0 ] unsigned char 
  7185 ;;  t1              1    1[BANK0 ] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      unsigned char 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0, pclath, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7195 ;;      Params:         0       0       0       0       0
  7196 ;;      Locals:         0       3       0       0       0
  7197 ;;      Temps:          3       0       0       0       0
  7198 ;;      Totals:         3       3       0       0       0
  7199 ;;Total ram usage:        6 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    1
  7202 ;; This function calls:
  7203 ;;		___awdiv
  7204 ;;		___awmod
  7205 ;; This function is called by:
  7206 ;;		_RAM_write
  7207 ;;		_Time_write
  7208 ;;		_readAndStore
  7209 ;;		_ReadArrayFromRAM
  7210 ;;		_DateTime_write
  7211 ;;		_Date_write
  7212 ;;		_IntToChar
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           
  7217                           ;psect for function _Binary2BCD
  7218  15A2                     _Binary2BCD:	
  7219                           
  7220                           ;incstack = 0
  7221                           ; Regs used in _Binary2BCD: [wreg+status,2+status,0+pclath+cstack]
  7222                           ;Binary2BCD@aa stored from wreg
  7223  15A2  1283               	bcf	3,5	;RP0=0, select bank0
  7224  15A3  1303               	bcf	3,6	;RP1=0, select bank0
  7225  15A4  00A0               	movwf	Binary2BCD@aa
  7226                           
  7227                           ;Ds1302.h: 361: char t1, t2;
  7228                           ;Ds1302.h: 362: t1 = aa%10;
  7229  15A5  300A               	movlw	10
  7230  15A6  00F0               	movwf	___awmod@divisor
  7231  15A7  3000               	movlw	0
  7232  15A8  00F1               	movwf	___awmod@divisor+1
  7233  15A9  0820               	movf	Binary2BCD@aa,w
  7234  15AA  00F9               	movwf	??_Binary2BCD
  7235  15AB  01FA               	clrf	??_Binary2BCD+1
  7236  15AC  0879               	movf	??_Binary2BCD,w
  7237  15AD  00F2               	movwf	___awmod@dividend
  7238  15AE  087A               	movf	??_Binary2BCD+1,w
  7239  15AF  00F3               	movwf	___awmod@dividend+1
  7240  15B0  160A  118A  23DF  160A  118A  	fcall	___awmod
  7241  15B5  0870               	movf	?___awmod,w
  7242  15B6  00FB               	movwf	??_Binary2BCD+2
  7243  15B7  087B               	movf	??_Binary2BCD+2,w
  7244  15B8  1283               	bcf	3,5	;RP0=0, select bank0
  7245  15B9  1303               	bcf	3,6	;RP1=0, select bank0
  7246  15BA  00A1               	movwf	Binary2BCD@t1
  7247                           
  7248                           ;Ds1302.h: 363: t1 = t1 & 0x0F;
  7249  15BB  0821               	movf	Binary2BCD@t1,w
  7250  15BC  390F               	andlw	15
  7251  15BD  00F9               	movwf	??_Binary2BCD
  7252  15BE  0879               	movf	??_Binary2BCD,w
  7253  15BF  00A1               	movwf	Binary2BCD@t1
  7254                           
  7255                           ;Ds1302.h: 364: aa = aa/10;
  7256  15C0  300A               	movlw	10
  7257  15C1  00F0               	movwf	___awdiv@divisor
  7258  15C2  3000               	movlw	0
  7259  15C3  00F1               	movwf	___awdiv@divisor+1
  7260  15C4  0820               	movf	Binary2BCD@aa,w
  7261  15C5  00F9               	movwf	??_Binary2BCD
  7262  15C6  01FA               	clrf	??_Binary2BCD+1
  7263  15C7  0879               	movf	??_Binary2BCD,w
  7264  15C8  00F2               	movwf	___awdiv@dividend
  7265  15C9  087A               	movf	??_Binary2BCD+1,w
  7266  15CA  00F3               	movwf	___awdiv@dividend+1
  7267  15CB  160A  118A  247F  160A  118A  	fcall	___awdiv
  7268  15D0  0870               	movf	?___awdiv,w
  7269  15D1  00FB               	movwf	??_Binary2BCD+2
  7270  15D2  087B               	movf	??_Binary2BCD+2,w
  7271  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  7272  15D4  1303               	bcf	3,6	;RP1=0, select bank0
  7273  15D5  00A0               	movwf	Binary2BCD@aa
  7274                           
  7275                           ;Ds1302.h: 365: t2 = aa%10;
  7276  15D6  300A               	movlw	10
  7277  15D7  00F0               	movwf	___awmod@divisor
  7278  15D8  3000               	movlw	0
  7279  15D9  00F1               	movwf	___awmod@divisor+1
  7280  15DA  0820               	movf	Binary2BCD@aa,w
  7281  15DB  00F9               	movwf	??_Binary2BCD
  7282  15DC  01FA               	clrf	??_Binary2BCD+1
  7283  15DD  0879               	movf	??_Binary2BCD,w
  7284  15DE  00F2               	movwf	___awmod@dividend
  7285  15DF  087A               	movf	??_Binary2BCD+1,w
  7286  15E0  00F3               	movwf	___awmod@dividend+1
  7287  15E1  160A  118A  23DF  160A  118A  	fcall	___awmod
  7288  15E6  0870               	movf	?___awmod,w
  7289  15E7  00FB               	movwf	??_Binary2BCD+2
  7290  15E8  087B               	movf	??_Binary2BCD+2,w
  7291  15E9  1283               	bcf	3,5	;RP0=0, select bank0
  7292  15EA  1303               	bcf	3,6	;RP1=0, select bank0
  7293  15EB  00A2               	movwf	Binary2BCD@t2
  7294                           
  7295                           ;Ds1302.h: 366: t2 = 0x0F & t2;
  7296  15EC  0822               	movf	Binary2BCD@t2,w
  7297  15ED  390F               	andlw	15
  7298  15EE  00F9               	movwf	??_Binary2BCD
  7299  15EF  0879               	movf	??_Binary2BCD,w
  7300  15F0  00A2               	movwf	Binary2BCD@t2
  7301                           
  7302                           ;Ds1302.h: 367: t2 = t2 << 4;
  7303  15F1  0822               	movf	Binary2BCD@t2,w
  7304  15F2  00F9               	movwf	??_Binary2BCD
  7305  15F3  3003               	movlw	3
  7306  15F4                     u2975:	
  7307  15F4  1003               	clrc
  7308  15F5  0DF9               	rlf	??_Binary2BCD,f
  7309  15F6  3EFF               	addlw	-1
  7310  15F7  1D03               	skipz
  7311  15F8  2DF4               	goto	u2975
  7312  15F9  1003               	clrc
  7313  15FA  0D79               	rlf	??_Binary2BCD,w
  7314  15FB  00FA               	movwf	??_Binary2BCD+1
  7315  15FC  087A               	movf	??_Binary2BCD+1,w
  7316  15FD  00A2               	movwf	Binary2BCD@t2
  7317                           
  7318                           ;Ds1302.h: 368: t2 = 0xF0 & t2;
  7319  15FE  0822               	movf	Binary2BCD@t2,w
  7320  15FF  39F0               	andlw	240
  7321  1600  00F9               	movwf	??_Binary2BCD
  7322  1601  0879               	movf	??_Binary2BCD,w
  7323  1602  00A2               	movwf	Binary2BCD@t2
  7324                           
  7325                           ;Ds1302.h: 369: t1 = t1 | t2;
  7326  1603  0821               	movf	Binary2BCD@t1,w
  7327  1604  0422               	iorwf	Binary2BCD@t2,w
  7328  1605  00F9               	movwf	??_Binary2BCD
  7329  1606  0879               	movf	??_Binary2BCD,w
  7330  1607  00A1               	movwf	Binary2BCD@t1
  7331                           
  7332                           ;Ds1302.h: 370: return t1;
  7333  1608  0821               	movf	Binary2BCD@t1,w
  7334  1609  0008               	return
  7335  160A                     __end_of_Binary2BCD:	
  7336                           
  7337                           	psect	text23
  7338  13DF                     __ptext23:	
  7339 ;; *************** function ___awmod *****************
  7340 ;; Defined at:
  7341 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  divisor         2    0[COMMON] int 
  7344 ;;  dividend        2    2[COMMON] int 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  sign            1    6[COMMON] unsigned char 
  7347 ;;  counter         1    5[COMMON] unsigned char 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  2    0[COMMON] int 
  7350 ;; Registers used:
  7351 ;;		wreg, status,2, status,0
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7357 ;;      Params:         4       0       0       0       0
  7358 ;;      Locals:         2       0       0       0       0
  7359 ;;      Temps:          1       0       0       0       0
  7360 ;;      Totals:         7       0       0       0       0
  7361 ;;Total ram usage:        7 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; This function calls:
  7364 ;;		Nothing
  7365 ;; This function is called by:
  7366 ;;		_Binary2BCD
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function ___awmod
  7372  13DF                     ___awmod:	
  7373                           
  7374                           ;incstack = 0
  7375                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7376  13DF  01F6               	clrf	___awmod@sign
  7377  13E0  1FF3               	btfss	___awmod@dividend+1,7
  7378  13E1  2BE9               	goto	l3322
  7379  13E2  09F2               	comf	___awmod@dividend,f
  7380  13E3  09F3               	comf	___awmod@dividend+1,f
  7381  13E4  0AF2               	incf	___awmod@dividend,f
  7382  13E5  1903               	skipnz
  7383  13E6  0AF3               	incf	___awmod@dividend+1,f
  7384  13E7  01F6               	clrf	___awmod@sign
  7385  13E8  0AF6               	incf	___awmod@sign,f
  7386  13E9                     l3322:	
  7387  13E9  1FF1               	btfss	___awmod@divisor+1,7
  7388  13EA  2BF0               	goto	l3326
  7389  13EB  09F0               	comf	___awmod@divisor,f
  7390  13EC  09F1               	comf	___awmod@divisor+1,f
  7391  13ED  0AF0               	incf	___awmod@divisor,f
  7392  13EE  1903               	skipnz
  7393  13EF  0AF1               	incf	___awmod@divisor+1,f
  7394  13F0                     l3326:	
  7395  13F0  0870               	movf	___awmod@divisor,w
  7396  13F1  0471               	iorwf	___awmod@divisor+1,w
  7397  13F2  1903               	btfsc	3,2
  7398  13F3  2C1D               	goto	l3344
  7399  13F4  01F5               	clrf	___awmod@counter
  7400  13F5  0AF5               	incf	___awmod@counter,f
  7401  13F6                     l3334:	
  7402  13F6  1BF1               	btfsc	___awmod@divisor+1,7
  7403  13F7  2C04               	goto	l3336
  7404  13F8  3001               	movlw	1
  7405  13F9                     u2885:	
  7406  13F9  1003               	clrc
  7407  13FA  0DF0               	rlf	___awmod@divisor,f
  7408  13FB  0DF1               	rlf	___awmod@divisor+1,f
  7409  13FC  3EFF               	addlw	-1
  7410  13FD  1D03               	skipz
  7411  13FE  2BF9               	goto	u2885
  7412  13FF  3001               	movlw	1
  7413  1400  00F4               	movwf	??___awmod
  7414  1401  0874               	movf	??___awmod,w
  7415  1402  07F5               	addwf	___awmod@counter,f
  7416  1403  2BF6               	goto	l3334
  7417  1404                     l3336:	
  7418  1404  0871               	movf	___awmod@divisor+1,w
  7419  1405  0273               	subwf	___awmod@dividend+1,w
  7420  1406  1D03               	skipz
  7421  1407  2C0A               	goto	u2905
  7422  1408  0870               	movf	___awmod@divisor,w
  7423  1409  0272               	subwf	___awmod@dividend,w
  7424  140A                     u2905:	
  7425  140A  1C03               	skipc
  7426  140B  2C12               	goto	l3340
  7427  140C  0870               	movf	___awmod@divisor,w
  7428  140D  02F2               	subwf	___awmod@dividend,f
  7429  140E  0871               	movf	___awmod@divisor+1,w
  7430  140F  1C03               	skipc
  7431  1410  03F3               	decf	___awmod@dividend+1,f
  7432  1411  02F3               	subwf	___awmod@dividend+1,f
  7433  1412                     l3340:	
  7434  1412  3001               	movlw	1
  7435  1413                     u2915:	
  7436  1413  1003               	clrc
  7437  1414  0CF1               	rrf	___awmod@divisor+1,f
  7438  1415  0CF0               	rrf	___awmod@divisor,f
  7439  1416  3EFF               	addlw	-1
  7440  1417  1D03               	skipz
  7441  1418  2C13               	goto	u2915
  7442  1419  3001               	movlw	1
  7443  141A  02F5               	subwf	___awmod@counter,f
  7444  141B  1D03               	btfss	3,2
  7445  141C  2C04               	goto	l3336
  7446  141D                     l3344:	
  7447  141D  0876               	movf	___awmod@sign,w
  7448  141E  1903               	btfsc	3,2
  7449  141F  2C25               	goto	l3348
  7450  1420  09F2               	comf	___awmod@dividend,f
  7451  1421  09F3               	comf	___awmod@dividend+1,f
  7452  1422  0AF2               	incf	___awmod@dividend,f
  7453  1423  1903               	skipnz
  7454  1424  0AF3               	incf	___awmod@dividend+1,f
  7455  1425                     l3348:	
  7456  1425  0873               	movf	___awmod@dividend+1,w
  7457  1426  00F1               	movwf	?___awmod+1
  7458  1427  0872               	movf	___awmod@dividend,w
  7459  1428  00F0               	movwf	?___awmod
  7460  1429  0008               	return
  7461  142A                     __end_of___awmod:	
  7462                           
  7463                           	psect	text24
  7464  147F                     __ptext24:	
  7465 ;; *************** function ___awdiv *****************
  7466 ;; Defined at:
  7467 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  divisor         2    0[COMMON] int 
  7470 ;;  dividend        2    2[COMMON] int 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  quotient        2    7[COMMON] int 
  7473 ;;  sign            1    6[COMMON] unsigned char 
  7474 ;;  counter         1    5[COMMON] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  2    0[COMMON] int 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7484 ;;      Params:         4       0       0       0       0
  7485 ;;      Locals:         4       0       0       0       0
  7486 ;;      Temps:          1       0       0       0       0
  7487 ;;      Totals:         9       0       0       0       0
  7488 ;;Total ram usage:        9 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_Binary2BCD
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           
  7498                           ;psect for function ___awdiv
  7499  147F                     ___awdiv:	
  7500                           
  7501                           ;incstack = 0
  7502                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7503  147F  01F6               	clrf	___awdiv@sign
  7504  1480  1FF1               	btfss	___awdiv@divisor+1,7
  7505  1481  2C89               	goto	l3278
  7506  1482  09F0               	comf	___awdiv@divisor,f
  7507  1483  09F1               	comf	___awdiv@divisor+1,f
  7508  1484  0AF0               	incf	___awdiv@divisor,f
  7509  1485  1903               	skipnz
  7510  1486  0AF1               	incf	___awdiv@divisor+1,f
  7511  1487  01F6               	clrf	___awdiv@sign
  7512  1488  0AF6               	incf	___awdiv@sign,f
  7513  1489                     l3278:	
  7514  1489  1FF3               	btfss	___awdiv@dividend+1,7
  7515  148A  2C94               	goto	l3284
  7516  148B  09F2               	comf	___awdiv@dividend,f
  7517  148C  09F3               	comf	___awdiv@dividend+1,f
  7518  148D  0AF2               	incf	___awdiv@dividend,f
  7519  148E  1903               	skipnz
  7520  148F  0AF3               	incf	___awdiv@dividend+1,f
  7521  1490  3001               	movlw	1
  7522  1491  00F4               	movwf	??___awdiv
  7523  1492  0874               	movf	??___awdiv,w
  7524  1493  06F6               	xorwf	___awdiv@sign,f
  7525  1494                     l3284:	
  7526  1494  01F7               	clrf	___awdiv@quotient
  7527  1495  01F8               	clrf	___awdiv@quotient+1
  7528  1496  0870               	movf	___awdiv@divisor,w
  7529  1497  0471               	iorwf	___awdiv@divisor+1,w
  7530  1498  1903               	btfsc	3,2
  7531  1499  2CCB               	goto	l3306
  7532  149A  01F5               	clrf	___awdiv@counter
  7533  149B  0AF5               	incf	___awdiv@counter,f
  7534  149C                     l3294:	
  7535  149C  1BF1               	btfsc	___awdiv@divisor+1,7
  7536  149D  2CAA               	goto	l3296
  7537  149E  3001               	movlw	1
  7538  149F                     u2785:	
  7539  149F  1003               	clrc
  7540  14A0  0DF0               	rlf	___awdiv@divisor,f
  7541  14A1  0DF1               	rlf	___awdiv@divisor+1,f
  7542  14A2  3EFF               	addlw	-1
  7543  14A3  1D03               	skipz
  7544  14A4  2C9F               	goto	u2785
  7545  14A5  3001               	movlw	1
  7546  14A6  00F4               	movwf	??___awdiv
  7547  14A7  0874               	movf	??___awdiv,w
  7548  14A8  07F5               	addwf	___awdiv@counter,f
  7549  14A9  2C9C               	goto	l3294
  7550  14AA                     l3296:	
  7551  14AA  3001               	movlw	1
  7552  14AB                     u2805:	
  7553  14AB  1003               	clrc
  7554  14AC  0DF7               	rlf	___awdiv@quotient,f
  7555  14AD  0DF8               	rlf	___awdiv@quotient+1,f
  7556  14AE  3EFF               	addlw	-1
  7557  14AF  1D03               	skipz
  7558  14B0  2CAB               	goto	u2805
  7559  14B1  0871               	movf	___awdiv@divisor+1,w
  7560  14B2  0273               	subwf	___awdiv@dividend+1,w
  7561  14B3  1D03               	skipz
  7562  14B4  2CB7               	goto	u2815
  7563  14B5  0870               	movf	___awdiv@divisor,w
  7564  14B6  0272               	subwf	___awdiv@dividend,w
  7565  14B7                     u2815:	
  7566  14B7  1C03               	skipc
  7567  14B8  2CC0               	goto	l3302
  7568  14B9  0870               	movf	___awdiv@divisor,w
  7569  14BA  02F2               	subwf	___awdiv@dividend,f
  7570  14BB  0871               	movf	___awdiv@divisor+1,w
  7571  14BC  1C03               	skipc
  7572  14BD  03F3               	decf	___awdiv@dividend+1,f
  7573  14BE  02F3               	subwf	___awdiv@dividend+1,f
  7574  14BF  1477               	bsf	___awdiv@quotient,0
  7575  14C0                     l3302:	
  7576  14C0  3001               	movlw	1
  7577  14C1                     u2825:	
  7578  14C1  1003               	clrc
  7579  14C2  0CF1               	rrf	___awdiv@divisor+1,f
  7580  14C3  0CF0               	rrf	___awdiv@divisor,f
  7581  14C4  3EFF               	addlw	-1
  7582  14C5  1D03               	skipz
  7583  14C6  2CC1               	goto	u2825
  7584  14C7  3001               	movlw	1
  7585  14C8  02F5               	subwf	___awdiv@counter,f
  7586  14C9  1D03               	btfss	3,2
  7587  14CA  2CAA               	goto	l3296
  7588  14CB                     l3306:	
  7589  14CB  0876               	movf	___awdiv@sign,w
  7590  14CC  1903               	btfsc	3,2
  7591  14CD  2CD3               	goto	l3310
  7592  14CE  09F7               	comf	___awdiv@quotient,f
  7593  14CF  09F8               	comf	___awdiv@quotient+1,f
  7594  14D0  0AF7               	incf	___awdiv@quotient,f
  7595  14D1  1903               	skipnz
  7596  14D2  0AF8               	incf	___awdiv@quotient+1,f
  7597  14D3                     l3310:	
  7598  14D3  0878               	movf	___awdiv@quotient+1,w
  7599  14D4  00F1               	movwf	?___awdiv+1
  7600  14D5  0877               	movf	___awdiv@quotient,w
  7601  14D6  00F0               	movwf	?___awdiv
  7602  14D7  0008               	return
  7603  14D8                     __end_of___awdiv:	
  7604                           
  7605                           	psect	text25
  7606  1D5E                     __ptext25:	
  7607 ;; *************** function _BCD2UpperCh *****************
  7608 ;; Defined at:
  7609 ;;		line 346 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  bcd             1    wreg     unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  bcd             1    1[COMMON] unsigned char 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      unsigned char 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2, status,0
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7623 ;;      Params:         0       0       0       0       0
  7624 ;;      Locals:         1       0       0       0       0
  7625 ;;      Temps:          1       0       0       0       0
  7626 ;;      Totals:         2       0       0       0       0
  7627 ;;Total ram usage:        2 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; This function calls:
  7630 ;;		Nothing
  7631 ;; This function is called by:
  7632 ;;		_main
  7633 ;;		_readAndStore
  7634 ;;		_ReadArrayFromRAM
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           
  7639                           ;psect for function _BCD2UpperCh
  7640  1D5E                     _BCD2UpperCh:	
  7641                           
  7642                           ;incstack = 0
  7643                           ; Regs used in _BCD2UpperCh: [wreg+status,2+status,0]
  7644                           ;BCD2UpperCh@bcd stored from wreg
  7645  1D5E  00F1               	movwf	BCD2UpperCh@bcd
  7646                           
  7647                           ;Ds1302.h: 348: return ((bcd >> 4) | 48);
  7648  1D5F  0871               	movf	BCD2UpperCh@bcd,w
  7649  1D60  00F0               	movwf	??_BCD2UpperCh
  7650  1D61  3004               	movlw	4
  7651  1D62                     u3305:	
  7652  1D62  1003               	clrc
  7653  1D63  0CF0               	rrf	??_BCD2UpperCh,f
  7654  1D64  3EFF               	addlw	-1
  7655  1D65  1D03               	skipz
  7656  1D66  2D62               	goto	u3305
  7657  1D67  0870               	movf	??_BCD2UpperCh,w
  7658  1D68  3830               	iorlw	48
  7659  1D69  0008               	return
  7660  1D6A                     __end_of_BCD2UpperCh:	
  7661                           
  7662                           	psect	text26
  7663  1D3D                     __ptext26:	
  7664 ;; *************** function _BCD2LowerCh *****************
  7665 ;; Defined at:
  7666 ;;		line 352 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  bcd             1    wreg     unsigned char 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  bcd             1    0[COMMON] unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      unsigned char 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7680 ;;      Params:         0       0       0       0       0
  7681 ;;      Locals:         1       0       0       0       0
  7682 ;;      Temps:          0       0       0       0       0
  7683 ;;      Totals:         1       0       0       0       0
  7684 ;;Total ram usage:        1 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_main
  7690 ;;		_readAndStore
  7691 ;;		_ReadArrayFromRAM
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _BCD2LowerCh
  7697  1D3D                     _BCD2LowerCh:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _BCD2LowerCh: [wreg+status,2]
  7701                           ;BCD2LowerCh@bcd stored from wreg
  7702  1D3D  00F0               	movwf	BCD2LowerCh@bcd
  7703                           
  7704                           ;Ds1302.h: 354: return ((bcd & 0x0F) | 48);
  7705  1D3E  0870               	movf	BCD2LowerCh@bcd,w
  7706  1D3F  390F               	andlw	15
  7707  1D40  3830               	iorlw	48
  7708  1D41  0008               	return
  7709  1D42                     __end_of_BCD2LowerCh:	
  7710                           
  7711                           	psect	text27
  7712  1DF4                     __ptext27:	
  7713 ;; *************** function _LCD_clear *****************
  7714 ;; Defined at:
  7715 ;;		line 381 in file "C:/Users/systematic/Documents/embedded_project/XC8/CLOUDX_korede/SMART_BELL_NOKIA/College_bell.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;		None
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1    wreg      void 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7729 ;;      Params:         0       0       0       0       0
  7730 ;;      Locals:         0       0       0       0       0
  7731 ;;      Temps:          0       3       0       0       0
  7732 ;;      Totals:         0       3       0       0       0
  7733 ;;Total ram usage:        3 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:    4
  7736 ;; This function calls:
  7737 ;;		_LCD5110_clear
  7738 ;;		_LCD5110_fillScreen
  7739 ;; This function is called by:
  7740 ;;		_main
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function _LCD_clear
  7746  1DF4                     _LCD_clear:	
  7747                           
  7748                           ;College_bell.c: 382: LCD5110_clear();
  7749                           
  7750                           ;incstack = 0
  7751                           ; Regs used in _LCD_clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7752  1DF4  160A  118A  220D  160A  158A  	fcall	_LCD5110_clear
  7753                           
  7754                           ;College_bell.c: 383: LCD5110_fillScreen(0xFF);
  7755  1DF9  30FF               	movlw	255
  7756  1DFA  160A  158A  2630  160A  158A  	fcall	_LCD5110_fillScreen
  7757                           
  7758                           ;College_bell.c: 384: _delay((unsigned long)((1000)*(20000000/4000.0)));
  7759  1DFF  301A               	movlw	26
  7760  1E00  1283               	bcf	3,5	;RP0=0, select bank0
  7761  1E01  1303               	bcf	3,6	;RP1=0, select bank0
  7762  1E02  00A2               	movwf	??_LCD_clear+2
  7763  1E03  305E               	movlw	94
  7764  1E04  00A1               	movwf	??_LCD_clear+1
  7765  1E05  3086               	movlw	134
  7766  1E06  00A0               	movwf	??_LCD_clear
  7767  1E07                     u4377:	
  7768  1E07  0BA0               	decfsz	??_LCD_clear,f
  7769  1E08  2E07               	goto	u4377
  7770  1E09  0BA1               	decfsz	??_LCD_clear+1,f
  7771  1E0A  2E07               	goto	u4377
  7772  1E0B  0BA2               	decfsz	??_LCD_clear+2,f
  7773  1E0C  2E07               	goto	u4377
  7774  1E0D  0000               	nop
  7775                           
  7776                           ;College_bell.c: 385: LCD5110_clear();
  7777  1E0E  160A  118A  220D   	fcall	_LCD5110_clear
  7778  1E11  0008               	return
  7779  1E12                     __end_of_LCD_clear:	
  7780                           
  7781                           	psect	text28
  7782  1E30                     __ptext28:	
  7783 ;; *************** function _LCD5110_fillScreen *****************
  7784 ;; Defined at:
  7785 ;;		line 359 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  bytez           1    wreg     unsigned char 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;  bytez           1    9[COMMON] unsigned char 
  7790 ;;  pointer         2   10[COMMON] int 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7800 ;;      Params:         0       0       0       0       0
  7801 ;;      Locals:         3       0       0       0       0
  7802 ;;      Temps:          1       0       0       0       0
  7803 ;;      Totals:         4       0       0       0       0
  7804 ;;Total ram usage:        4 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    2
  7807 ;; This function calls:
  7808 ;;		_LCD5110_internalWrite
  7809 ;; This function is called by:
  7810 ;;		_LCD_clear
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _LCD5110_fillScreen
  7816  1E30                     _LCD5110_fillScreen:	
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _LCD5110_fillScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7820                           ;LCD5110_fillScreen@bytez stored from wreg
  7821  1E30  00F9               	movwf	LCD5110_fillScreen@bytez
  7822                           
  7823                           ;LCD5110.h: 360: for (int pointer = 0; pointer < (84 * 48 / 8); pointer++)
  7824  1E31  01FA               	clrf	LCD5110_fillScreen@pointer
  7825  1E32  01FB               	clrf	LCD5110_fillScreen@pointer+1
  7826  1E33                     L12:	
  7827  1E33  087B               	movf	LCD5110_fillScreen@pointer+1,w
  7828  1E34  3A80               	xorlw	128
  7829  1E35  00FF               	movwf	127
  7830  1E36  3081               	movlw	129
  7831  1E37  027F               	subwf	127,w
  7832  1E38  1D03               	skipz
  7833  1E39  2E3C               	goto	u3315
  7834  1E3A  30F8               	movlw	248
  7835  1E3B  027A               	subwf	LCD5110_fillScreen@pointer,w
  7836  1E3C                     u3315:	
  7837  1E3C  1803               	btfsc	3,0
  7838  1E3D  0008               	return
  7839                           
  7840                           ;LCD5110.h: 361: LCD5110_internalWrite(1, bytez);
  7841  1E3E  0879               	movf	LCD5110_fillScreen@bytez,w
  7842  1E3F  00F8               	movwf	??_LCD5110_fillScreen
  7843  1E40  0878               	movf	??_LCD5110_fillScreen,w
  7844  1E41  00F2               	movwf	LCD5110_internalWrite@dataByte
  7845  1E42  3001               	movlw	1
  7846  1E43  160A  118A  24D8  160A  158A  	fcall	_LCD5110_internalWrite
  7847  1E48  3001               	movlw	1
  7848  1E49  07FA               	addwf	LCD5110_fillScreen@pointer,f
  7849  1E4A  1803               	skipnc
  7850  1E4B  0AFB               	incf	LCD5110_fillScreen@pointer+1,f
  7851  1E4C  3000               	movlw	0
  7852  1E4D  07FB               	addwf	LCD5110_fillScreen@pointer+1,f
  7853  1E4E  2E33               	goto	L12
  7854  1E4F                     __end_of_LCD5110_fillScreen:	
  7855                           
  7856                           	psect	text29
  7857  120D                     __ptext29:	
  7858 ;; *************** function _LCD5110_clear *****************
  7859 ;; Defined at:
  7860 ;;		line 364 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  pointer         2   12[COMMON] int 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7874 ;;      Params:         0       0       0       0       0
  7875 ;;      Locals:         2       0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0
  7877 ;;      Totals:         2       0       0       0       0
  7878 ;;Total ram usage:        2 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    3
  7881 ;; This function calls:
  7882 ;;		_LCD5110_internalWrite
  7883 ;;		_gotoXY
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;;		_SetupTime
  7887 ;;		_LCD_clear
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           
  7892                           ;psect for function _LCD5110_clear
  7893  120D                     _LCD5110_clear:	
  7894                           
  7895                           ;LCD5110.h: 365: for (int pointer = 0; pointer < (84 * 48 / 8); pointer++)
  7896                           
  7897                           ;incstack = 0
  7898                           ; Regs used in _LCD5110_clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7899  120D  01FC               	clrf	LCD5110_clear@pointer
  7900  120E  01FD               	clrf	LCD5110_clear@pointer+1
  7901  120F  087D               	movf	LCD5110_clear@pointer+1,w
  7902  1210  3A80               	xorlw	128
  7903  1211  00FF               	movwf	127
  7904  1212  3081               	movlw	129
  7905  1213  027F               	subwf	127,w
  7906  1214  1D03               	skipz
  7907  1215  2A18               	goto	u3335
  7908  1216  30F8               	movlw	248
  7909  1217  027C               	subwf	LCD5110_clear@pointer,w
  7910  1218                     u3335:	
  7911  1218  1803               	btfsc	3,0
  7912  1219  2A32               	goto	l3768
  7913  121A                     l3762:	
  7914                           
  7915                           ;LCD5110.h: 366: LCD5110_internalWrite(1, 0x00);
  7916  121A  01F2               	clrf	LCD5110_internalWrite@dataByte
  7917  121B  3001               	movlw	1
  7918  121C  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  7919  1221  3001               	movlw	1
  7920  1222  07FC               	addwf	LCD5110_clear@pointer,f
  7921  1223  1803               	skipnc
  7922  1224  0AFD               	incf	LCD5110_clear@pointer+1,f
  7923  1225  3000               	movlw	0
  7924  1226  07FD               	addwf	LCD5110_clear@pointer+1,f
  7925  1227  087D               	movf	LCD5110_clear@pointer+1,w
  7926  1228  3A80               	xorlw	128
  7927  1229  00FF               	movwf	127
  7928  122A  3081               	movlw	129
  7929  122B  027F               	subwf	127,w
  7930  122C  1D03               	skipz
  7931  122D  2A30               	goto	u3345
  7932  122E  30F8               	movlw	248
  7933  122F  027C               	subwf	LCD5110_clear@pointer,w
  7934  1230                     u3345:	
  7935  1230  1C03               	skipc
  7936  1231  2A1A               	goto	l3762
  7937  1232                     l3768:	
  7938                           
  7939                           ;LCD5110.h: 367: gotoXY(0, 0);
  7940  1232  01F8               	clrf	gotoXY@X
  7941  1233  3000               	movlw	0
  7942  1234  160A  158A  26BC   	fcall	_gotoXY
  7943  1237  0008               	return
  7944  1238                     __end_of_LCD5110_clear:	
  7945                           
  7946                           	psect	text30
  7947  1EBC                     __ptext30:	
  7948 ;; *************** function _gotoXY *****************
  7949 ;; Defined at:
  7950 ;;		line 257 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  Y               1    wreg     unsigned char 
  7953 ;;  X               1    8[COMMON] unsigned char 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  Y               1   11[COMMON] unsigned char 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2    8[COMMON] int 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7965 ;;      Params:         1       0       0       0       0
  7966 ;;      Locals:         1       0       0       0       0
  7967 ;;      Temps:          2       0       0       0       0
  7968 ;;      Totals:         4       0       0       0       0
  7969 ;;Total ram usage:        4 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    2
  7972 ;; This function calls:
  7973 ;;		_LCD5110_internalWrite
  7974 ;;		___bmul
  7975 ;; This function is called by:
  7976 ;;		_LCD5110_writeText
  7977 ;;		_LCD5110_clear
  7978 ;;		_LCD5110_image
  7979 ;;		_LCD5110_write
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           
  7984                           ;psect for function _gotoXY
  7985  1EBC                     _gotoXY:	
  7986                           
  7987                           ;incstack = 0
  7988                           ; Regs used in _gotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7989                           ;gotoXY@Y stored from wreg
  7990  1EBC  00FB               	movwf	gotoXY@Y
  7991                           
  7992                           ;LCD5110.h: 258: X*= 7;
  7993  1EBD  0878               	movf	gotoXY@X,w
  7994  1EBE  00F9               	movwf	??_gotoXY
  7995  1EBF  0879               	movf	??_gotoXY,w
  7996  1EC0  00F0               	movwf	___bmul@multiplicand
  7997  1EC1  3007               	movlw	7
  7998  1EC2  160A  158A  2576  160A  158A  	fcall	___bmul
  7999  1EC7  00FA               	movwf	??_gotoXY+1
  8000  1EC8  087A               	movf	??_gotoXY+1,w
  8001  1EC9  00F8               	movwf	gotoXY@X
  8002                           
  8003                           ;LCD5110.h: 259: colCheck = X;
  8004  1ECA  0878               	movf	gotoXY@X,w
  8005  1ECB  00F9               	movwf	??_gotoXY
  8006  1ECC  0879               	movf	??_gotoXY,w
  8007  1ECD  1283               	bcf	3,5	;RP0=0, select bank0
  8008  1ECE  1303               	bcf	3,6	;RP1=0, select bank0
  8009  1ECF  00E2               	movwf	_colCheck
  8010                           
  8011                           ;LCD5110.h: 260: LCD5110_internalWrite(0, (0x40 | Y));
  8012  1ED0  087B               	movf	gotoXY@Y,w
  8013  1ED1  3840               	iorlw	64
  8014  1ED2  00F9               	movwf	??_gotoXY
  8015  1ED3  0879               	movf	??_gotoXY,w
  8016  1ED4  00F2               	movwf	LCD5110_internalWrite@dataByte
  8017  1ED5  3000               	movlw	0
  8018  1ED6  160A  118A  24D8  160A  158A  	fcall	_LCD5110_internalWrite
  8019                           
  8020                           ;LCD5110.h: 261: LCD5110_internalWrite(0, (0x80 | X));
  8021  1EDB  0878               	movf	gotoXY@X,w
  8022  1EDC  3880               	iorlw	128
  8023  1EDD  00F9               	movwf	??_gotoXY
  8024  1EDE  0879               	movf	??_gotoXY,w
  8025  1EDF  00F2               	movwf	LCD5110_internalWrite@dataByte
  8026  1EE0  3000               	movlw	0
  8027  1EE1  160A  118A  24D8   	fcall	_LCD5110_internalWrite
  8028  1EE4  0008               	return
  8029  1EE5                     __end_of_gotoXY:	
  8030                           
  8031                           	psect	text31
  8032  1D76                     __ptext31:	
  8033 ;; *************** function ___bmul *****************
  8034 ;; Defined at:
  8035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul8.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  multiplier      1    wreg     unsigned char 
  8038 ;;  multiplicand    1    0[COMMON] unsigned char 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  multiplier      1    3[COMMON] unsigned char 
  8041 ;;  product         1    2[COMMON] unsigned char 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      unsigned char 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8051 ;;      Params:         1       0       0       0       0
  8052 ;;      Locals:         2       0       0       0       0
  8053 ;;      Temps:          1       0       0       0       0
  8054 ;;      Totals:         4       0       0       0       0
  8055 ;;Total ram usage:        4 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_BCD2Binary
  8061 ;;		_gotoXY
  8062 ;;		_getKey
  8063 ;;		_writeArrayToRAM
  8064 ;;		_SetupTime
  8065 ;;		_LCD5110_write
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function ___bmul
  8071  1D76                     ___bmul:	
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8075                           ;___bmul@multiplier stored from wreg
  8076  1D76  00F3               	movwf	___bmul@multiplier
  8077  1D77  01F2               	clrf	___bmul@product
  8078  1D78                     l3258:	
  8079  1D78  1C73               	btfss	___bmul@multiplier,0
  8080  1D79  2D7E               	goto	l3262
  8081  1D7A  0870               	movf	___bmul@multiplicand,w
  8082  1D7B  00F1               	movwf	??___bmul
  8083  1D7C  0871               	movf	??___bmul,w
  8084  1D7D  07F2               	addwf	___bmul@product,f
  8085  1D7E                     l3262:	
  8086  1D7E  1003               	clrc
  8087  1D7F  0DF0               	rlf	___bmul@multiplicand,f
  8088  1D80  1003               	clrc
  8089  1D81  0CF3               	rrf	___bmul@multiplier,f
  8090  1D82  0873               	movf	___bmul@multiplier,w
  8091  1D83  1D03               	btfss	3,2
  8092  1D84  2D78               	goto	l3258
  8093  1D85  0872               	movf	___bmul@product,w
  8094  1D86  0008               	return
  8095  1D87                     __end_of___bmul:	
  8096                           
  8097                           	psect	text32
  8098  1DD7                     __ptext32:	
  8099 ;; *************** function _LCD5110_setting *****************
  8100 ;; Defined at:
  8101 ;;		line 383 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  Rset            1    wreg     unsigned char 
  8104 ;;  CE              1    9[COMMON] unsigned char 
  8105 ;;  DC              1   10[COMMON] unsigned char 
  8106 ;;  DIn             1   11[COMMON] unsigned char 
  8107 ;;  Clk             1   12[COMMON] unsigned char 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  Rset            1   13[COMMON] unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8119 ;;      Params:         4       0       0       0       0
  8120 ;;      Locals:         1       0       0       0       0
  8121 ;;      Temps:          0       4       0       0       0
  8122 ;;      Totals:         5       4       0       0       0
  8123 ;;Total ram usage:        9 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    3
  8126 ;; This function calls:
  8127 ;;		_LCD5110_settings
  8128 ;;		_startCommand
  8129 ;; This function is called by:
  8130 ;;		_main
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134                           
  8135                           ;psect for function _LCD5110_setting
  8136  1DD7                     _LCD5110_setting:	
  8137                           
  8138                           ;incstack = 0
  8139                           ; Regs used in _LCD5110_setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8140                           ;LCD5110_setting@Rset stored from wreg
  8141  1DD7  00FD               	movwf	LCD5110_setting@Rset
  8142                           
  8143                           ;LCD5110.h: 386: LCD5110_settings(Clk, DIn, DC, CE, Rset);
  8144  1DD8  087B               	movf	LCD5110_setting@DIn,w
  8145  1DD9  1283               	bcf	3,5	;RP0=0, select bank0
  8146  1DDA  1303               	bcf	3,6	;RP1=0, select bank0
  8147  1DDB  00A0               	movwf	??_LCD5110_setting
  8148  1DDC  0820               	movf	??_LCD5110_setting,w
  8149  1DDD  00F2               	movwf	LCD5110_settings@DIn
  8150  1DDE  087A               	movf	LCD5110_setting@DC,w
  8151  1DDF  00A1               	movwf	??_LCD5110_setting+1
  8152  1DE0  0821               	movf	??_LCD5110_setting+1,w
  8153  1DE1  00F3               	movwf	LCD5110_settings@DC
  8154  1DE2  0879               	movf	LCD5110_setting@CE,w
  8155  1DE3  00A2               	movwf	??_LCD5110_setting+2
  8156  1DE4  0822               	movf	??_LCD5110_setting+2,w
  8157  1DE5  00F4               	movwf	LCD5110_settings@CE
  8158  1DE6  087D               	movf	LCD5110_setting@Rset,w
  8159  1DE7  00A3               	movwf	??_LCD5110_setting+3
  8160  1DE8  0823               	movf	??_LCD5110_setting+3,w
  8161  1DE9  00F5               	movwf	LCD5110_settings@Rset
  8162  1DEA  087C               	movf	LCD5110_setting@Clk,w
  8163  1DEB  160A  118A  2397  160A  158A  	fcall	_LCD5110_settings
  8164                           
  8165                           ;LCD5110.h: 387: startCommand();
  8166  1DF0  160A  118A  22CF   	fcall	_startCommand
  8167  1DF3  0008               	return
  8168  1DF4                     __end_of_LCD5110_setting:	
  8169                           
  8170                           	psect	text33
  8171  12CF                     __ptext33:	
  8172 ;; *************** function _startCommand *****************
  8173 ;; Defined at:
  8174 ;;		line 247 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  2  397[None  ] int 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8188 ;;      Params:         0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0
  8190 ;;      Temps:          1       0       0       0       0
  8191 ;;      Totals:         1       0       0       0       0
  8192 ;;Total ram usage:        1 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    2
  8195 ;; This function calls:
  8196 ;;		_LCD5110_internalWrite
  8197 ;; This function is called by:
  8198 ;;		_LCD5110_setting
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           
  8203                           ;psect for function _startCommand
  8204  12CF                     _startCommand:	
  8205                           
  8206                           ;LCD5110.h: 248: LCD5110_internalWrite(0, 0x21);
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in _startCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8210  12CF  3021               	movlw	33
  8211  12D0  00F8               	movwf	??_startCommand
  8212  12D1  0878               	movf	??_startCommand,w
  8213  12D2  00F2               	movwf	LCD5110_internalWrite@dataByte
  8214  12D3  3000               	movlw	0
  8215  12D4  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  8216                           
  8217                           ;LCD5110.h: 249: LCD5110_internalWrite(0, 0xB5);
  8218  12D9  30B5               	movlw	181
  8219  12DA  00F8               	movwf	??_startCommand
  8220  12DB  0878               	movf	??_startCommand,w
  8221  12DC  00F2               	movwf	LCD5110_internalWrite@dataByte
  8222  12DD  3000               	movlw	0
  8223  12DE  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  8224                           
  8225                           ;LCD5110.h: 250: LCD5110_internalWrite(0, 0x04);
  8226  12E3  3004               	movlw	4
  8227  12E4  00F8               	movwf	??_startCommand
  8228  12E5  0878               	movf	??_startCommand,w
  8229  12E6  00F2               	movwf	LCD5110_internalWrite@dataByte
  8230  12E7  3000               	movlw	0
  8231  12E8  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  8232                           
  8233                           ;LCD5110.h: 251: LCD5110_internalWrite(0, 0x14);
  8234  12ED  3014               	movlw	20
  8235  12EE  00F8               	movwf	??_startCommand
  8236  12EF  0878               	movf	??_startCommand,w
  8237  12F0  00F2               	movwf	LCD5110_internalWrite@dataByte
  8238  12F1  3000               	movlw	0
  8239  12F2  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  8240                           
  8241                           ;LCD5110.h: 252: LCD5110_internalWrite(0, 0x20);
  8242  12F7  3020               	movlw	32
  8243  12F8  00F8               	movwf	??_startCommand
  8244  12F9  0878               	movf	??_startCommand,w
  8245  12FA  00F2               	movwf	LCD5110_internalWrite@dataByte
  8246  12FB  3000               	movlw	0
  8247  12FC  160A  118A  24D8  160A  118A  	fcall	_LCD5110_internalWrite
  8248                           
  8249                           ;LCD5110.h: 253: LCD5110_internalWrite(0, 0x0C);
  8250  1301  300C               	movlw	12
  8251  1302  00F8               	movwf	??_startCommand
  8252  1303  0878               	movf	??_startCommand,w
  8253  1304  00F2               	movwf	LCD5110_internalWrite@dataByte
  8254  1305  3000               	movlw	0
  8255  1306  160A  118A  24D8   	fcall	_LCD5110_internalWrite
  8256  1309  0008               	return
  8257  130A                     __end_of_startCommand:	
  8258                           
  8259                           	psect	text34
  8260  14D8                     __ptext34:	
  8261 ;; *************** function _LCD5110_internalWrite *****************
  8262 ;; Defined at:
  8263 ;;		line 224 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  Data__Comman    1    wreg     unsigned char 
  8266 ;;  dataByte        1    2[COMMON] unsigned char 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  Data__Comman    1    5[COMMON] unsigned char 
  8269 ;;  i               1    7[COMMON] unsigned char 
  8270 ;;  _data           1    6[COMMON] unsigned char 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  2    2[COMMON] int 
  8273 ;; Registers used:
  8274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8280 ;;      Params:         1       0       0       0       0
  8281 ;;      Locals:         3       0       0       0       0
  8282 ;;      Temps:          2       0       0       0       0
  8283 ;;      Totals:         6       0       0       0       0
  8284 ;;Total ram usage:        6 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:    1
  8287 ;; This function calls:
  8288 ;;		_PinSelect
  8289 ;; This function is called by:
  8290 ;;		_startCommand
  8291 ;;		_gotoXY
  8292 ;;		_LCD5110_startCol
  8293 ;;		_LCD5110_inWrite
  8294 ;;		_LCD5110_writeCP
  8295 ;;		_LCD5110_writeText
  8296 ;;		_LCD5110_fillScreen
  8297 ;;		_LCD5110_clear
  8298 ;;		_LCD5110_startRow
  8299 ;;		_LCD5110_image
  8300 ;;		_LCD5110_write
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function _LCD5110_internalWrite
  8306  14D8                     _LCD5110_internalWrite:	
  8307                           
  8308                           ;incstack = 0
  8309                           ; Regs used in _LCD5110_internalWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8310                           ;LCD5110_internalWrite@Data__Command stored from wreg
  8311  14D8  00F5               	movwf	LCD5110_internalWrite@Data__Command
  8312                           
  8313                           ;LCD5110.h: 225: unsigned char _data, i;
  8314                           ;LCD5110.h: 226: _data = dataByte;
  8315  14D9  0872               	movf	LCD5110_internalWrite@dataByte,w
  8316  14DA  00F3               	movwf	??_LCD5110_internalWrite
  8317  14DB  0873               	movf	??_LCD5110_internalWrite,w
  8318  14DC  00F6               	movwf	LCD5110_internalWrite@_data
  8319                           
  8320                           ;LCD5110.h: 227: if(Data__Command == 0)
  8321  14DD  0875               	movf	LCD5110_internalWrite@Data__Command,w
  8322  14DE  1D03               	btfss	3,2
  8323  14DF  2CE2               	goto	l2958
  8324                           
  8325                           ;LCD5110.h: 228: PinSelect(_DC, 0);
  8326  14E0  01F0               	clrf	PinSelect@segState
  8327  14E1  2CE4               	goto	L13
  8328  14E2                     l2958:	
  8329                           
  8330                           ;LCD5110.h: 229: else
  8331                           ;LCD5110.h: 230: PinSelect(_DC, 1);
  8332  14E2  01F0               	clrf	PinSelect@segState
  8333  14E3  0AF0               	incf	PinSelect@segState,f
  8334  14E4                     L13:	
  8335  14E4  1283               	bcf	3,5	;RP0=0, select bank0
  8336  14E5  1303               	bcf	3,6	;RP1=0, select bank0
  8337  14E6  085F               	movf	__DC,w
  8338  14E7  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8339                           
  8340                           ;LCD5110.h: 232: PinSelect(_CE, 0);
  8341  14EC  01F0               	clrf	PinSelect@segState
  8342  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  8343  14EE  1303               	bcf	3,6	;RP1=0, select bank0
  8344  14EF  085D               	movf	__CE,w
  8345  14F0  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8346                           
  8347                           ;LCD5110.h: 233: for(i=0;i<8;i++) {
  8348  14F5  01F7               	clrf	LCD5110_internalWrite@i
  8349  14F6  3008               	movlw	8
  8350  14F7  0277               	subwf	LCD5110_internalWrite@i,w
  8351  14F8  1803               	btfsc	3,0
  8352  14F9  2D32               	goto	l2980
  8353  14FA                     l2966:	
  8354                           
  8355                           ;LCD5110.h: 234: PinSelect(_Clk, 0);
  8356  14FA  01F0               	clrf	PinSelect@segState
  8357  14FB  1283               	bcf	3,5	;RP0=0, select bank0
  8358  14FC  1303               	bcf	3,6	;RP1=0, select bank0
  8359  14FD  085E               	movf	__Clk,w
  8360  14FE  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8361                           
  8362                           ;LCD5110.h: 235: if(_data & 0x80)
  8363  1503  1FF6               	btfss	LCD5110_internalWrite@_data,7
  8364  1504  2D08               	goto	l2972
  8365                           
  8366                           ;LCD5110.h: 236: PinSelect(_DIn, 1);
  8367  1505  01F0               	clrf	PinSelect@segState
  8368  1506  0AF0               	incf	PinSelect@segState,f
  8369  1507  2D09               	goto	L14
  8370  1508                     l2972:	
  8371                           
  8372                           ;LCD5110.h: 237: else
  8373                           ;LCD5110.h: 238: PinSelect(_DIn, 0);
  8374  1508  01F0               	clrf	PinSelect@segState
  8375  1509                     L14:	
  8376  1509  1283               	bcf	3,5	;RP0=0, select bank0
  8377  150A  1303               	bcf	3,6	;RP1=0, select bank0
  8378  150B  0860               	movf	__DIn,w
  8379  150C  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8380                           
  8381                           ;LCD5110.h: 239: PinSelect(_Clk, 1);
  8382  1511  01F0               	clrf	PinSelect@segState
  8383  1512  0AF0               	incf	PinSelect@segState,f
  8384  1513  1283               	bcf	3,5	;RP0=0, select bank0
  8385  1514  1303               	bcf	3,6	;RP1=0, select bank0
  8386  1515  085E               	movf	__Clk,w
  8387  1516  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8388                           
  8389                           ;LCD5110.h: 240: _data = _data << 1;
  8390  151B  0876               	movf	LCD5110_internalWrite@_data,w
  8391  151C  00F3               	movwf	??_LCD5110_internalWrite
  8392  151D  0773               	addwf	??_LCD5110_internalWrite,w
  8393  151E  00F4               	movwf	??_LCD5110_internalWrite+1
  8394  151F  0874               	movf	??_LCD5110_internalWrite+1,w
  8395  1520  00F6               	movwf	LCD5110_internalWrite@_data
  8396                           
  8397                           ;LCD5110.h: 241: PinSelect(_Clk, 0);
  8398  1521  01F0               	clrf	PinSelect@segState
  8399  1522  1283               	bcf	3,5	;RP0=0, select bank0
  8400  1523  1303               	bcf	3,6	;RP1=0, select bank0
  8401  1524  085E               	movf	__Clk,w
  8402  1525  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8403  152A  3001               	movlw	1
  8404  152B  00F3               	movwf	??_LCD5110_internalWrite
  8405  152C  0873               	movf	??_LCD5110_internalWrite,w
  8406  152D  07F7               	addwf	LCD5110_internalWrite@i,f
  8407  152E  3008               	movlw	8
  8408  152F  0277               	subwf	LCD5110_internalWrite@i,w
  8409  1530  1C03               	skipc
  8410  1531  2CFA               	goto	l2966
  8411  1532                     l2980:	
  8412                           
  8413                           ;LCD5110.h: 242: }
  8414                           ;LCD5110.h: 244: PinSelect(_CE, 1);
  8415  1532  01F0               	clrf	PinSelect@segState
  8416  1533  0AF0               	incf	PinSelect@segState,f
  8417  1534  1283               	bcf	3,5	;RP0=0, select bank0
  8418  1535  1303               	bcf	3,6	;RP1=0, select bank0
  8419  1536  085D               	movf	__CE,w
  8420  1537  120A  158A  22B9   	fcall	_PinSelect
  8421  153A  0008               	return
  8422  153B                     __end_of_LCD5110_internalWrite:	
  8423                           
  8424                           	psect	text35
  8425  1397                     __ptext35:	
  8426 ;; *************** function _LCD5110_settings *****************
  8427 ;; Defined at:
  8428 ;;		line 370 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/LCD5110.h"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  Clk             1    wreg     unsigned char 
  8431 ;;  DIn             1    2[COMMON] unsigned char 
  8432 ;;  DC              1    3[COMMON] unsigned char 
  8433 ;;  CE              1    4[COMMON] unsigned char 
  8434 ;;  Rset            1    5[COMMON] unsigned char 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;  Clk             1    7[COMMON] unsigned char 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8446 ;;      Params:         4       0       0       0       0
  8447 ;;      Locals:         1       0       0       0       0
  8448 ;;      Temps:          1       0       0       0       0
  8449 ;;      Totals:         6       0       0       0       0
  8450 ;;Total ram usage:        6 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    1
  8453 ;; This function calls:
  8454 ;;		_PinSelect
  8455 ;;		_pinMode
  8456 ;; This function is called by:
  8457 ;;		_LCD5110_setting
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           
  8462                           ;psect for function _LCD5110_settings
  8463  1397                     _LCD5110_settings:	
  8464                           
  8465                           ;incstack = 0
  8466                           ; Regs used in _LCD5110_settings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8467                           ;LCD5110_settings@Clk stored from wreg
  8468  1397  00F7               	movwf	LCD5110_settings@Clk
  8469                           
  8470                           ;LCD5110.h: 371: pinMode(Clk, 0);
  8471  1398  01F0               	clrf	pinMode@stater
  8472  1399  0877               	movf	LCD5110_settings@Clk,w
  8473  139A  120A  118A  201D  160A  118A  	fcall	_pinMode
  8474                           
  8475                           ;LCD5110.h: 372: pinMode(DIn, 0);
  8476  139F  01F0               	clrf	pinMode@stater
  8477  13A0  0872               	movf	LCD5110_settings@DIn,w
  8478  13A1  120A  118A  201D  160A  118A  	fcall	_pinMode
  8479                           
  8480                           ;LCD5110.h: 373: pinMode(DC, 0);
  8481  13A6  01F0               	clrf	pinMode@stater
  8482  13A7  0873               	movf	LCD5110_settings@DC,w
  8483  13A8  120A  118A  201D  160A  118A  	fcall	_pinMode
  8484                           
  8485                           ;LCD5110.h: 374: pinMode(CE, 0);
  8486  13AD  01F0               	clrf	pinMode@stater
  8487  13AE  0874               	movf	LCD5110_settings@CE,w
  8488  13AF  120A  118A  201D  160A  118A  	fcall	_pinMode
  8489                           
  8490                           ;LCD5110.h: 375: pinMode(Rset, 0);
  8491  13B4  01F0               	clrf	pinMode@stater
  8492  13B5  0875               	movf	LCD5110_settings@Rset,w
  8493  13B6  120A  118A  201D  160A  118A  	fcall	_pinMode
  8494                           
  8495                           ;LCD5110.h: 377: PinSelect(Rset, 0);
  8496  13BB  01F0               	clrf	PinSelect@segState
  8497  13BC  0875               	movf	LCD5110_settings@Rset,w
  8498  13BD  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8499                           
  8500                           ;LCD5110.h: 378: PinSelect(Rset, 1);
  8501  13C2  01F0               	clrf	PinSelect@segState
  8502  13C3  0AF0               	incf	PinSelect@segState,f
  8503  13C4  0875               	movf	LCD5110_settings@Rset,w
  8504  13C5  120A  158A  22B9   	fcall	_PinSelect
  8505                           
  8506                           ;LCD5110.h: 380: _Clk = Clk; _DIn = DIn; _DC = DC; _CE = CE; _Rset = Rset;
  8507  13C8  0877               	movf	LCD5110_settings@Clk,w
  8508  13C9  00F6               	movwf	??_LCD5110_settings
  8509  13CA  0876               	movf	??_LCD5110_settings,w
  8510  13CB  1283               	bcf	3,5	;RP0=0, select bank0
  8511  13CC  1303               	bcf	3,6	;RP1=0, select bank0
  8512  13CD  00DE               	movwf	__Clk
  8513  13CE  0872               	movf	LCD5110_settings@DIn,w
  8514  13CF  00F6               	movwf	??_LCD5110_settings
  8515  13D0  0876               	movf	??_LCD5110_settings,w
  8516  13D1  00E0               	movwf	__DIn
  8517  13D2  0873               	movf	LCD5110_settings@DC,w
  8518  13D3  00F6               	movwf	??_LCD5110_settings
  8519  13D4  0876               	movf	??_LCD5110_settings,w
  8520  13D5  00DF               	movwf	__DC
  8521  13D6  0874               	movf	LCD5110_settings@CE,w
  8522  13D7  00F6               	movwf	??_LCD5110_settings
  8523  13D8  0876               	movf	??_LCD5110_settings,w
  8524  13D9  00DD               	movwf	__CE
  8525  13DA  0875               	movf	LCD5110_settings@Rset,w
  8526  13DB  00F6               	movwf	??_LCD5110_settings
  8527  13DC  0876               	movf	??_LCD5110_settings,w
  8528  13DD  00E1               	movwf	__Rset
  8529  13DE  0008               	return
  8530  13DF                     __end_of_LCD5110_settings:	
  8531                           
  8532                           	psect	text36
  8533  0913                     __ptext36:	
  8534 ;; *************** function _KeypadSetting *****************
  8535 ;; Defined at:
  8536 ;;		line 78 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Keypad.h"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  InputType       1    wreg     unsigned char 
  8539 ;;  KRowPinsA       1    2[COMMON] PTR unsigned char 
  8540 ;;		 -> main@RowPins(4), 
  8541 ;;  KColPinsA       1    3[COMMON] PTR unsigned char 
  8542 ;;		 -> main@ColumnsPins(3), 
  8543 ;;  KRowss          1    4[COMMON] unsigned char 
  8544 ;;  KColss          1    5[COMMON] unsigned char 
  8545 ;;  KMapA           1    6[COMMON] PTR unsigned char 
  8546 ;;		 -> main@KeypadCharacters(12), 
  8547 ;;  indicatorPin    1    7[COMMON] unsigned char 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  InputType       1   11[COMMON] unsigned char 
  8550 ;;  KeyLoad         1   12[COMMON] unsigned char 
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8560 ;;      Params:         6       0       0       0       0
  8561 ;;      Locals:         2       0       0       0       0
  8562 ;;      Temps:          3       0       0       0       0
  8563 ;;      Totals:        11       0       0       0       0
  8564 ;;Total ram usage:       11 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:    1
  8567 ;; This function calls:
  8568 ;;		_pinMode
  8569 ;; This function is called by:
  8570 ;;		_main
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function _KeypadSetting
  8576  0913                     _KeypadSetting:	
  8577                           
  8578                           ;incstack = 0
  8579                           ; Regs used in _KeypadSetting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8580                           ;KeypadSetting@InputType stored from wreg
  8581  0913  00FB               	movwf	KeypadSetting@InputType
  8582                           
  8583                           ;Keypad.h: 80: char KeyLoad;
  8584                           ;Keypad.h: 81: KIT = InputType;
  8585  0914  087B               	movf	KeypadSetting@InputType,w
  8586  0915  00F8               	movwf	??_KeypadSetting
  8587  0916  0878               	movf	??_KeypadSetting,w
  8588  0917  1283               	bcf	3,5	;RP0=0, select bank0
  8589  0918  1303               	bcf	3,6	;RP1=0, select bank0
  8590  0919  00D7               	movwf	_KIT
  8591                           
  8592                           ;Keypad.h: 82: KRows = KRowss;
  8593  091A  0874               	movf	KeypadSetting@KRowss,w
  8594  091B  00F8               	movwf	??_KeypadSetting
  8595  091C  0878               	movf	??_KeypadSetting,w
  8596  091D  00DA               	movwf	_KRows
  8597                           
  8598                           ;Keypad.h: 83: KCols = KColss;
  8599  091E  0875               	movf	KeypadSetting@KColss,w
  8600  091F  00F8               	movwf	??_KeypadSetting
  8601  0920  0878               	movf	??_KeypadSetting,w
  8602  0921  00D6               	movwf	_KCols
  8603                           
  8604                           ;Keypad.h: 84: KRowPins = KRowPinsA;
  8605  0922  0872               	movf	KeypadSetting@KRowPinsA,w
  8606  0923  00F8               	movwf	??_KeypadSetting
  8607  0924  0878               	movf	??_KeypadSetting,w
  8608  0925  00D9               	movwf	_KRowPins
  8609                           
  8610                           ;Keypad.h: 85: KColPins = KColPinsA;
  8611  0926  0873               	movf	KeypadSetting@KColPinsA,w
  8612  0927  00F8               	movwf	??_KeypadSetting
  8613  0928  0878               	movf	??_KeypadSetting,w
  8614  0929  00D5               	movwf	_KColPins
  8615                           
  8616                           ;Keypad.h: 86: KMap = KMapA;
  8617  092A  0876               	movf	KeypadSetting@KMapA,w
  8618  092B  00F8               	movwf	??_KeypadSetting
  8619  092C  0878               	movf	??_KeypadSetting,w
  8620  092D  00D8               	movwf	_KMap
  8621                           
  8622                           ;Keypad.h: 87: Indicator = indicatorPin;
  8623  092E  0877               	movf	KeypadSetting@indicatorPin,w
  8624  092F  00F8               	movwf	??_KeypadSetting
  8625  0930  0878               	movf	??_KeypadSetting,w
  8626  0931  00D4               	movwf	_Indicator
  8627                           
  8628                           ;Keypad.h: 89: for(KeyLoad=0; KeyLoad<KRowss; KeyLoad++) KRowPins[KeyLoad] = KRowPinsA[K
      +                          eyLoad];
  8629  0932  01FC               	clrf	KeypadSetting@KeyLoad
  8630  0933                     l3954:	
  8631  0933  0874               	movf	KeypadSetting@KRowss,w
  8632  0934  027C               	subwf	KeypadSetting@KeyLoad,w
  8633  0935  1803               	btfsc	3,0
  8634  0936  294B               	goto	l3956
  8635  0937  087C               	movf	KeypadSetting@KeyLoad,w
  8636  0938  0772               	addwf	KeypadSetting@KRowPinsA,w
  8637  0939  00F8               	movwf	??_KeypadSetting
  8638  093A  0878               	movf	??_KeypadSetting,w
  8639  093B  0084               	movwf	4
  8640  093C  1383               	bcf	3,7	;select IRP bank0
  8641  093D  0800               	movf	0,w
  8642  093E  00F9               	movwf	??_KeypadSetting+1
  8643  093F  087C               	movf	KeypadSetting@KeyLoad,w
  8644  0940  0759               	addwf	_KRowPins,w
  8645  0941  00FA               	movwf	??_KeypadSetting+2
  8646  0942  087A               	movf	??_KeypadSetting+2,w
  8647  0943  0084               	movwf	4
  8648  0944  0879               	movf	??_KeypadSetting+1,w
  8649  0945  0080               	movwf	0
  8650  0946  3001               	movlw	1
  8651  0947  00F8               	movwf	??_KeypadSetting
  8652  0948  0878               	movf	??_KeypadSetting,w
  8653  0949  07FC               	addwf	KeypadSetting@KeyLoad,f
  8654  094A  2933               	goto	l3954
  8655  094B                     l3956:	
  8656                           
  8657                           ;Keypad.h: 90: for(KeyLoad=0; KeyLoad<KColss; KeyLoad++) KColPins[KeyLoad] = KColPinsA[K
      +                          eyLoad];
  8658  094B  01FC               	clrf	KeypadSetting@KeyLoad
  8659  094C                     l3962:	
  8660  094C  0875               	movf	KeypadSetting@KColss,w
  8661  094D  027C               	subwf	KeypadSetting@KeyLoad,w
  8662  094E  1803               	btfsc	3,0
  8663  094F  2964               	goto	l3964
  8664  0950  087C               	movf	KeypadSetting@KeyLoad,w
  8665  0951  0773               	addwf	KeypadSetting@KColPinsA,w
  8666  0952  00F8               	movwf	??_KeypadSetting
  8667  0953  0878               	movf	??_KeypadSetting,w
  8668  0954  0084               	movwf	4
  8669  0955  1383               	bcf	3,7	;select IRP bank0
  8670  0956  0800               	movf	0,w
  8671  0957  00F9               	movwf	??_KeypadSetting+1
  8672  0958  087C               	movf	KeypadSetting@KeyLoad,w
  8673  0959  0755               	addwf	_KColPins,w
  8674  095A  00FA               	movwf	??_KeypadSetting+2
  8675  095B  087A               	movf	??_KeypadSetting+2,w
  8676  095C  0084               	movwf	4
  8677  095D  0879               	movf	??_KeypadSetting+1,w
  8678  095E  0080               	movwf	0
  8679  095F  3001               	movlw	1
  8680  0960  00F8               	movwf	??_KeypadSetting
  8681  0961  0878               	movf	??_KeypadSetting,w
  8682  0962  07FC               	addwf	KeypadSetting@KeyLoad,f
  8683  0963  294C               	goto	l3962
  8684  0964                     l3964:	
  8685                           
  8686                           ;Keypad.h: 92: if(KIT==0 || KIT==1 )
  8687  0964  0857               	movf	_KIT,w
  8688  0965  1D03               	btfss	3,2
  8689  0966  0357               	decf	_KIT,w
  8690  0967  1D03               	btfss	3,2
  8691  0968  299C               	goto	l3984
  8692                           
  8693                           ;Keypad.h: 93: {
  8694                           ;Keypad.h: 94: for(KeyLoad=0; KeyLoad<KRowss; KeyLoad++) pinMode(KRowPins[KeyLoad], 0);
  8695  0969  01FC               	clrf	KeypadSetting@KeyLoad
  8696  096A                     l3974:	
  8697  096A  0874               	movf	KeypadSetting@KRowss,w
  8698  096B  027C               	subwf	KeypadSetting@KeyLoad,w
  8699  096C  1803               	btfsc	3,0
  8700  096D  2982               	goto	l3976
  8701  096E  01F0               	clrf	pinMode@stater
  8702  096F  087C               	movf	KeypadSetting@KeyLoad,w
  8703  0970  1283               	bcf	3,5	;RP0=0, select bank0
  8704  0971  1303               	bcf	3,6	;RP1=0, select bank0
  8705  0972  0759               	addwf	_KRowPins,w
  8706  0973  00F8               	movwf	??_KeypadSetting
  8707  0974  0878               	movf	??_KeypadSetting,w
  8708  0975  0084               	movwf	4
  8709  0976  1383               	bcf	3,7	;select IRP bank0
  8710  0977  0800               	movf	0,w
  8711  0978  120A  118A  201D  120A  158A  	fcall	_pinMode
  8712  097D  3001               	movlw	1
  8713  097E  00F8               	movwf	??_KeypadSetting
  8714  097F  0878               	movf	??_KeypadSetting,w
  8715  0980  07FC               	addwf	KeypadSetting@KeyLoad,f
  8716  0981  296A               	goto	l3974
  8717  0982                     l3976:	
  8718                           
  8719                           ;Keypad.h: 95: for(KeyLoad=0; KeyLoad<KColss; KeyLoad++) pinMode(KColPins[KeyLoad], 1);
  8720  0982  01FC               	clrf	KeypadSetting@KeyLoad
  8721  0983                     l3982:	
  8722  0983  0875               	movf	KeypadSetting@KColss,w
  8723  0984  027C               	subwf	KeypadSetting@KeyLoad,w
  8724  0985  1803               	btfsc	3,0
  8725  0986  299C               	goto	l3984
  8726  0987  01F0               	clrf	pinMode@stater
  8727  0988  0AF0               	incf	pinMode@stater,f
  8728  0989  087C               	movf	KeypadSetting@KeyLoad,w
  8729  098A  1283               	bcf	3,5	;RP0=0, select bank0
  8730  098B  1303               	bcf	3,6	;RP1=0, select bank0
  8731  098C  0755               	addwf	_KColPins,w
  8732  098D  00F8               	movwf	??_KeypadSetting
  8733  098E  0878               	movf	??_KeypadSetting,w
  8734  098F  0084               	movwf	4
  8735  0990  1383               	bcf	3,7	;select IRP bank0
  8736  0991  0800               	movf	0,w
  8737  0992  120A  118A  201D  120A  158A  	fcall	_pinMode
  8738  0997  3001               	movlw	1
  8739  0998  00F8               	movwf	??_KeypadSetting
  8740  0999  0878               	movf	??_KeypadSetting,w
  8741  099A  07FC               	addwf	KeypadSetting@KeyLoad,f
  8742  099B  2983               	goto	l3982
  8743  099C                     l3984:	
  8744                           
  8745                           ;Keypad.h: 96: }
  8746                           ;Keypad.h: 97: if(KIT==2 || KIT==3)
  8747  099C  3002               	movlw	2
  8748  099D  1283               	bcf	3,5	;RP0=0, select bank0
  8749  099E  1303               	bcf	3,6	;RP1=0, select bank0
  8750  099F  0657               	xorwf	_KIT,w
  8751  09A0  1903               	btfsc	3,2
  8752  09A1  29A6               	goto	l3988
  8753  09A2  3003               	movlw	3
  8754  09A3  0657               	xorwf	_KIT,w
  8755  09A4  1D03               	btfss	3,2
  8756  09A5  29D9               	goto	l4004
  8757  09A6                     l3988:	
  8758                           
  8759                           ;Keypad.h: 98: {
  8760                           ;Keypad.h: 99: for(KeyLoad=0; KeyLoad<KRowss; KeyLoad++) pinMode(KRowPins[KeyLoad], 1);
  8761  09A6  01FC               	clrf	KeypadSetting@KeyLoad
  8762  09A7                     l3994:	
  8763  09A7  0874               	movf	KeypadSetting@KRowss,w
  8764  09A8  027C               	subwf	KeypadSetting@KeyLoad,w
  8765  09A9  1803               	btfsc	3,0
  8766  09AA  29C0               	goto	l3996
  8767  09AB  01F0               	clrf	pinMode@stater
  8768  09AC  0AF0               	incf	pinMode@stater,f
  8769  09AD  087C               	movf	KeypadSetting@KeyLoad,w
  8770  09AE  1283               	bcf	3,5	;RP0=0, select bank0
  8771  09AF  1303               	bcf	3,6	;RP1=0, select bank0
  8772  09B0  0759               	addwf	_KRowPins,w
  8773  09B1  00F8               	movwf	??_KeypadSetting
  8774  09B2  0878               	movf	??_KeypadSetting,w
  8775  09B3  0084               	movwf	4
  8776  09B4  1383               	bcf	3,7	;select IRP bank0
  8777  09B5  0800               	movf	0,w
  8778  09B6  120A  118A  201D  120A  158A  	fcall	_pinMode
  8779  09BB  3001               	movlw	1
  8780  09BC  00F8               	movwf	??_KeypadSetting
  8781  09BD  0878               	movf	??_KeypadSetting,w
  8782  09BE  07FC               	addwf	KeypadSetting@KeyLoad,f
  8783  09BF  29A7               	goto	l3994
  8784  09C0                     l3996:	
  8785                           
  8786                           ;Keypad.h: 100: for(KeyLoad=0; KeyLoad<KColss; KeyLoad++) pinMode(KColPins[KeyLoad], 0);
  8787  09C0  01FC               	clrf	KeypadSetting@KeyLoad
  8788  09C1                     l4002:	
  8789  09C1  0875               	movf	KeypadSetting@KColss,w
  8790  09C2  027C               	subwf	KeypadSetting@KeyLoad,w
  8791  09C3  1803               	btfsc	3,0
  8792  09C4  29D9               	goto	l4004
  8793  09C5  01F0               	clrf	pinMode@stater
  8794  09C6  087C               	movf	KeypadSetting@KeyLoad,w
  8795  09C7  1283               	bcf	3,5	;RP0=0, select bank0
  8796  09C8  1303               	bcf	3,6	;RP1=0, select bank0
  8797  09C9  0755               	addwf	_KColPins,w
  8798  09CA  00F8               	movwf	??_KeypadSetting
  8799  09CB  0878               	movf	??_KeypadSetting,w
  8800  09CC  0084               	movwf	4
  8801  09CD  1383               	bcf	3,7	;select IRP bank0
  8802  09CE  0800               	movf	0,w
  8803  09CF  120A  118A  201D  120A  158A  	fcall	_pinMode
  8804  09D4  3001               	movlw	1
  8805  09D5  00F8               	movwf	??_KeypadSetting
  8806  09D6  0878               	movf	??_KeypadSetting,w
  8807  09D7  07FC               	addwf	KeypadSetting@KeyLoad,f
  8808  09D8  29C1               	goto	l4002
  8809  09D9                     l4004:	
  8810                           
  8811                           ;Keypad.h: 101: }
  8812                           ;Keypad.h: 103: if(indicatorPin) pinMode(indicatorPin, 0);
  8813  09D9  0877               	movf	KeypadSetting@indicatorPin,w
  8814  09DA  1903               	btfsc	3,2
  8815  09DB  0008               	return
  8816  09DC  01F0               	clrf	pinMode@stater
  8817  09DD  0877               	movf	KeypadSetting@indicatorPin,w
  8818  09DE  120A  118A  201D   	fcall	_pinMode
  8819  09E1  0008               	return
  8820  09E2                     __end_of_KeypadSetting:	
  8821                           
  8822                           	psect	text37
  8823  142A                     __ptext37:	
  8824 ;; *************** function _DS1302_init *****************
  8825 ;; Defined at:
  8826 ;;		line 171 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  CLK             1    wreg     unsigned char 
  8829 ;;  DAT             1   10[COMMON] unsigned char 
  8830 ;;  CE              1   11[COMMON] unsigned char 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  CLK             1    0[BANK0 ] unsigned char 
  8833 ;;  x               1    1[BANK0 ] unsigned char 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8843 ;;      Params:         2       0       0       0       0
  8844 ;;      Locals:         0       2       0       0       0
  8845 ;;      Temps:          1       0       0       0       0
  8846 ;;      Totals:         3       2       0       0       0
  8847 ;;Total ram usage:        5 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    4
  8850 ;; This function calls:
  8851 ;;		_DS1302_read
  8852 ;;		_DS1302_write
  8853 ;;		_PinSelect
  8854 ;;		_pinMode
  8855 ;; This function is called by:
  8856 ;;		_main
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function _DS1302_init
  8862  142A                     _DS1302_init:	
  8863                           
  8864                           ;incstack = 0
  8865                           ; Regs used in _DS1302_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8866                           ;DS1302_init@CLK stored from wreg
  8867  142A  1283               	bcf	3,5	;RP0=0, select bank0
  8868  142B  1303               	bcf	3,6	;RP1=0, select bank0
  8869  142C  00A0               	movwf	DS1302_init@CLK
  8870                           
  8871                           ;Ds1302.h: 172: Clock = CLK;
  8872  142D  0820               	movf	DS1302_init@CLK,w
  8873  142E  00FC               	movwf	??_DS1302_init
  8874  142F  087C               	movf	??_DS1302_init,w
  8875  1430  00D2               	movwf	_Clock
  8876                           
  8877                           ;Ds1302.h: 173: Data = DAT;
  8878  1431  087A               	movf	DS1302_init@DAT,w
  8879  1432  00FC               	movwf	??_DS1302_init
  8880  1433  087C               	movf	??_DS1302_init,w
  8881  1434  00D3               	movwf	_Data
  8882                           
  8883                           ;Ds1302.h: 174: RST = CE;
  8884  1435  087B               	movf	DS1302_init@CE,w
  8885  1436  00FC               	movwf	??_DS1302_init
  8886  1437  087C               	movf	??_DS1302_init,w
  8887  1438  00DC               	movwf	_RST
  8888                           
  8889                           ;Ds1302.h: 175: char x;
  8890                           ;Ds1302.h: 176: pinMode(Clock,0);
  8891  1439  01F0               	clrf	pinMode@stater
  8892  143A  0852               	movf	_Clock,w
  8893  143B  120A  118A  201D  160A  118A  	fcall	_pinMode
  8894                           
  8895                           ;Ds1302.h: 177: pinMode(RST,0);
  8896  1440  01F0               	clrf	pinMode@stater
  8897  1441  1283               	bcf	3,5	;RP0=0, select bank0
  8898  1442  1303               	bcf	3,6	;RP1=0, select bank0
  8899  1443  085C               	movf	_RST,w
  8900  1444  120A  118A  201D  160A  118A  	fcall	_pinMode
  8901                           
  8902                           ;Ds1302.h: 178: PinSelect(Clock, 0);
  8903  1449  01F0               	clrf	PinSelect@segState
  8904  144A  1283               	bcf	3,5	;RP0=0, select bank0
  8905  144B  1303               	bcf	3,6	;RP1=0, select bank0
  8906  144C  0852               	movf	_Clock,w
  8907  144D  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8908                           
  8909                           ;Ds1302.h: 179: PinSelect(RST,0);
  8910  1452  01F0               	clrf	PinSelect@segState
  8911  1453  1283               	bcf	3,5	;RP0=0, select bank0
  8912  1454  1303               	bcf	3,6	;RP1=0, select bank0
  8913  1455  085C               	movf	_RST,w
  8914  1456  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  8915                           
  8916                           ;Ds1302.h: 186: DS1302_write(0x8E,0);
  8917  145B  01F7               	clrf	DS1302_write@data
  8918  145C  308E               	movlw	142
  8919  145D  160A  158A  2694  160A  118A  	fcall	_DS1302_write
  8920                           
  8921                           ;Ds1302.h: 190: DS1302_write(0x90,0xA5);
  8922  1462  30A5               	movlw	165
  8923  1463  00FC               	movwf	??_DS1302_init
  8924  1464  087C               	movf	??_DS1302_init,w
  8925  1465  00F7               	movwf	DS1302_write@data
  8926  1466  3090               	movlw	144
  8927  1467  160A  158A  2694  160A  118A  	fcall	_DS1302_write
  8928                           
  8929                           ;Ds1302.h: 192: x = DS1302_read(0x81);
  8930  146C  3081               	movlw	129
  8931  146D  160A  118A  2299  160A  118A  	fcall	_DS1302_read
  8932  1472  00FC               	movwf	??_DS1302_init
  8933  1473  087C               	movf	??_DS1302_init,w
  8934  1474  1283               	bcf	3,5	;RP0=0, select bank0
  8935  1475  1303               	bcf	3,6	;RP1=0, select bank0
  8936  1476  00A1               	movwf	DS1302_init@x
  8937                           
  8938                           ;Ds1302.h: 193: if((x & 0x80)!=0){
  8939  1477  1FA1               	btfss	DS1302_init@x,7
  8940  1478  0008               	return
  8941                           
  8942                           ;Ds1302.h: 194: DS1302_write(0x80,0);
  8943  1479  01F7               	clrf	DS1302_write@data
  8944  147A  3080               	movlw	128
  8945  147B  160A  158A  2694   	fcall	_DS1302_write
  8946  147E  0008               	return
  8947  147F                     __end_of_DS1302_init:	
  8948                           
  8949                           	psect	text38
  8950  1E94                     __ptext38:	
  8951 ;; *************** function _DS1302_write *****************
  8952 ;; Defined at:
  8953 ;;		line 224 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  cmd             1    wreg     unsigned char 
  8956 ;;  data            1    7[COMMON] unsigned char 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  cmd             1    8[COMMON] unsigned char 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      void 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8968 ;;      Params:         1       0       0       0       0
  8969 ;;      Locals:         1       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0
  8971 ;;      Totals:         2       0       0       0       0
  8972 ;;Total ram usage:        2 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:    3
  8975 ;; This function calls:
  8976 ;;		_PinSelect
  8977 ;;		_Write_ds1302_byte
  8978 ;; This function is called by:
  8979 ;;		_DS1302_init
  8980 ;;		_RAM_write
  8981 ;;		_Time_write
  8982 ;;		_DateTime_write
  8983 ;;		_Date_write
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function _DS1302_write
  8989  1E94                     _DS1302_write:	
  8990                           
  8991                           ;incstack = 0
  8992                           ; Regs used in _DS1302_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8993                           ;DS1302_write@cmd stored from wreg
  8994  1E94  00F8               	movwf	DS1302_write@cmd
  8995                           
  8996                           ;Ds1302.h: 225: PinSelect(RST,1);
  8997  1E95  01F0               	clrf	PinSelect@segState
  8998  1E96  0AF0               	incf	PinSelect@segState,f
  8999  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  9000  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  9001  1E99  085C               	movf	_RST,w
  9002  1E9A  120A  158A  22B9  160A  158A  	fcall	_PinSelect
  9003                           
  9004                           ;Ds1302.h: 226: Write_ds1302_byte(cmd);
  9005  1E9F  0878               	movf	DS1302_write@cmd,w
  9006  1EA0  160A  118A  21EB  160A  158A  	fcall	_Write_ds1302_byte
  9007                           
  9008                           ;Ds1302.h: 227: Write_ds1302_byte(data);
  9009  1EA5  0877               	movf	DS1302_write@data,w
  9010  1EA6  160A  118A  21EB  160A  158A  	fcall	_Write_ds1302_byte
  9011                           
  9012                           ;Ds1302.h: 228: PinSelect(RST,0);
  9013  1EAB  01F0               	clrf	PinSelect@segState
  9014  1EAC  1283               	bcf	3,5	;RP0=0, select bank0
  9015  1EAD  1303               	bcf	3,6	;RP1=0, select bank0
  9016  1EAE  085C               	movf	_RST,w
  9017  1EAF  120A  158A  22B9  160A  158A  	fcall	_PinSelect
  9018                           
  9019                           ;Ds1302.h: 229: PinSelect(Clock, 0);
  9020  1EB4  01F0               	clrf	PinSelect@segState
  9021  1EB5  1283               	bcf	3,5	;RP0=0, select bank0
  9022  1EB6  1303               	bcf	3,6	;RP1=0, select bank0
  9023  1EB7  0852               	movf	_Clock,w
  9024  1EB8  120A  158A  22B9   	fcall	_PinSelect
  9025  1EBB  0008               	return
  9026  1EBC                     __end_of_DS1302_write:	
  9027                           
  9028                           	psect	text39
  9029  1299                     __ptext39:	
  9030 ;; *************** function _DS1302_read *****************
  9031 ;; Defined at:
  9032 ;;		line 200 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  cmd             1    wreg     unsigned char 
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  cmd             1    8[COMMON] unsigned char 
  9037 ;;  dataRead        1    9[COMMON] unsigned char 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  1    wreg      unsigned char 
  9040 ;; Registers used:
  9041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9047 ;;      Params:         0       0       0       0       0
  9048 ;;      Locals:         2       0       0       0       0
  9049 ;;      Temps:          1       0       0       0       0
  9050 ;;      Totals:         3       0       0       0       0
  9051 ;;Total ram usage:        3 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    3
  9054 ;; This function calls:
  9055 ;;		_PinSelect
  9056 ;;		_Write_ds1302_byte
  9057 ;;		_pinMode
  9058 ;;		_shift_in_byte
  9059 ;; This function is called by:
  9060 ;;		_DS1302_init
  9061 ;;		_RAM_read
  9062 ;;		_Time_read
  9063 ;;		_Date_read
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           
  9068                           ;psect for function _DS1302_read
  9069  1299                     _DS1302_read:	
  9070                           
  9071                           ;incstack = 0
  9072                           ; Regs used in _DS1302_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9073                           ;DS1302_read@cmd stored from wreg
  9074  1299  00F8               	movwf	DS1302_read@cmd
  9075                           
  9076                           ;Ds1302.h: 201: pinMode(Data,1);
  9077  129A  01F0               	clrf	pinMode@stater
  9078  129B  0AF0               	incf	pinMode@stater,f
  9079  129C  1283               	bcf	3,5	;RP0=0, select bank0
  9080  129D  1303               	bcf	3,6	;RP1=0, select bank0
  9081  129E  0853               	movf	_Data,w
  9082  129F  120A  118A  201D  160A  118A  	fcall	_pinMode
  9083                           
  9084                           ;Ds1302.h: 202: char dataRead=0x00;
  9085  12A4  01F9               	clrf	DS1302_read@dataRead
  9086                           
  9087                           ;Ds1302.h: 203: PinSelect(RST,1);
  9088  12A5  01F0               	clrf	PinSelect@segState
  9089  12A6  0AF0               	incf	PinSelect@segState,f
  9090  12A7  1283               	bcf	3,5	;RP0=0, select bank0
  9091  12A8  1303               	bcf	3,6	;RP1=0, select bank0
  9092  12A9  085C               	movf	_RST,w
  9093  12AA  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  9094                           
  9095                           ;Ds1302.h: 204: Write_ds1302_byte(cmd);
  9096  12AF  0878               	movf	DS1302_read@cmd,w
  9097  12B0  160A  118A  21EB  160A  118A  	fcall	_Write_ds1302_byte
  9098                           
  9099                           ;Ds1302.h: 205: dataRead = shift_in_byte();
  9100  12B5  160A  118A  234F  160A  118A  	fcall	_shift_in_byte
  9101  12BA  00F7               	movwf	??_DS1302_read
  9102  12BB  0877               	movf	??_DS1302_read,w
  9103  12BC  00F9               	movwf	DS1302_read@dataRead
  9104                           
  9105                           ;Ds1302.h: 206: pinMode(Data,0);
  9106  12BD  01F0               	clrf	pinMode@stater
  9107  12BE  1283               	bcf	3,5	;RP0=0, select bank0
  9108  12BF  1303               	bcf	3,6	;RP1=0, select bank0
  9109  12C0  0853               	movf	_Data,w
  9110  12C1  120A  118A  201D  160A  118A  	fcall	_pinMode
  9111                           
  9112                           ;Ds1302.h: 207: PinSelect(RST,0);
  9113  12C6  01F0               	clrf	PinSelect@segState
  9114  12C7  1283               	bcf	3,5	;RP0=0, select bank0
  9115  12C8  1303               	bcf	3,6	;RP1=0, select bank0
  9116  12C9  085C               	movf	_RST,w
  9117  12CA  120A  158A  22B9   	fcall	_PinSelect
  9118                           
  9119                           ;Ds1302.h: 209: return dataRead;
  9120  12CD  0879               	movf	DS1302_read@dataRead,w
  9121  12CE  0008               	return
  9122  12CF                     __end_of_DS1302_read:	
  9123                           
  9124                           	psect	text40
  9125  134F                     __ptext40:	
  9126 ;; *************** function _shift_in_byte *****************
  9127 ;; Defined at:
  9128 ;;		line 250 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;		None
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;  i               1    5[COMMON] unsigned char 
  9133 ;;  data            1    6[COMMON] unsigned char 
  9134 ;;  temp            1    4[COMMON] unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      unsigned char 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9144 ;;      Params:         0       0       0       0       0
  9145 ;;      Locals:         3       0       0       0       0
  9146 ;;      Temps:          2       0       0       0       0
  9147 ;;      Totals:         5       0       0       0       0
  9148 ;;Total ram usage:        5 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    1
  9151 ;; This function calls:
  9152 ;;		_PinSelect
  9153 ;;		_readPin
  9154 ;; This function is called by:
  9155 ;;		_DS1302_read
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           
  9160                           ;psect for function _shift_in_byte
  9161  134F                     _shift_in_byte:	
  9162                           
  9163                           ;Ds1302.h: 251: char temp, data=0x00;
  9164                           
  9165                           ;incstack = 0
  9166                           ; Regs used in _shift_in_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9167  134F  01F6               	clrf	shift_in_byte@data
  9168                           
  9169                           ;Ds1302.h: 252: for(char i=1;i<=8;i++){
  9170  1350  01F5               	clrf	shift_in_byte@i
  9171  1351  0AF5               	incf	shift_in_byte@i,f
  9172  1352  3009               	movlw	9
  9173  1353  0275               	subwf	shift_in_byte@i,w
  9174  1354  1803               	btfsc	3,0
  9175  1355  2B95               	goto	l3378
  9176  1356                     l3362:	
  9177                           
  9178                           ;Ds1302.h: 253: temp = readPin(Data);
  9179  1356  1283               	bcf	3,5	;RP0=0, select bank0
  9180  1357  1303               	bcf	3,6	;RP1=0, select bank0
  9181  1358  0853               	movf	_Data,w
  9182  1359  120A  158A  205E  160A  118A  	fcall	_readPin
  9183  135E  00F2               	movwf	??_shift_in_byte
  9184  135F  0872               	movf	??_shift_in_byte,w
  9185  1360  00F4               	movwf	shift_in_byte@temp
  9186                           
  9187                           ;Ds1302.h: 254: temp= (temp<<7);
  9188  1361  0874               	movf	shift_in_byte@temp,w
  9189  1362  00F2               	movwf	??_shift_in_byte
  9190  1363  3006               	movlw	6
  9191  1364                     u2955:	
  9192  1364  1003               	clrc
  9193  1365  0DF2               	rlf	??_shift_in_byte,f
  9194  1366  3EFF               	addlw	-1
  9195  1367  1D03               	skipz
  9196  1368  2B64               	goto	u2955
  9197  1369  1003               	clrc
  9198  136A  0D72               	rlf	??_shift_in_byte,w
  9199  136B  00F3               	movwf	??_shift_in_byte+1
  9200  136C  0873               	movf	??_shift_in_byte+1,w
  9201  136D  00F4               	movwf	shift_in_byte@temp
  9202                           
  9203                           ;Ds1302.h: 255: data=(data>>1);
  9204  136E  0876               	movf	shift_in_byte@data,w
  9205  136F  00F2               	movwf	??_shift_in_byte
  9206  1370  1003               	clrc
  9207  1371  0C72               	rrf	??_shift_in_byte,w
  9208  1372  00F3               	movwf	??_shift_in_byte+1
  9209  1373  0873               	movf	??_shift_in_byte+1,w
  9210  1374  00F6               	movwf	shift_in_byte@data
  9211                           
  9212                           ;Ds1302.h: 256: data = (temp | data);
  9213  1375  0874               	movf	shift_in_byte@temp,w
  9214  1376  0476               	iorwf	shift_in_byte@data,w
  9215  1377  00F2               	movwf	??_shift_in_byte
  9216  1378  0872               	movf	??_shift_in_byte,w
  9217  1379  00F6               	movwf	shift_in_byte@data
  9218                           
  9219                           ;Ds1302.h: 257: PinSelect(Clock, 1);
  9220  137A  01F0               	clrf	PinSelect@segState
  9221  137B  0AF0               	incf	PinSelect@segState,f
  9222  137C  1283               	bcf	3,5	;RP0=0, select bank0
  9223  137D  1303               	bcf	3,6	;RP1=0, select bank0
  9224  137E  0852               	movf	_Clock,w
  9225  137F  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  9226                           
  9227                           ;Ds1302.h: 258: PinSelect(Clock, 0);
  9228  1384  01F0               	clrf	PinSelect@segState
  9229  1385  1283               	bcf	3,5	;RP0=0, select bank0
  9230  1386  1303               	bcf	3,6	;RP1=0, select bank0
  9231  1387  0852               	movf	_Clock,w
  9232  1388  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  9233  138D  3001               	movlw	1
  9234  138E  00F2               	movwf	??_shift_in_byte
  9235  138F  0872               	movf	??_shift_in_byte,w
  9236  1390  07F5               	addwf	shift_in_byte@i,f
  9237  1391  3009               	movlw	9
  9238  1392  0275               	subwf	shift_in_byte@i,w
  9239  1393  1C03               	skipc
  9240  1394  2B56               	goto	l3362
  9241  1395                     l3378:	
  9242                           
  9243                           ;Ds1302.h: 259: }
  9244                           ;Ds1302.h: 260: return data;
  9245  1395  0876               	movf	shift_in_byte@data,w
  9246  1396  0008               	return
  9247  1397                     __end_of_shift_in_byte:	
  9248                           
  9249                           	psect	text41
  9250  085E                     __ptext41:	
  9251 ;; *************** function _readPin *****************
  9252 ;; Defined at:
  9253 ;;		line 399 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/libr.h"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  stater          1    wreg     unsigned char 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  stater          1    0[COMMON] unsigned char 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      unsigned char 
  9260 ;; Registers used:
  9261 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9267 ;;      Params:         0       0       0       0       0
  9268 ;;      Locals:         1       0       0       0       0
  9269 ;;      Temps:          0       0       0       0       0
  9270 ;;      Totals:         1       0       0       0       0
  9271 ;;Total ram usage:        1 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; This function calls:
  9274 ;;		Nothing
  9275 ;; This function is called by:
  9276 ;;		_shift_in_byte
  9277 ;;		_getKey
  9278 ;; This function uses a non-reentrant model
  9279 ;;
  9280                           
  9281                           
  9282                           ;psect for function _readPin
  9283  085E                     _readPin:	
  9284                           
  9285                           ;incstack = 0
  9286                           ; Regs used in _readPin: [wreg-fsr0h+status,2+status,0]
  9287                           ;readPin@stater stored from wreg
  9288  085E  00F0               	movwf	readPin@stater
  9289                           
  9290                           ;libr.h: 400: switch (stater){
  9291  085F  28E0               	goto	l3232
  9292  0860                     l252:	
  9293                           ;libr.h: 401: case 1: if (RB0 == 1) return 1; else return 0;
  9294                           
  9295  0860  1283               	bcf	3,5	;RP0=0, select bank0
  9296  0861  1303               	bcf	3,6	;RP1=0, select bank0
  9297  0862  1C06               	btfss	6,0	;volatile
  9298  0863  2866               	goto	l3078
  9299  0864  3001               	movlw	1
  9300  0865  0008               	return
  9301  0866                     l3078:	
  9302  0866  3000               	movlw	0
  9303  0867  0008               	return
  9304  0868                     l256:	
  9305                           ;libr.h: 402: case 2: if (RB1 == 1) return 1; else return 0;
  9306                           
  9307  0868  1283               	bcf	3,5	;RP0=0, select bank0
  9308  0869  1303               	bcf	3,6	;RP1=0, select bank0
  9309  086A  1C86               	btfss	6,1	;volatile
  9310  086B  286E               	goto	l3088
  9311  086C  3001               	movlw	1
  9312  086D  0008               	return
  9313  086E                     l3088:	
  9314  086E  3000               	movlw	0
  9315  086F  0008               	return
  9316  0870                     l259:	
  9317                           ;libr.h: 403: case 3: if (RB2 == 1) return 1; else return 0;
  9318                           
  9319  0870  1283               	bcf	3,5	;RP0=0, select bank0
  9320  0871  1303               	bcf	3,6	;RP1=0, select bank0
  9321  0872  1D06               	btfss	6,2	;volatile
  9322  0873  2876               	goto	l3098
  9323  0874  3001               	movlw	1
  9324  0875  0008               	return
  9325  0876                     l3098:	
  9326  0876  3000               	movlw	0
  9327  0877  0008               	return
  9328  0878                     l262:	
  9329                           ;libr.h: 404: case 4: if (RB3 == 1) return 1; else return 0;
  9330                           
  9331  0878  1283               	bcf	3,5	;RP0=0, select bank0
  9332  0879  1303               	bcf	3,6	;RP1=0, select bank0
  9333  087A  1D86               	btfss	6,3	;volatile
  9334  087B  287E               	goto	l3108
  9335  087C  3001               	movlw	1
  9336  087D  0008               	return
  9337  087E                     l3108:	
  9338  087E  3000               	movlw	0
  9339  087F  0008               	return
  9340  0880                     l265:	
  9341                           ;libr.h: 405: case 5: if (RB4 == 1) return 1; else return 0;
  9342                           
  9343  0880  1283               	bcf	3,5	;RP0=0, select bank0
  9344  0881  1303               	bcf	3,6	;RP1=0, select bank0
  9345  0882  1E06               	btfss	6,4	;volatile
  9346  0883  2886               	goto	l3118
  9347  0884  3001               	movlw	1
  9348  0885  0008               	return
  9349  0886                     l3118:	
  9350  0886  3000               	movlw	0
  9351  0887  0008               	return
  9352  0888                     l268:	
  9353                           ;libr.h: 406: case 6: if (RB5 == 1) return 1; else return 0;
  9354                           
  9355  0888  1283               	bcf	3,5	;RP0=0, select bank0
  9356  0889  1303               	bcf	3,6	;RP1=0, select bank0
  9357  088A  1E86               	btfss	6,5	;volatile
  9358  088B  288E               	goto	l3128
  9359  088C  3001               	movlw	1
  9360  088D  0008               	return
  9361  088E                     l3128:	
  9362  088E  3000               	movlw	0
  9363  088F  0008               	return
  9364  0890                     l271:	
  9365                           ;libr.h: 407: case 7: if (RB6 == 1) return 1; else return 0;
  9366                           
  9367  0890  1283               	bcf	3,5	;RP0=0, select bank0
  9368  0891  1303               	bcf	3,6	;RP1=0, select bank0
  9369  0892  1F06               	btfss	6,6	;volatile
  9370  0893  2896               	goto	l3138
  9371  0894  3001               	movlw	1
  9372  0895  0008               	return
  9373  0896                     l3138:	
  9374  0896  3000               	movlw	0
  9375  0897  0008               	return
  9376  0898                     l274:	
  9377                           ;libr.h: 408: case 8: if (RB7 == 1) return 1; else return 0;
  9378                           
  9379  0898  1283               	bcf	3,5	;RP0=0, select bank0
  9380  0899  1303               	bcf	3,6	;RP1=0, select bank0
  9381  089A  1F86               	btfss	6,7	;volatile
  9382  089B  289E               	goto	l3148
  9383  089C  3001               	movlw	1
  9384  089D  0008               	return
  9385  089E                     l3148:	
  9386  089E  3000               	movlw	0
  9387  089F  0008               	return
  9388  08A0                     l277:	
  9389                           ;libr.h: 409: case 9: if (RD0 == 1) return 1; else return 0;
  9390                           
  9391  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  9392  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  9393  08A2  1C08               	btfss	8,0	;volatile
  9394  08A3  28A6               	goto	l3158
  9395  08A4  3001               	movlw	1
  9396  08A5  0008               	return
  9397  08A6                     l3158:	
  9398  08A6  3000               	movlw	0
  9399  08A7  0008               	return
  9400  08A8                     l280:	
  9401                           ;libr.h: 411: case 10: if (RD1 == 1) return 1; else return 0;
  9402                           
  9403  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  9404  08A9  1303               	bcf	3,6	;RP1=0, select bank0
  9405  08AA  1C88               	btfss	8,1	;volatile
  9406  08AB  28AE               	goto	l3168
  9407  08AC  3001               	movlw	1
  9408  08AD  0008               	return
  9409  08AE                     l3168:	
  9410  08AE  3000               	movlw	0
  9411  08AF  0008               	return
  9412  08B0                     l283:	
  9413                           ;libr.h: 412: case 11: if (RD2 == 1) return 1; else return 0;
  9414                           
  9415  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  9416  08B1  1303               	bcf	3,6	;RP1=0, select bank0
  9417  08B2  1D08               	btfss	8,2	;volatile
  9418  08B3  28B6               	goto	l3178
  9419  08B4  3001               	movlw	1
  9420  08B5  0008               	return
  9421  08B6                     l3178:	
  9422  08B6  3000               	movlw	0
  9423  08B7  0008               	return
  9424  08B8                     l286:	
  9425                           ;libr.h: 413: case 12: if (RD3 == 1) return 1; else return 0;
  9426                           
  9427  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  9428  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  9429  08BA  1D88               	btfss	8,3	;volatile
  9430  08BB  28BE               	goto	l3188
  9431  08BC  3001               	movlw	1
  9432  08BD  0008               	return
  9433  08BE                     l3188:	
  9434  08BE  3000               	movlw	0
  9435  08BF  0008               	return
  9436  08C0                     l289:	
  9437                           ;libr.h: 414: case 13: if (RD4 == 1) return 1; else return 0;
  9438                           
  9439  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  9440  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  9441  08C2  1E08               	btfss	8,4	;volatile
  9442  08C3  28C6               	goto	l3198
  9443  08C4  3001               	movlw	1
  9444  08C5  0008               	return
  9445  08C6                     l3198:	
  9446  08C6  3000               	movlw	0
  9447  08C7  0008               	return
  9448  08C8                     l292:	
  9449                           ;libr.h: 415: case 14: if (RD5 == 1) return 1; else return 0;
  9450                           
  9451  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  9452  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  9453  08CA  1E88               	btfss	8,5	;volatile
  9454  08CB  28CE               	goto	l3208
  9455  08CC  3001               	movlw	1
  9456  08CD  0008               	return
  9457  08CE                     l3208:	
  9458  08CE  3000               	movlw	0
  9459  08CF  0008               	return
  9460  08D0                     l295:	
  9461                           ;libr.h: 416: case 15: if (RD6 == 1) return 1; else return 0;
  9462                           
  9463  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  9464  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  9465  08D2  1F08               	btfss	8,6	;volatile
  9466  08D3  28D6               	goto	l3218
  9467  08D4  3001               	movlw	1
  9468  08D5  0008               	return
  9469  08D6                     l3218:	
  9470  08D6  3000               	movlw	0
  9471  08D7  0008               	return
  9472  08D8                     l298:	
  9473                           ;libr.h: 417: case 16: if (RD7 == 1) return 1; else return 0;
  9474                           
  9475  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  9476  08D9  1303               	bcf	3,6	;RP1=0, select bank0
  9477  08DA  1F88               	btfss	8,7	;volatile
  9478  08DB  28DE               	goto	l3228
  9479  08DC  3001               	movlw	1
  9480  08DD  0008               	return
  9481  08DE                     l3228:	
  9482  08DE  3000               	movlw	0
  9483                           
  9484                           ;libr.h: 418: }
  9485  08DF  0008               	return
  9486  08E0                     l3232:	
  9487  08E0  0870               	movf	readPin@stater,w
  9488                           
  9489                           ; Switch size 1, requested type "space"
  9490                           ; Number of cases is 16, Range of values is 1 to 16
  9491                           ; switch strategies available:
  9492                           ; Name         Instructions Cycles
  9493                           ; simple_byte           49    25 (average)
  9494                           ; direct_byte           59    11 (fixed)
  9495                           ; jumptable            263     9 (fixed)
  9496                           ;	Chosen strategy is simple_byte
  9497  08E1  3A01               	xorlw	1	; case 1
  9498  08E2  1903               	skipnz
  9499  08E3  2860               	goto	l252
  9500  08E4  3A03               	xorlw	3	; case 2
  9501  08E5  1903               	skipnz
  9502  08E6  2868               	goto	l256
  9503  08E7  3A01               	xorlw	1	; case 3
  9504  08E8  1903               	skipnz
  9505  08E9  2870               	goto	l259
  9506  08EA  3A07               	xorlw	7	; case 4
  9507  08EB  1903               	skipnz
  9508  08EC  2878               	goto	l262
  9509  08ED  3A01               	xorlw	1	; case 5
  9510  08EE  1903               	skipnz
  9511  08EF  2880               	goto	l265
  9512  08F0  3A03               	xorlw	3	; case 6
  9513  08F1  1903               	skipnz
  9514  08F2  2888               	goto	l268
  9515  08F3  3A01               	xorlw	1	; case 7
  9516  08F4  1903               	skipnz
  9517  08F5  2890               	goto	l271
  9518  08F6  3A0F               	xorlw	15	; case 8
  9519  08F7  1903               	skipnz
  9520  08F8  2898               	goto	l274
  9521  08F9  3A01               	xorlw	1	; case 9
  9522  08FA  1903               	skipnz
  9523  08FB  28A0               	goto	l277
  9524  08FC  3A03               	xorlw	3	; case 10
  9525  08FD  1903               	skipnz
  9526  08FE  28A8               	goto	l280
  9527  08FF  3A01               	xorlw	1	; case 11
  9528  0900  1903               	skipnz
  9529  0901  28B0               	goto	l283
  9530  0902  3A07               	xorlw	7	; case 12
  9531  0903  1903               	skipnz
  9532  0904  28B8               	goto	l286
  9533  0905  3A01               	xorlw	1	; case 13
  9534  0906  1903               	skipnz
  9535  0907  28C0               	goto	l289
  9536  0908  3A03               	xorlw	3	; case 14
  9537  0909  1903               	skipnz
  9538  090A  28C8               	goto	l292
  9539  090B  3A01               	xorlw	1	; case 15
  9540  090C  1903               	skipnz
  9541  090D  28D0               	goto	l295
  9542  090E  3A1F               	xorlw	31	; case 16
  9543  090F  1903               	skipnz
  9544  0910  28D8               	goto	l298
  9545  0911  2912               	goto	l254
  9546  0912                     l254:	
  9547  0912  0008               	return
  9548  0913                     __end_of_readPin:	
  9549                           
  9550                           	psect	text42
  9551  11EB                     __ptext42:	
  9552 ;; *************** function _Write_ds1302_byte *****************
  9553 ;; Defined at:
  9554 ;;		line 215 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  cmd             1    wreg     unsigned char 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  cmd             1    6[COMMON] unsigned char 
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9568 ;;      Params:         0       0       0       0       0
  9569 ;;      Locals:         1       0       0       0       0
  9570 ;;      Temps:          0       0       0       0       0
  9571 ;;      Totals:         1       0       0       0       0
  9572 ;;Total ram usage:        1 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:    2
  9575 ;; This function calls:
  9576 ;;		_PinSelect
  9577 ;;		_Shift_out_byte_right
  9578 ;;		_pinMode
  9579 ;; This function is called by:
  9580 ;;		_DS1302_read
  9581 ;;		_DS1302_write
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           
  9586                           ;psect for function _Write_ds1302_byte
  9587  11EB                     _Write_ds1302_byte:	
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in _Write_ds1302_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9591                           ;Write_ds1302_byte@cmd stored from wreg
  9592  11EB  00F6               	movwf	Write_ds1302_byte@cmd
  9593                           
  9594                           ;Ds1302.h: 216: pinMode(Data,0);
  9595  11EC  01F0               	clrf	pinMode@stater
  9596  11ED  1283               	bcf	3,5	;RP0=0, select bank0
  9597  11EE  1303               	bcf	3,6	;RP1=0, select bank0
  9598  11EF  0853               	movf	_Data,w
  9599  11F0  120A  118A  201D  160A  118A  	fcall	_pinMode
  9600                           
  9601                           ;Ds1302.h: 217: PinSelect(Data,0);
  9602  11F5  01F0               	clrf	PinSelect@segState
  9603  11F6  1283               	bcf	3,5	;RP0=0, select bank0
  9604  11F7  1303               	bcf	3,6	;RP1=0, select bank0
  9605  11F8  0853               	movf	_Data,w
  9606  11F9  120A  158A  22B9  160A  118A  	fcall	_PinSelect
  9607                           
  9608                           ;Ds1302.h: 218: Shift_out_byte_right(cmd);
  9609  11FE  0876               	movf	Write_ds1302_byte@cmd,w
  9610  11FF  160A  118A  2266  160A  118A  	fcall	_Shift_out_byte_right
  9611                           
  9612                           ;Ds1302.h: 219: pinMode(Data,1);
  9613  1204  01F0               	clrf	pinMode@stater
  9614  1205  0AF0               	incf	pinMode@stater,f
  9615  1206  1283               	bcf	3,5	;RP0=0, select bank0
  9616  1207  1303               	bcf	3,6	;RP1=0, select bank0
  9617  1208  0853               	movf	_Data,w
  9618  1209  120A  118A  201D   	fcall	_pinMode
  9619  120C  0008               	return
  9620  120D                     __end_of_Write_ds1302_byte:	
  9621                           
  9622                           	psect	text43
  9623  001D                     __ptext43:	
  9624 ;; *************** function _pinMode *****************
  9625 ;; Defined at:
  9626 ;;		line 378 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/libr.h"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;  segPortSel      1    wreg     unsigned char 
  9629 ;;  stater          1    0[COMMON] unsigned char 
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;  segPortSel      1    1[COMMON] unsigned char 
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  1    wreg      void 
  9634 ;; Registers used:
  9635 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9641 ;;      Params:         1       0       0       0       0
  9642 ;;      Locals:         1       0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0
  9644 ;;      Totals:         2       0       0       0       0
  9645 ;;Total ram usage:        2 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_DS1302_init
  9651 ;;		_DS1302_read
  9652 ;;		_Write_ds1302_byte
  9653 ;;		_LCD5110_settings
  9654 ;;		_KeypadSetting
  9655 ;;		_main
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function _pinMode
  9661  001D                     _pinMode:	
  9662                           
  9663                           ;incstack = 0
  9664                           ; Regs used in _pinMode: [wreg-fsr0h+status,2+status,0]
  9665                           ;pinMode@segPortSel stored from wreg
  9666  001D  00F1               	movwf	pinMode@segPortSel
  9667                           
  9668                           ;libr.h: 379: switch(segPortSel){
  9669  001E  28FF               	goto	l3050
  9670  001F                     l2984:	
  9671                           ;libr.h: 380: case 1: if(stater==0) TRISB0=0; else TRISB0=1 ; RB0=0;break;
  9672                           
  9673  001F  0870               	movf	pinMode@stater,w
  9674  0020  1D03               	btfss	3,2
  9675  0021  2826               	goto	l199
  9676  0022  1683               	bsf	3,5	;RP0=1, select bank1
  9677  0023  1303               	bcf	3,6	;RP1=0, select bank1
  9678  0024  1006               	bcf	6,0	;volatile
  9679  0025  2829               	goto	l200
  9680  0026                     l199:	
  9681  0026  1683               	bsf	3,5	;RP0=1, select bank1
  9682  0027  1303               	bcf	3,6	;RP1=0, select bank1
  9683  0028  1406               	bsf	6,0	;volatile
  9684  0029                     l200:	
  9685  0029  1283               	bcf	3,5	;RP0=0, select bank0
  9686  002A  1303               	bcf	3,6	;RP1=0, select bank0
  9687  002B  1006               	bcf	6,0	;volatile
  9688  002C  0008               	return
  9689  002D                     l2988:	
  9690                           ;libr.h: 381: case 2: if(stater==0) TRISB1=0; else TRISB1=1 ; RB1=0;break;
  9691                           
  9692  002D  0870               	movf	pinMode@stater,w
  9693  002E  1D03               	btfss	3,2
  9694  002F  2834               	goto	l203
  9695  0030  1683               	bsf	3,5	;RP0=1, select bank1
  9696  0031  1303               	bcf	3,6	;RP1=0, select bank1
  9697  0032  1086               	bcf	6,1	;volatile
  9698  0033  2837               	goto	l204
  9699  0034                     l203:	
  9700  0034  1683               	bsf	3,5	;RP0=1, select bank1
  9701  0035  1303               	bcf	3,6	;RP1=0, select bank1
  9702  0036  1486               	bsf	6,1	;volatile
  9703  0037                     l204:	
  9704  0037  1283               	bcf	3,5	;RP0=0, select bank0
  9705  0038  1303               	bcf	3,6	;RP1=0, select bank0
  9706  0039  1086               	bcf	6,1	;volatile
  9707  003A  0008               	return
  9708  003B                     l2992:	
  9709                           ;libr.h: 382: case 3: if(stater==0) TRISB2=0; else TRISB2=1; RB2=0;break;
  9710                           
  9711  003B  0870               	movf	pinMode@stater,w
  9712  003C  1D03               	btfss	3,2
  9713  003D  2842               	goto	l206
  9714  003E  1683               	bsf	3,5	;RP0=1, select bank1
  9715  003F  1303               	bcf	3,6	;RP1=0, select bank1
  9716  0040  1106               	bcf	6,2	;volatile
  9717  0041  2845               	goto	l207
  9718  0042                     l206:	
  9719  0042  1683               	bsf	3,5	;RP0=1, select bank1
  9720  0043  1303               	bcf	3,6	;RP1=0, select bank1
  9721  0044  1506               	bsf	6,2	;volatile
  9722  0045                     l207:	
  9723  0045  1283               	bcf	3,5	;RP0=0, select bank0
  9724  0046  1303               	bcf	3,6	;RP1=0, select bank0
  9725  0047  1106               	bcf	6,2	;volatile
  9726  0048  0008               	return
  9727  0049                     l2996:	
  9728                           ;libr.h: 383: case 4: if(stater==0) TRISB3=0; else TRISB3=1; RB3=0;break;
  9729                           
  9730  0049  0870               	movf	pinMode@stater,w
  9731  004A  1D03               	btfss	3,2
  9732  004B  2850               	goto	l209
  9733  004C  1683               	bsf	3,5	;RP0=1, select bank1
  9734  004D  1303               	bcf	3,6	;RP1=0, select bank1
  9735  004E  1186               	bcf	6,3	;volatile
  9736  004F  2853               	goto	l210
  9737  0050                     l209:	
  9738  0050  1683               	bsf	3,5	;RP0=1, select bank1
  9739  0051  1303               	bcf	3,6	;RP1=0, select bank1
  9740  0052  1586               	bsf	6,3	;volatile
  9741  0053                     l210:	
  9742  0053  1283               	bcf	3,5	;RP0=0, select bank0
  9743  0054  1303               	bcf	3,6	;RP1=0, select bank0
  9744  0055  1186               	bcf	6,3	;volatile
  9745  0056  0008               	return
  9746  0057                     l3000:	
  9747                           ;libr.h: 384: case 5: if(stater==0) TRISB4=0; else TRISB4=1; RB4=0;break;
  9748                           
  9749  0057  0870               	movf	pinMode@stater,w
  9750  0058  1D03               	btfss	3,2
  9751  0059  285E               	goto	l212
  9752  005A  1683               	bsf	3,5	;RP0=1, select bank1
  9753  005B  1303               	bcf	3,6	;RP1=0, select bank1
  9754  005C  1206               	bcf	6,4	;volatile
  9755  005D  2861               	goto	l213
  9756  005E                     l212:	
  9757  005E  1683               	bsf	3,5	;RP0=1, select bank1
  9758  005F  1303               	bcf	3,6	;RP1=0, select bank1
  9759  0060  1606               	bsf	6,4	;volatile
  9760  0061                     l213:	
  9761  0061  1283               	bcf	3,5	;RP0=0, select bank0
  9762  0062  1303               	bcf	3,6	;RP1=0, select bank0
  9763  0063  1206               	bcf	6,4	;volatile
  9764  0064  0008               	return
  9765  0065                     l3004:	
  9766                           ;libr.h: 385: case 6: if(stater==0) TRISB5=0; else TRISB5=1; RB5=0;break;
  9767                           
  9768  0065  0870               	movf	pinMode@stater,w
  9769  0066  1D03               	btfss	3,2
  9770  0067  286C               	goto	l215
  9771  0068  1683               	bsf	3,5	;RP0=1, select bank1
  9772  0069  1303               	bcf	3,6	;RP1=0, select bank1
  9773  006A  1286               	bcf	6,5	;volatile
  9774  006B  286F               	goto	l216
  9775  006C                     l215:	
  9776  006C  1683               	bsf	3,5	;RP0=1, select bank1
  9777  006D  1303               	bcf	3,6	;RP1=0, select bank1
  9778  006E  1686               	bsf	6,5	;volatile
  9779  006F                     l216:	
  9780  006F  1283               	bcf	3,5	;RP0=0, select bank0
  9781  0070  1303               	bcf	3,6	;RP1=0, select bank0
  9782  0071  1286               	bcf	6,5	;volatile
  9783  0072  0008               	return
  9784  0073                     l3008:	
  9785                           ;libr.h: 386: case 7: if(stater==0) TRISB6=0; else TRISB6=1; RB6=0;break;
  9786                           
  9787  0073  0870               	movf	pinMode@stater,w
  9788  0074  1D03               	btfss	3,2
  9789  0075  287A               	goto	l218
  9790  0076  1683               	bsf	3,5	;RP0=1, select bank1
  9791  0077  1303               	bcf	3,6	;RP1=0, select bank1
  9792  0078  1306               	bcf	6,6	;volatile
  9793  0079  287D               	goto	l219
  9794  007A                     l218:	
  9795  007A  1683               	bsf	3,5	;RP0=1, select bank1
  9796  007B  1303               	bcf	3,6	;RP1=0, select bank1
  9797  007C  1706               	bsf	6,6	;volatile
  9798  007D                     l219:	
  9799  007D  1283               	bcf	3,5	;RP0=0, select bank0
  9800  007E  1303               	bcf	3,6	;RP1=0, select bank0
  9801  007F  1306               	bcf	6,6	;volatile
  9802  0080  0008               	return
  9803  0081                     l3012:	
  9804                           ;libr.h: 387: case 8: if(stater==0) TRISB7=0; else TRISB7=1; RB7=0;break;
  9805                           
  9806  0081  0870               	movf	pinMode@stater,w
  9807  0082  1D03               	btfss	3,2
  9808  0083  2888               	goto	l221
  9809  0084  1683               	bsf	3,5	;RP0=1, select bank1
  9810  0085  1303               	bcf	3,6	;RP1=0, select bank1
  9811  0086  1386               	bcf	6,7	;volatile
  9812  0087  288B               	goto	l222
  9813  0088                     l221:	
  9814  0088  1683               	bsf	3,5	;RP0=1, select bank1
  9815  0089  1303               	bcf	3,6	;RP1=0, select bank1
  9816  008A  1786               	bsf	6,7	;volatile
  9817  008B                     l222:	
  9818  008B  1283               	bcf	3,5	;RP0=0, select bank0
  9819  008C  1303               	bcf	3,6	;RP1=0, select bank0
  9820  008D  1386               	bcf	6,7	;volatile
  9821  008E  0008               	return
  9822  008F                     l3016:	
  9823                           ;libr.h: 388: case 9: if(stater==0) TRISD0=0; else TRISD0=1; RD0=0;break;
  9824                           
  9825  008F  0870               	movf	pinMode@stater,w
  9826  0090  1D03               	btfss	3,2
  9827  0091  2896               	goto	l224
  9828  0092  1683               	bsf	3,5	;RP0=1, select bank1
  9829  0093  1303               	bcf	3,6	;RP1=0, select bank1
  9830  0094  1008               	bcf	8,0	;volatile
  9831  0095  2899               	goto	l225
  9832  0096                     l224:	
  9833  0096  1683               	bsf	3,5	;RP0=1, select bank1
  9834  0097  1303               	bcf	3,6	;RP1=0, select bank1
  9835  0098  1408               	bsf	8,0	;volatile
  9836  0099                     l225:	
  9837  0099  1283               	bcf	3,5	;RP0=0, select bank0
  9838  009A  1303               	bcf	3,6	;RP1=0, select bank0
  9839  009B  1008               	bcf	8,0	;volatile
  9840  009C  0008               	return
  9841  009D                     l3020:	
  9842                           ;libr.h: 389: case 10: if(stater==0) TRISD1=0; else TRISD1=1; RD1=0;break;
  9843                           
  9844  009D  0870               	movf	pinMode@stater,w
  9845  009E  1D03               	btfss	3,2
  9846  009F  28A4               	goto	l227
  9847  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  9848  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  9849  00A2  1088               	bcf	8,1	;volatile
  9850  00A3  28A7               	goto	l228
  9851  00A4                     l227:	
  9852  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  9853  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  9854  00A6  1488               	bsf	8,1	;volatile
  9855  00A7                     l228:	
  9856  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  9857  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  9858  00A9  1088               	bcf	8,1	;volatile
  9859  00AA  0008               	return
  9860  00AB                     l3024:	
  9861                           ;libr.h: 390: case 11: if(stater==0) TRISD2=0; else TRISD2=1; RD2=0;break;
  9862                           
  9863  00AB  0870               	movf	pinMode@stater,w
  9864  00AC  1D03               	btfss	3,2
  9865  00AD  28B2               	goto	l230
  9866  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  9867  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  9868  00B0  1108               	bcf	8,2	;volatile
  9869  00B1  28B5               	goto	l231
  9870  00B2                     l230:	
  9871  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  9872  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  9873  00B4  1508               	bsf	8,2	;volatile
  9874  00B5                     l231:	
  9875  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  9876  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  9877  00B7  1108               	bcf	8,2	;volatile
  9878  00B8  0008               	return
  9879  00B9                     l3028:	
  9880                           ;libr.h: 391: case 12: if(stater==0) TRISD3=0; else TRISD3=1; RD3=0;break;
  9881                           
  9882  00B9  0870               	movf	pinMode@stater,w
  9883  00BA  1D03               	btfss	3,2
  9884  00BB  28C0               	goto	l233
  9885  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  9886  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  9887  00BE  1188               	bcf	8,3	;volatile
  9888  00BF  28C3               	goto	l234
  9889  00C0                     l233:	
  9890  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9891  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9892  00C2  1588               	bsf	8,3	;volatile
  9893  00C3                     l234:	
  9894  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9895  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9896  00C5  1188               	bcf	8,3	;volatile
  9897  00C6  0008               	return
  9898  00C7                     l3032:	
  9899                           ;libr.h: 392: case 13: if(stater==0) TRISD4=0; else TRISD4=1; RD4=0;break;
  9900                           
  9901  00C7  0870               	movf	pinMode@stater,w
  9902  00C8  1D03               	btfss	3,2
  9903  00C9  28CE               	goto	l236
  9904  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  9905  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  9906  00CC  1208               	bcf	8,4	;volatile
  9907  00CD  28D1               	goto	l237
  9908  00CE                     l236:	
  9909  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  9910  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  9911  00D0  1608               	bsf	8,4	;volatile
  9912  00D1                     l237:	
  9913  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  9914  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  9915  00D3  1208               	bcf	8,4	;volatile
  9916  00D4  0008               	return
  9917  00D5                     l3036:	
  9918                           ;libr.h: 393: case 14: if(stater==0) TRISD5=0; else TRISD5=1; RD5=0;break;
  9919                           
  9920  00D5  0870               	movf	pinMode@stater,w
  9921  00D6  1D03               	btfss	3,2
  9922  00D7  28DC               	goto	l239
  9923  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  9924  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  9925  00DA  1288               	bcf	8,5	;volatile
  9926  00DB  28DF               	goto	l240
  9927  00DC                     l239:	
  9928  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  9929  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  9930  00DE  1688               	bsf	8,5	;volatile
  9931  00DF                     l240:	
  9932  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  9933  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  9934  00E1  1288               	bcf	8,5	;volatile
  9935  00E2  0008               	return
  9936  00E3                     l3040:	
  9937                           ;libr.h: 394: case 15: if(stater==0) TRISD6=0; else TRISD6=1; RD6=0;break;
  9938                           
  9939  00E3  0870               	movf	pinMode@stater,w
  9940  00E4  1D03               	btfss	3,2
  9941  00E5  28EA               	goto	l242
  9942  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9943  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9944  00E8  1308               	bcf	8,6	;volatile
  9945  00E9  28ED               	goto	l243
  9946  00EA                     l242:	
  9947  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  9948  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  9949  00EC  1708               	bsf	8,6	;volatile
  9950  00ED                     l243:	
  9951  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  9952  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  9953  00EF  1308               	bcf	8,6	;volatile
  9954  00F0  0008               	return
  9955  00F1                     l3044:	
  9956                           ;libr.h: 395: case 16: if(stater==0) TRISD7=0; else TRISD7=1; RD7=0;break;
  9957                           
  9958  00F1  0870               	movf	pinMode@stater,w
  9959  00F2  1D03               	btfss	3,2
  9960  00F3  28F8               	goto	l245
  9961  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  9962  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  9963  00F6  1388               	bcf	8,7	;volatile
  9964  00F7  28FB               	goto	l246
  9965  00F8                     l245:	
  9966  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  9967  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  9968  00FA  1788               	bsf	8,7	;volatile
  9969  00FB                     l246:	
  9970  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  9971  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  9972  00FD  1388               	bcf	8,7	;volatile
  9973                           
  9974                           ;libr.h: 397: }
  9975                           
  9976                           ;libr.h: 396: default: break;
  9977  00FE  0008               	return
  9978  00FF                     l3050:	
  9979  00FF  0871               	movf	pinMode@segPortSel,w
  9980                           
  9981                           ; Switch size 1, requested type "space"
  9982                           ; Number of cases is 16, Range of values is 1 to 16
  9983                           ; switch strategies available:
  9984                           ; Name         Instructions Cycles
  9985                           ; simple_byte           49    25 (average)
  9986                           ; direct_byte           59    11 (fixed)
  9987                           ; jumptable            263     9 (fixed)
  9988                           ;	Chosen strategy is simple_byte
  9989  0100  3A01               	xorlw	1	; case 1
  9990  0101  1903               	skipnz
  9991  0102  281F               	goto	l2984
  9992  0103  3A03               	xorlw	3	; case 2
  9993  0104  1903               	skipnz
  9994  0105  282D               	goto	l2988
  9995  0106  3A01               	xorlw	1	; case 3
  9996  0107  1903               	skipnz
  9997  0108  283B               	goto	l2992
  9998  0109  3A07               	xorlw	7	; case 4
  9999  010A  1903               	skipnz
 10000  010B  2849               	goto	l2996
 10001  010C  3A01               	xorlw	1	; case 5
 10002  010D  1903               	skipnz
 10003  010E  2857               	goto	l3000
 10004  010F  3A03               	xorlw	3	; case 6
 10005  0110  1903               	skipnz
 10006  0111  2865               	goto	l3004
 10007  0112  3A01               	xorlw	1	; case 7
 10008  0113  1903               	skipnz
 10009  0114  2873               	goto	l3008
 10010  0115  3A0F               	xorlw	15	; case 8
 10011  0116  1903               	skipnz
 10012  0117  2881               	goto	l3012
 10013  0118  3A01               	xorlw	1	; case 9
 10014  0119  1903               	skipnz
 10015  011A  288F               	goto	l3016
 10016  011B  3A03               	xorlw	3	; case 10
 10017  011C  1903               	skipnz
 10018  011D  289D               	goto	l3020
 10019  011E  3A01               	xorlw	1	; case 11
 10020  011F  1903               	skipnz
 10021  0120  28AB               	goto	l3024
 10022  0121  3A07               	xorlw	7	; case 12
 10023  0122  1903               	skipnz
 10024  0123  28B9               	goto	l3028
 10025  0124  3A01               	xorlw	1	; case 13
 10026  0125  1903               	skipnz
 10027  0126  28C7               	goto	l3032
 10028  0127  3A03               	xorlw	3	; case 14
 10029  0128  1903               	skipnz
 10030  0129  28D5               	goto	l3036
 10031  012A  3A01               	xorlw	1	; case 15
 10032  012B  1903               	skipnz
 10033  012C  28E3               	goto	l3040
 10034  012D  3A1F               	xorlw	31	; case 16
 10035  012E  1903               	skipnz
 10036  012F  28F1               	goto	l3044
 10037  0130  2931               	goto	l248
 10038  0131                     l248:	
 10039  0131  0008               	return
 10040  0132                     __end_of_pinMode:	
 10041                           
 10042                           	psect	text44
 10043  1266                     __ptext44:	
 10044 ;; *************** function _Shift_out_byte_right *****************
 10045 ;; Defined at:
 10046 ;;		line 265 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/Ds1302.h"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;  data            1    wreg     unsigned char 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  data            1    4[COMMON] unsigned char 
 10051 ;;  i               1    5[COMMON] unsigned char 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  1    wreg      void 
 10054 ;; Registers used:
 10055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10061 ;;      Params:         0       0       0       0       0
 10062 ;;      Locals:         2       0       0       0       0
 10063 ;;      Temps:          2       0       0       0       0
 10064 ;;      Totals:         4       0       0       0       0
 10065 ;;Total ram usage:        4 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:    1
 10068 ;; This function calls:
 10069 ;;		_PinSelect
 10070 ;; This function is called by:
 10071 ;;		_Write_ds1302_byte
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _Shift_out_byte_right
 10077  1266                     _Shift_out_byte_right:	
 10078                           
 10079                           ;incstack = 0
 10080                           ; Regs used in _Shift_out_byte_right: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10081                           ;Shift_out_byte_right@data stored from wreg
 10082  1266  00F4               	movwf	Shift_out_byte_right@data
 10083                           
 10084                           ;Ds1302.h: 266: char i;
 10085                           ;Ds1302.h: 267: for (i=0; i<8; i++){
 10086  1267  01F5               	clrf	Shift_out_byte_right@i
 10087  1268                     L16:	
 10088  1268  3008               	movlw	8
 10089  1269  0275               	subwf	Shift_out_byte_right@i,w
 10090  126A  1803               	btfsc	3,0
 10091  126B  0008               	return
 10092                           
 10093                           ;Ds1302.h: 268: if(data & 0x01){
 10094  126C  1C74               	btfss	Shift_out_byte_right@data,0
 10095  126D  2A71               	goto	l3060
 10096                           
 10097                           ;Ds1302.h: 269: PinSelect(Data,1);
 10098  126E  01F0               	clrf	PinSelect@segState
 10099  126F  0AF0               	incf	PinSelect@segState,f
 10100  1270  2A72               	goto	L15
 10101  1271                     l3060:	
 10102                           ;Ds1302.h: 270: }else{
 10103                           
 10104                           
 10105                           ;Ds1302.h: 271: PinSelect(Data,0);
 10106  1271  01F0               	clrf	PinSelect@segState
 10107  1272                     L15:	
 10108  1272  1283               	bcf	3,5	;RP0=0, select bank0
 10109  1273  1303               	bcf	3,6	;RP1=0, select bank0
 10110  1274  0853               	movf	_Data,w
 10111  1275  120A  158A  22B9  160A  118A  	fcall	_PinSelect
 10112                           
 10113                           ;Ds1302.h: 272: }
 10114                           ;Ds1302.h: 273: PinSelect(Clock, 1);
 10115  127A  01F0               	clrf	PinSelect@segState
 10116  127B  0AF0               	incf	PinSelect@segState,f
 10117  127C  1283               	bcf	3,5	;RP0=0, select bank0
 10118  127D  1303               	bcf	3,6	;RP1=0, select bank0
 10119  127E  0852               	movf	_Clock,w
 10120  127F  120A  158A  22B9  160A  118A  	fcall	_PinSelect
 10121                           
 10122                           ;Ds1302.h: 274: PinSelect(Clock, 0);
 10123  1284  01F0               	clrf	PinSelect@segState
 10124  1285  1283               	bcf	3,5	;RP0=0, select bank0
 10125  1286  1303               	bcf	3,6	;RP1=0, select bank0
 10126  1287  0852               	movf	_Clock,w
 10127  1288  120A  158A  22B9  160A  118A  	fcall	_PinSelect
 10128                           
 10129                           ;Ds1302.h: 275: data = data>>1;
 10130  128D  0874               	movf	Shift_out_byte_right@data,w
 10131  128E  00F2               	movwf	??_Shift_out_byte_right
 10132  128F  1003               	clrc
 10133  1290  0C72               	rrf	??_Shift_out_byte_right,w
 10134  1291  00F3               	movwf	??_Shift_out_byte_right+1
 10135  1292  0873               	movf	??_Shift_out_byte_right+1,w
 10136  1293  00F4               	movwf	Shift_out_byte_right@data
 10137  1294  3001               	movlw	1
 10138  1295  00F2               	movwf	??_Shift_out_byte_right
 10139  1296  0872               	movf	??_Shift_out_byte_right,w
 10140  1297  07F5               	addwf	Shift_out_byte_right@i,f
 10141  1298  2A68               	goto	L16
 10142  1299                     __end_of_Shift_out_byte_right:	
 10143                           
 10144                           	psect	text45
 10145  0AB9                     __ptext45:	
 10146 ;; *************** function _PinSelect *****************
 10147 ;; Defined at:
 10148 ;;		line 353 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\include\CloudX/libr.h"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  selPins         1    wreg     unsigned char 
 10151 ;;  segState        1    0[COMMON] unsigned char 
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;  selPins         1    1[COMMON] unsigned char 
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  2    0[COMMON] int 
 10156 ;; Registers used:
 10157 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10163 ;;      Params:         1       0       0       0       0
 10164 ;;      Locals:         1       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0
 10166 ;;      Totals:         2       0       0       0       0
 10167 ;;Total ram usage:        2 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_DS1302_init
 10173 ;;		_DS1302_read
 10174 ;;		_Write_ds1302_byte
 10175 ;;		_DS1302_write
 10176 ;;		_shift_in_byte
 10177 ;;		_Shift_out_byte_right
 10178 ;;		_LCD5110_internalWrite
 10179 ;;		_LCD5110_settings
 10180 ;;		_getKey
 10181 ;;		_main
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           
 10186                           ;psect for function _PinSelect
 10187  0AB9                     _PinSelect:	
 10188                           
 10189                           ;incstack = 0
 10190                           ; Regs used in _PinSelect: [wreg-fsr0h+status,2+status,0]
 10191                           ;PinSelect@selPins stored from wreg
 10192  0AB9  00F1               	movwf	PinSelect@selPins
 10193                           
 10194                           ;libr.h: 354: switch(selPins){
 10195  0ABA  2B6B               	goto	l2950
 10196  0ABB                     l2884:	
 10197                           ;libr.h: 355: case 1: if (segState) RB0=1; else RB0=0; break;
 10198                           
 10199  0ABB  0870               	movf	PinSelect@segState,w
 10200  0ABC  1903               	btfsc	3,2
 10201  0ABD  2AC2               	goto	l145
 10202  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0AC0  1406               	bsf	6,0	;volatile
 10205  0AC1  0008               	return
 10206  0AC2                     l145:	
 10207  0AC2  1283               	bcf	3,5	;RP0=0, select bank0
 10208  0AC3  1303               	bcf	3,6	;RP1=0, select bank0
 10209  0AC4  1006               	bcf	6,0	;volatile
 10210  0AC5  0008               	return
 10211  0AC6                     l2888:	
 10212                           ;libr.h: 356: case 2: if (segState) RB1=1; else RB1=0; break;
 10213                           
 10214  0AC6  0870               	movf	PinSelect@segState,w
 10215  0AC7  1903               	btfsc	3,2
 10216  0AC8  2ACD               	goto	l149
 10217  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
 10218  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
 10219  0ACB  1486               	bsf	6,1	;volatile
 10220  0ACC  0008               	return
 10221  0ACD                     l149:	
 10222  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
 10223  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
 10224  0ACF  1086               	bcf	6,1	;volatile
 10225  0AD0  0008               	return
 10226  0AD1                     l2892:	
 10227                           ;libr.h: 357: case 3: if (segState) RB2=1; else RB2=0; break;
 10228                           
 10229  0AD1  0870               	movf	PinSelect@segState,w
 10230  0AD2  1903               	btfsc	3,2
 10231  0AD3  2AD8               	goto	l152
 10232  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
 10233  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
 10234  0AD6  1506               	bsf	6,2	;volatile
 10235  0AD7  0008               	return
 10236  0AD8                     l152:	
 10237  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
 10238  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
 10239  0ADA  1106               	bcf	6,2	;volatile
 10240  0ADB  0008               	return
 10241  0ADC                     l2896:	
 10242                           ;libr.h: 358: case 4: if (segState) RB3=1; else RB3=0; break;
 10243                           
 10244  0ADC  0870               	movf	PinSelect@segState,w
 10245  0ADD  1903               	btfsc	3,2
 10246  0ADE  2AE3               	goto	l155
 10247  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
 10248  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
 10249  0AE1  1586               	bsf	6,3	;volatile
 10250  0AE2  0008               	return
 10251  0AE3                     l155:	
 10252  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
 10253  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
 10254  0AE5  1186               	bcf	6,3	;volatile
 10255  0AE6  0008               	return
 10256  0AE7                     l2900:	
 10257                           ;libr.h: 359: case 5: if (segState) RB4=1; else RB4=0; break;
 10258                           
 10259  0AE7  0870               	movf	PinSelect@segState,w
 10260  0AE8  1903               	btfsc	3,2
 10261  0AE9  2AEE               	goto	l158
 10262  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
 10263  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
 10264  0AEC  1606               	bsf	6,4	;volatile
 10265  0AED  0008               	return
 10266  0AEE                     l158:	
 10267  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
 10268  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
 10269  0AF0  1206               	bcf	6,4	;volatile
 10270  0AF1  0008               	return
 10271  0AF2                     l2904:	
 10272                           ;libr.h: 360: case 6: if (segState) RB5=1; else RB5=0; break;
 10273                           
 10274  0AF2  0870               	movf	PinSelect@segState,w
 10275  0AF3  1903               	btfsc	3,2
 10276  0AF4  2AF9               	goto	l161
 10277  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
 10278  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
 10279  0AF7  1686               	bsf	6,5	;volatile
 10280  0AF8  0008               	return
 10281  0AF9                     l161:	
 10282  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
 10283  0AFA  1303               	bcf	3,6	;RP1=0, select bank0
 10284  0AFB  1286               	bcf	6,5	;volatile
 10285  0AFC  0008               	return
 10286  0AFD                     l2908:	
 10287                           ;libr.h: 361: case 7: if (segState) RB6=1; else RB6=0; break;
 10288                           
 10289  0AFD  0870               	movf	PinSelect@segState,w
 10290  0AFE  1903               	btfsc	3,2
 10291  0AFF  2B04               	goto	l164
 10292  0B00  1283               	bcf	3,5	;RP0=0, select bank0
 10293  0B01  1303               	bcf	3,6	;RP1=0, select bank0
 10294  0B02  1706               	bsf	6,6	;volatile
 10295  0B03  0008               	return
 10296  0B04                     l164:	
 10297  0B04  1283               	bcf	3,5	;RP0=0, select bank0
 10298  0B05  1303               	bcf	3,6	;RP1=0, select bank0
 10299  0B06  1306               	bcf	6,6	;volatile
 10300  0B07  0008               	return
 10301  0B08                     l2912:	
 10302                           ;libr.h: 362: case 8: if (segState) RB7=1; else RB7=0; break;
 10303                           
 10304  0B08  0870               	movf	PinSelect@segState,w
 10305  0B09  1903               	btfsc	3,2
 10306  0B0A  2B0F               	goto	l167
 10307  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
 10308  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
 10309  0B0D  1786               	bsf	6,7	;volatile
 10310  0B0E  0008               	return
 10311  0B0F                     l167:	
 10312  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
 10313  0B10  1303               	bcf	3,6	;RP1=0, select bank0
 10314  0B11  1386               	bcf	6,7	;volatile
 10315  0B12  0008               	return
 10316  0B13                     l2916:	
 10317                           ;libr.h: 363: case 9: if (segState) RD0=1; else RD0=0; break;
 10318                           
 10319  0B13  0870               	movf	PinSelect@segState,w
 10320  0B14  1903               	btfsc	3,2
 10321  0B15  2B1A               	goto	l170
 10322  0B16  1283               	bcf	3,5	;RP0=0, select bank0
 10323  0B17  1303               	bcf	3,6	;RP1=0, select bank0
 10324  0B18  1408               	bsf	8,0	;volatile
 10325  0B19  0008               	return
 10326  0B1A                     l170:	
 10327  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
 10328  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
 10329  0B1C  1008               	bcf	8,0	;volatile
 10330  0B1D  0008               	return
 10331  0B1E                     l2920:	
 10332                           ;libr.h: 365: case 10: if (segState) RD1=1; else RD1=0; break;
 10333                           
 10334  0B1E  0870               	movf	PinSelect@segState,w
 10335  0B1F  1903               	btfsc	3,2
 10336  0B20  2B25               	goto	l173
 10337  0B21  1283               	bcf	3,5	;RP0=0, select bank0
 10338  0B22  1303               	bcf	3,6	;RP1=0, select bank0
 10339  0B23  1488               	bsf	8,1	;volatile
 10340  0B24  0008               	return
 10341  0B25                     l173:	
 10342  0B25  1283               	bcf	3,5	;RP0=0, select bank0
 10343  0B26  1303               	bcf	3,6	;RP1=0, select bank0
 10344  0B27  1088               	bcf	8,1	;volatile
 10345  0B28  0008               	return
 10346  0B29                     l2924:	
 10347                           ;libr.h: 366: case 11: if (segState) RD2=1; else RD2=0; break;
 10348                           
 10349  0B29  0870               	movf	PinSelect@segState,w
 10350  0B2A  1903               	btfsc	3,2
 10351  0B2B  2B30               	goto	l176
 10352  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
 10353  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
 10354  0B2E  1508               	bsf	8,2	;volatile
 10355  0B2F  0008               	return
 10356  0B30                     l176:	
 10357  0B30  1283               	bcf	3,5	;RP0=0, select bank0
 10358  0B31  1303               	bcf	3,6	;RP1=0, select bank0
 10359  0B32  1108               	bcf	8,2	;volatile
 10360  0B33  0008               	return
 10361  0B34                     l2928:	
 10362                           ;libr.h: 367: case 12: if (segState) RD3=1; else RD3=0; break;
 10363                           
 10364  0B34  0870               	movf	PinSelect@segState,w
 10365  0B35  1903               	btfsc	3,2
 10366  0B36  2B3B               	goto	l179
 10367  0B37  1283               	bcf	3,5	;RP0=0, select bank0
 10368  0B38  1303               	bcf	3,6	;RP1=0, select bank0
 10369  0B39  1588               	bsf	8,3	;volatile
 10370  0B3A  0008               	return
 10371  0B3B                     l179:	
 10372  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
 10373  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
 10374  0B3D  1188               	bcf	8,3	;volatile
 10375  0B3E  0008               	return
 10376  0B3F                     l2932:	
 10377                           ;libr.h: 368: case 13: if (segState) RD4=1; else RD4=0; break;
 10378                           
 10379  0B3F  0870               	movf	PinSelect@segState,w
 10380  0B40  1903               	btfsc	3,2
 10381  0B41  2B46               	goto	l182
 10382  0B42  1283               	bcf	3,5	;RP0=0, select bank0
 10383  0B43  1303               	bcf	3,6	;RP1=0, select bank0
 10384  0B44  1608               	bsf	8,4	;volatile
 10385  0B45  0008               	return
 10386  0B46                     l182:	
 10387  0B46  1283               	bcf	3,5	;RP0=0, select bank0
 10388  0B47  1303               	bcf	3,6	;RP1=0, select bank0
 10389  0B48  1208               	bcf	8,4	;volatile
 10390  0B49  0008               	return
 10391  0B4A                     l2936:	
 10392                           ;libr.h: 369: case 14: if (segState) RD5=1; else RD5=0; break;
 10393                           
 10394  0B4A  0870               	movf	PinSelect@segState,w
 10395  0B4B  1903               	btfsc	3,2
 10396  0B4C  2B51               	goto	l185
 10397  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
 10398  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
 10399  0B4F  1688               	bsf	8,5	;volatile
 10400  0B50  0008               	return
 10401  0B51                     l185:	
 10402  0B51  1283               	bcf	3,5	;RP0=0, select bank0
 10403  0B52  1303               	bcf	3,6	;RP1=0, select bank0
 10404  0B53  1288               	bcf	8,5	;volatile
 10405  0B54  0008               	return
 10406  0B55                     l2940:	
 10407                           ;libr.h: 370: case 15: if (segState) RD6=1; else RD6=0; break;
 10408                           
 10409  0B55  0870               	movf	PinSelect@segState,w
 10410  0B56  1903               	btfsc	3,2
 10411  0B57  2B5C               	goto	l188
 10412  0B58  1283               	bcf	3,5	;RP0=0, select bank0
 10413  0B59  1303               	bcf	3,6	;RP1=0, select bank0
 10414  0B5A  1708               	bsf	8,6	;volatile
 10415  0B5B  0008               	return
 10416  0B5C                     l188:	
 10417  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
 10418  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
 10419  0B5E  1308               	bcf	8,6	;volatile
 10420  0B5F  0008               	return
 10421  0B60                     l2944:	
 10422                           ;libr.h: 371: case 16: if (segState) RD7=1; else RD7=0; break;
 10423                           
 10424  0B60  0870               	movf	PinSelect@segState,w
 10425  0B61  1903               	btfsc	3,2
 10426  0B62  2B67               	goto	l191
 10427  0B63  1283               	bcf	3,5	;RP0=0, select bank0
 10428  0B64  1303               	bcf	3,6	;RP1=0, select bank0
 10429  0B65  1788               	bsf	8,7	;volatile
 10430  0B66  0008               	return
 10431  0B67                     l191:	
 10432  0B67  1283               	bcf	3,5	;RP0=0, select bank0
 10433  0B68  1303               	bcf	3,6	;RP1=0, select bank0
 10434  0B69  1388               	bcf	8,7	;volatile
 10435                           
 10436                           ;libr.h: 373: }
 10437                           
 10438                           ;libr.h: 372: default: break;
 10439  0B6A  0008               	return
 10440  0B6B                     l2950:	
 10441  0B6B  0871               	movf	PinSelect@selPins,w
 10442                           
 10443                           ; Switch size 1, requested type "space"
 10444                           ; Number of cases is 16, Range of values is 1 to 16
 10445                           ; switch strategies available:
 10446                           ; Name         Instructions Cycles
 10447                           ; simple_byte           49    25 (average)
 10448                           ; direct_byte           59    11 (fixed)
 10449                           ; jumptable            263     9 (fixed)
 10450                           ;	Chosen strategy is simple_byte
 10451  0B6C  3A01               	xorlw	1	; case 1
 10452  0B6D  1903               	skipnz
 10453  0B6E  2ABB               	goto	l2884
 10454  0B6F  3A03               	xorlw	3	; case 2
 10455  0B70  1903               	skipnz
 10456  0B71  2AC6               	goto	l2888
 10457  0B72  3A01               	xorlw	1	; case 3
 10458  0B73  1903               	skipnz
 10459  0B74  2AD1               	goto	l2892
 10460  0B75  3A07               	xorlw	7	; case 4
 10461  0B76  1903               	skipnz
 10462  0B77  2ADC               	goto	l2896
 10463  0B78  3A01               	xorlw	1	; case 5
 10464  0B79  1903               	skipnz
 10465  0B7A  2AE7               	goto	l2900
 10466  0B7B  3A03               	xorlw	3	; case 6
 10467  0B7C  1903               	skipnz
 10468  0B7D  2AF2               	goto	l2904
 10469  0B7E  3A01               	xorlw	1	; case 7
 10470  0B7F  1903               	skipnz
 10471  0B80  2AFD               	goto	l2908
 10472  0B81  3A0F               	xorlw	15	; case 8
 10473  0B82  1903               	skipnz
 10474  0B83  2B08               	goto	l2912
 10475  0B84  3A01               	xorlw	1	; case 9
 10476  0B85  1903               	skipnz
 10477  0B86  2B13               	goto	l2916
 10478  0B87  3A03               	xorlw	3	; case 10
 10479  0B88  1903               	skipnz
 10480  0B89  2B1E               	goto	l2920
 10481  0B8A  3A01               	xorlw	1	; case 11
 10482  0B8B  1903               	skipnz
 10483  0B8C  2B29               	goto	l2924
 10484  0B8D  3A07               	xorlw	7	; case 12
 10485  0B8E  1903               	skipnz
 10486  0B8F  2B34               	goto	l2928
 10487  0B90  3A01               	xorlw	1	; case 13
 10488  0B91  1903               	skipnz
 10489  0B92  2B3F               	goto	l2932
 10490  0B93  3A03               	xorlw	3	; case 14
 10491  0B94  1903               	skipnz
 10492  0B95  2B4A               	goto	l2936
 10493  0B96  3A01               	xorlw	1	; case 15
 10494  0B97  1903               	skipnz
 10495  0B98  2B55               	goto	l2940
 10496  0B99  3A1F               	xorlw	31	; case 16
 10497  0B9A  1903               	skipnz
 10498  0B9B  2B60               	goto	l2944
 10499  0B9C  2B9D               	goto	l194
 10500  0B9D                     l194:	
 10501  0B9D  0008               	return
 10502  0B9E                     __end_of_PinSelect:	
 10503  007E                     btemp	set	126	;btemp
 10504  007E                     wtemp	set	126
 10505  007E                     wtemp0	set	126
 10506  0080                     wtemp1	set	128
 10507  0082                     wtemp2	set	130
 10508  0084                     wtemp3	set	132
 10509  0086                     wtemp4	set	134
 10510  0088                     wtemp5	set	136
 10511  007F                     wtemp6	set	127
 10512  007E                     ttemp	set	126
 10513  007E                     ttemp0	set	126
 10514  0081                     ttemp1	set	129
 10515  0084                     ttemp2	set	132
 10516  0087                     ttemp3	set	135
 10517  007F                     ttemp4	set	127
 10518  007E                     ltemp	set	126
 10519  007E                     ltemp0	set	126
 10520  0082                     ltemp1	set	130
 10521  0086                     ltemp2	set	134
 10522  0080                     ltemp3	set	128


Data Sizes:
    Strings     185
    Constant    288
    Data        47
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      79
    BANK1            80     49      78
    BANK3            96      0      12
    BANK2            96      0       0

Pointer List with Targets:

    readKeys@time	PTR unsigned char  size(1) Largest target is 9
		 -> main@time(BANK1[9]), 

    SetupTime@timearray	PTR unsigned char  size(1) Largest target is 9
		 -> main@time(BANK1[9]), 

    compareTimeArray@time2	PTR unsigned char  size(1) Largest target is 9
		 -> main@time2(BANK1[9]), 

    compareTimeArray@time	PTR unsigned char  size(1) Largest target is 9
		 -> main@time(BANK1[9]), 

    ReadArrayFromRAM@timearray	PTR unsigned char  size(1) Largest target is 9
		 -> main@time2(BANK1[9]), 

    ReadArrayFromRAM@mytime	PTR unsigned char  size(1) Largest target is 9
		 -> main@time2(BANK1[9]), 

    writeArrayToRAM@timearray	PTR unsigned char  size(1) Largest target is 9
		 -> main@time(BANK1[9]), 

    writeArrayToRAM@mytime	PTR unsigned char  size(1) Largest target is 9
		 -> main@time(BANK1[9]), 

    readAndStore@Time	PTR unsigned char  size(1) Largest target is 9
		 -> main@time(BANK1[9]), 

    readAndStore@time	PTR unsigned char  size(1) Largest target is 9
		 -> main@time(BANK1[9]), 

    main@myrings	PTR unsigned char  size(2) Largest target is 0
		 -> main@ringsno(BANK1[0]), 

    KeypadSetting@KMapA	PTR unsigned char  size(1) Largest target is 12
		 -> main@KeypadCharacters(BANK1[12]), 

    KMap	PTR unsigned char  size(1) Largest target is 12
		 -> NULL(NULL[0]), main@KeypadCharacters(BANK1[12]), 

    KeypadSetting@KColPinsA	PTR unsigned char  size(1) Largest target is 3
		 -> main@ColumnsPins(BANK1[3]), 

    KColPins	PTR unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), main@ColumnsPins(BANK1[3]), 

    KeypadSetting@KRowPinsA	PTR unsigned char  size(1) Largest target is 4
		 -> main@RowPins(BANK1[4]), 

    KRowPins	PTR unsigned char  size(1) Largest target is 4
		 -> NULL(NULL[0]), main@RowPins(BANK1[4]), 

    serialWriteText@Sertxxt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[3]), main@time2(BANK1[9]), 

    LCD5110_writeText@characters	PTR unsigned char  size(2) Largest target is 18
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[4]), main@ringsno(BANK1[0]), 
		 -> STR_9(CODE[18]), STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[16]), 
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[11]), 
		 -> main@time(BANK1[9]), 

    LCD5110_writeText@userFont	PTR const unsigned char  size(2) Largest target is 288
		 -> FONT_3x5(CODE[288]), 

    LCD5110_writeCP@userFont	PTR const unsigned char  size(2) Largest target is 288
		 -> FONT_3x5(CODE[288]), 

    Time_read@hr	PTR unsigned char  size(1) Largest target is 1
		 -> main@hours(BANK1[1]), 

    Time_read@min	PTR unsigned char  size(1) Largest target is 1
		 -> main@minutes(BANK1[1]), 

    Time_read@sec	PTR unsigned char  size(1) Largest target is 1
		 -> main@seconds(BANK1[1]), 


Critical Paths under _main in COMMON

    _main->_LCD5110_clear
    _main->_LCD5110_setting
    _main->_ReadArrayFromRAM
    _main->_Time_read
    _serialWriteText->_serialWrite
    _serialBegin->___lldiv
    _writeArrayToRAM->_RAM_write
    _RAM_write->_Binary2BCD
    _Time_read->_DS1302_read
    _SetupTime->_LCD5110_clear
    _SetupTime->_Time_write
    _getKey->___bmul
    _LCD5110_writeCP->_LCD5110_inWrite
    _LCD5110_inWrite->_LCD5110_startCol
    _LCD5110_startCol->_LCD5110_internalWrite
    _Time_write->_Binary2BCD
    _ReadArrayFromRAM->_RAM_read
    _RAM_read->_DS1302_read
    _BCD2Binary->___bmul
    _Binary2BCD->___awdiv
    _LCD_clear->_LCD5110_clear
    _LCD5110_fillScreen->_LCD5110_internalWrite
    _LCD5110_clear->_gotoXY
    _gotoXY->_LCD5110_internalWrite
    _LCD5110_setting->_startCommand
    _startCommand->_LCD5110_internalWrite
    _LCD5110_internalWrite->_PinSelect
    _LCD5110_settings->_PinSelect
    _LCD5110_settings->_pinMode
    _KeypadSetting->_pinMode
    _DS1302_init->_DS1302_read
    _DS1302_write->_Write_ds1302_byte
    _DS1302_read->_Write_ds1302_byte
    _DS1302_read->_shift_in_byte
    _shift_in_byte->_PinSelect
    _Write_ds1302_byte->_Shift_out_byte_right
    _Shift_out_byte_right->_PinSelect

Critical Paths under _main in BANK0

    _main->_SetupTime
    _main->_readAndStore
    _readAndStore->_readKeys
    _writeArrayToRAM->_RAM_write
    _RAM_write->_Binary2BCD
    _SetupTime->_readKeys
    _readKeys->_LCD5110_writeText
    _LCD5110_writeText->_LCD5110_writeCP
    _Time_write->_Binary2BCD
    _ReadArrayFromRAM->_Binary2BCD

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0  371091
                                             44 BANK0      6     6      0
                                              0 BANK1     49    49      0
                        _BCD2LowerCh
                        _BCD2UpperCh
                        _DS1302_init
                      _KeypadSetting
                      _LCD5110_clear
                    _LCD5110_setting
                  _LCD5110_writeText
                          _LCD_clear
                          _PinSelect
                   _ReadArrayFromRAM
                          _SetupTime
                          _Time_read
                             ___wmul
                   _compareTimeArray
                             _getKey
                            _pinMode
                       _readAndStore
                        _serialBegin
                    _serialWriteText
 ---------------------------------------------------------------------------------
 (1) _serialWriteText                                      4     2      2     218
                                              3 COMMON     4     2      2
                        _serialWrite
 ---------------------------------------------------------------------------------
 (2) _serialWrite                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _serialBegin                                         16    12      4     365
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _readAndStore                                        11    10      1  114896
                                             33 BANK0     11    10      1
                        _BCD2LowerCh
                        _BCD2UpperCh
                         _Binary2BCD
                    _LCD5110_writeCP
                  _LCD5110_writeText
                             _getKey
                           _readKeys
                    _writeArrayToRAM
 ---------------------------------------------------------------------------------
 (2) _writeArrayToRAM                                      9     8      1   13784
                                              4 BANK0      9     8      1
                          _RAM_write
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _RAM_write                                            3     2      1   12402
                                             12 COMMON     2     1      1
                                              3 BANK0      1     1      0
                         _Binary2BCD
                       _DS1302_write
 ---------------------------------------------------------------------------------
 (1) _compareTimeArray                                     7     4      3     223
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _Time_read                                            4     2      2   14763
                                             10 COMMON     4     2      2
                        _DS1302_read
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           11    11      0  108123
                                             33 BANK0     11    11      0
                      _LCD5110_clear
                  _LCD5110_writeText
                         _Time_write
                             ___bmul
                             _getKey
                           _readKeys
 ---------------------------------------------------------------------------------
 (2) _readKeys                                             7     7      0   41867
                                             26 BANK0      7     7      0
                  _LCD5110_writeText
                             _getKey
 ---------------------------------------------------------------------------------
 (3) _getKey                                               9     9      0    4996
                                              4 COMMON     9     9      0
                          _PinSelect
                             ___bmul
                            _readPin
 ---------------------------------------------------------------------------------
 (3) _LCD5110_writeText                                   12     3      9   36456
                                             14 BANK0     12     3      9
              _LCD5110_internalWrite
                    _LCD5110_writeCP
                             _gotoXY
 ---------------------------------------------------------------------------------
 (4) _LCD5110_writeCP                                     14     9      5   16124
                                              0 BANK0     14     9      5
                    _LCD5110_inWrite
              _LCD5110_internalWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     662
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _LCD5110_inWrite                                      4     2      2    9738
                                             10 COMMON     4     2      2
              _LCD5110_internalWrite
                   _LCD5110_startCol
 ---------------------------------------------------------------------------------
 (6) _LCD5110_startCol                                     2     2      0    4719
                                              8 COMMON     2     2      0
              _LCD5110_internalWrite
 ---------------------------------------------------------------------------------
 (2) _Time_write                                           4     2      2   12576
                                             12 COMMON     2     0      2
                                              3 BANK0      2     2      0
                         _Binary2BCD
                       _DS1302_write
 ---------------------------------------------------------------------------------
 (1) _ReadArrayFromRAM                                     5     5      0   17091
                                             13 COMMON     1     1      0
                                              3 BANK0      4     4      0
                        _BCD2LowerCh
                        _BCD2UpperCh
                         _Binary2BCD
                           _RAM_read
 ---------------------------------------------------------------------------------
 (2) _RAM_read                                             3     3      0   15629
                                             10 COMMON     3     3      0
                         _BCD2Binary
                        _DS1302_read
 ---------------------------------------------------------------------------------
 (3) _BCD2Binary                                           5     5      0     996
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Binary2BCD                                           6     6      0    1142
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _BCD2UpperCh                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BCD2LowerCh                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            3     3      0   15320
                                              0 BANK0      3     3      0
                      _LCD5110_clear
                 _LCD5110_fillScreen
 ---------------------------------------------------------------------------------
 (2) _LCD5110_fillScreen                                   4     4      0    4765
                                              8 COMMON     4     4      0
              _LCD5110_internalWrite
 ---------------------------------------------------------------------------------
 (2) _LCD5110_clear                                        2     2      0   10555
                                             12 COMMON     2     2      0
              _LCD5110_internalWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (4) _gotoXY                                               4     3      1    5812
                                              8 COMMON     4     3      1
              _LCD5110_internalWrite
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     814
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCD5110_setting                                      9     5      4    9688
                                              9 COMMON     5     1      4
                                              0 BANK0      4     4      0
                   _LCD5110_settings
                       _startCommand
 ---------------------------------------------------------------------------------
 (2) _startCommand                                         1     1      0    4697
                                              8 COMMON     1     1      0
              _LCD5110_internalWrite
 ---------------------------------------------------------------------------------
 (5) _LCD5110_internalWrite                                6     5      1    4697
                                              2 COMMON     6     5      1
                          _PinSelect
 ---------------------------------------------------------------------------------
 (2) _LCD5110_settings                                     6     2      4    4669
                                              2 COMMON     6     2      4
                          _PinSelect
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _KeypadSetting                                       11     5      6    2287
                                              2 COMMON    11     5      6
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _DS1302_init                                          5     3      2   30039
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                        _DS1302_read
                       _DS1302_write
                          _PinSelect
                            _pinMode
 ---------------------------------------------------------------------------------
 (4) _DS1302_write                                         2     1      1   11087
                                              7 COMMON     2     1      1
                          _PinSelect
                  _Write_ds1302_byte
 ---------------------------------------------------------------------------------
 (2) _DS1302_read                                          3     3      0   14564
                                              7 COMMON     3     3      0
                          _PinSelect
                  _Write_ds1302_byte
                            _pinMode
                      _shift_in_byte
 ---------------------------------------------------------------------------------
 (3) _shift_in_byte                                        5     5      0    3101
                                              2 COMMON     5     5      0
                          _PinSelect
                            _readPin
 ---------------------------------------------------------------------------------
 (4) _readPin                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Write_ds1302_byte                                    1     1      0    7224
                                              6 COMMON     1     1      0
                          _PinSelect
               _Shift_out_byte_right
                            _pinMode
 ---------------------------------------------------------------------------------
 (6) _pinMode                                              2     1      1    1275
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (6) _Shift_out_byte_right                                 4     4      0    3009
                                              2 COMMON     4     4      0
                          _PinSelect
 ---------------------------------------------------------------------------------
 (7) _PinSelect                                            2     1      1    2918
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BCD2LowerCh
   _BCD2UpperCh
   _DS1302_init
     _DS1302_read
       _PinSelect
       _Write_ds1302_byte
         _PinSelect
         _Shift_out_byte_right
           _PinSelect
         _pinMode
       _pinMode
       _shift_in_byte
         _PinSelect
         _readPin
     _DS1302_write
       _PinSelect
       _Write_ds1302_byte
         _PinSelect
         _Shift_out_byte_right
           _PinSelect
         _pinMode
     _PinSelect
     _pinMode
   _KeypadSetting
     _pinMode
   _LCD5110_clear
     _LCD5110_internalWrite
       _PinSelect
     _gotoXY
       _LCD5110_internalWrite
         _PinSelect
       ___bmul
   _LCD5110_setting
     _LCD5110_settings
       _PinSelect
       _pinMode
     _startCommand
       _LCD5110_internalWrite
         _PinSelect
   _LCD5110_writeText
     _LCD5110_internalWrite
       _PinSelect
     _LCD5110_writeCP
       _LCD5110_inWrite
         _LCD5110_internalWrite
           _PinSelect
         _LCD5110_startCol
           _LCD5110_internalWrite
             _PinSelect
       _LCD5110_internalWrite
         _PinSelect
       ___wmul
     _gotoXY
       _LCD5110_internalWrite
         _PinSelect
       ___bmul
   _LCD_clear
     _LCD5110_clear
       _LCD5110_internalWrite
         _PinSelect
       _gotoXY
         _LCD5110_internalWrite
           _PinSelect
         ___bmul
     _LCD5110_fillScreen
       _LCD5110_internalWrite
         _PinSelect
   _PinSelect
   _ReadArrayFromRAM
     _BCD2LowerCh
     _BCD2UpperCh
     _Binary2BCD
       ___awdiv
       ___awmod
     _RAM_read
       _BCD2Binary
         ___bmul
       _DS1302_read
         _PinSelect
         _Write_ds1302_byte
           _PinSelect
           _Shift_out_byte_right
             _PinSelect
           _pinMode
         _pinMode
         _shift_in_byte
           _PinSelect
           _readPin
   _SetupTime
     _LCD5110_clear
       _LCD5110_internalWrite
         _PinSelect
       _gotoXY
         _LCD5110_internalWrite
           _PinSelect
         ___bmul
     _LCD5110_writeText
       _LCD5110_internalWrite
         _PinSelect
       _LCD5110_writeCP
         _LCD5110_inWrite
           _LCD5110_internalWrite
             _PinSelect
           _LCD5110_startCol
             _LCD5110_internalWrite
               _PinSelect
         _LCD5110_internalWrite
           _PinSelect
         ___wmul
       _gotoXY
         _LCD5110_internalWrite
           _PinSelect
         ___bmul
     _Time_write
       _Binary2BCD
         ___awdiv
         ___awmod
       _DS1302_write
         _PinSelect
         _Write_ds1302_byte
           _PinSelect
           _Shift_out_byte_right
             _PinSelect
           _pinMode
     ___bmul
     _getKey
       _PinSelect
       ___bmul
       _readPin
     _readKeys
       _LCD5110_writeText
         _LCD5110_internalWrite
           _PinSelect
         _LCD5110_writeCP
           _LCD5110_inWrite
             _LCD5110_internalWrite
               _PinSelect
             _LCD5110_startCol
               _LCD5110_internalWrite
                 _PinSelect
           _LCD5110_internalWrite
             _PinSelect
           ___wmul
         _gotoXY
           _LCD5110_internalWrite
             _PinSelect
           ___bmul
       _getKey
         _PinSelect
         ___bmul
         _readPin
   _Time_read
     _DS1302_read
       _PinSelect
       _Write_ds1302_byte
         _PinSelect
         _Shift_out_byte_right
           _PinSelect
         _pinMode
       _pinMode
       _shift_in_byte
         _PinSelect
         _readPin
   ___wmul
   _compareTimeArray
   _getKey
     _PinSelect
     ___bmul
     _readPin
   _pinMode
   _readAndStore
     _BCD2LowerCh
     _BCD2UpperCh
     _Binary2BCD
       ___awdiv
       ___awmod
     _LCD5110_writeCP
       _LCD5110_inWrite
         _LCD5110_internalWrite
           _PinSelect
         _LCD5110_startCol
           _LCD5110_internalWrite
             _PinSelect
       _LCD5110_internalWrite
         _PinSelect
       ___wmul
     _LCD5110_writeText
       _LCD5110_internalWrite
         _PinSelect
       _LCD5110_writeCP
         _LCD5110_inWrite
           _LCD5110_internalWrite
             _PinSelect
           _LCD5110_startCol
             _LCD5110_internalWrite
               _PinSelect
         _LCD5110_internalWrite
           _PinSelect
         ___wmul
       _gotoXY
         _LCD5110_internalWrite
           _PinSelect
         ___bmul
     _getKey
       _PinSelect
       ___bmul
       _readPin
     _readKeys
       _LCD5110_writeText
         _LCD5110_internalWrite
           _PinSelect
         _LCD5110_writeCP
           _LCD5110_inWrite
             _LCD5110_internalWrite
               _PinSelect
             _LCD5110_startCol
               _LCD5110_internalWrite
                 _PinSelect
           _LCD5110_internalWrite
             _PinSelect
           ___wmul
         _gotoXY
           _LCD5110_internalWrite
             _PinSelect
           ___bmul
       _getKey
         _PinSelect
         ___bmul
         _readPin
     _writeArrayToRAM
       _RAM_write
         _Binary2BCD
           ___awdiv
           ___awmod
         _DS1302_write
           _PinSelect
           _Write_ds1302_byte
             _PinSelect
             _Shift_out_byte_right
               _PinSelect
             _pinMode
       ___bmul
   _serialBegin
     ___lldiv
   _serialWriteText
     _serialWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       C       9       12.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     31      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     32      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B7      12        0.0%
ABS                  0      0      B7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Oct 30 14:14:49 2018

          __size_of_LCD5110_setting 001D                                   pc 0002  
                    ___bmul@product 0072                         __CFG_CP$OFF 0000  
          __size_of_LCD5110_writeCP 0068                        ___awdiv@sign 0076  
                                fsr 0004                 ___wmul@multiplicand 0072  
                LCD5110_setting@DIn 007B                  LCD5110_setting@Clk 007C  
                               l200 0029                                 l210 0053  
                               l203 0034                                 l212 005E  
                               l204 0037                                 l221 0088  
                               l213 0061                                 l230 00B2  
                               l222 008B                                 l206 0042  
                               l231 00B5                                 l215 006C  
                               l207 0045                                 l152 0AD8  
                               l240 00DF                                 l224 0096  
                               l216 006F                                 l161 0AF9  
                               l145 0AC2                                 l233 00C0  
                               l225 0099                                 l209 0050  
                               l170 0B1A                                 l242 00EA  
                               l234 00C3                                 l218 007A  
                               l155 0AE3                                 l243 00ED  
                               l227 00A4                                 l219 007D  
                               l164 0B04                                 l236 00CE  
                               l228 00A7                                 l252 0860  
                               l173 0B25                                 l149 0ACD  
                               l245 00F8                                 l237 00D1  
                               l182 0B46                                 l158 0AEE  
                               l246 00FB                                 l262 0878  
                               l254 0912                                 l191 0B67  
                               l167 0B0F                                 l239 00DC  
                               l271 0890                                 l176 0B30  
                               l248 0131                                 l280 08A8  
                               l256 0868                                 l185 0B51  
                               l265 0880                                 l194 0B9D  
                               l274 0898                                 l179 0B3B  
                               l283 08B0                                 l259 0870  
                               l188 0B5C                                 l292 08C8  
                               l268 0888                                 l277 08A0  
                               l286 08B8                                 l199 0026  
                               l295 08D0                                 l289 08C0  
                               l298 08D8                                 l836 1E59  
                               l696 1EE8                                 _RB0 0030  
                               _RB1 0031                                 _RB2 0032  
                               _RB3 0033                                 _RD0 0040  
                               _RB4 0034                                 _RD1 0041  
                               _RB5 0035                                 _RD2 0042  
                               _RB6 0036                                 _RD3 0043  
                               _RB7 0037                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 _KIT 0057  
                      __CFG_CPD$OFF 0000                         main@RowPins 00B5  
                               _RST 005C                                 __DC 005F  
                               __CE 005D                  LCD5110_settings@CE 0074  
                LCD5110_settings@DC 0073                        _startCommand 12CF  
                               fsr0 0004                                 indf 0000  
                      ___awmod@sign 0076                        __CFG_FOSC$HS 0000  
          __end_of_LCD5110_settings 13DF                        _DS1302_write 1E94  
          __end_of_LCD5110_startCol 1D5E                        BCD2Binary@aa 0077  
                      BCD2Binary@rr 0076                        BCD2Binary@tt 0078  
                ReadArrayFromRAM@hr 0024                        __CFG_LVP$OFF 0000  
               LCD5110_setting@Rset 007D                        main@Ringsno1 00CE  
                   RAM_read@address 007B                                l3000 0057  
                              l3020 009D                                l3012 0081  
                              l3004 0065                                l3040 00E3  
                              l3032 00C7                                l3024 00AB  
                              l3016 008F                                l3008 0073  
                              l3050 00FF                                l4002 09C1  
                              l3060 1271                                l3044 00F1  
                              l3036 00D5                                l3028 00B9  
                              l3108 087E                                l4004 09D9  
                              l4100 0267                                l3118 0886  
                              l3310 14D3                                l3302 14C0  
                              l3208 08CE                                l3128 088E  
                              l3232 08E0                                l4112 02D7  
                              l3218 08D6                                l3138 0896  
                              l3306 14CB                                l3322 13E9  
                              l3228 08DE                                l3148 089E  
                              l3340 1412                                l3244 1E51  
                              l3500 0CFA                                l4212 0CDC  
                              l4204 0CCC                                l4140 0C02  
                              l4036 1F05                                l4108 02AA  
                              l3158 08A6                                l3078 0866  
                              l3262 1D7E                                l3334 13F6  
                              l3326 13F0                                l3422 1614  
                              l3502 0D22                                l4150 0C15  
                              l4142 0C0C                                l4038 1F0C  
                              l3168 08AE                                l3088 086E  
                              l3336 1404                                l3344 141D  
                              l4216 0CDE                                l4208 0CD4  
                              l4160 0C3D                                l4400 04B2  
                              l3178 08B6                                l3098 0876  
                              l3362 1356                                l3258 1D78  
                              l3426 1666                                l3610 0EA8  
                              l3530 0D91                                l4170 0C65  
                              l4402 0536                                l2900 0AE7  
                              l3188 08BE                                l3284 1494  
                              l3348 1425                                l3540 0D97  
                              l3524 0D83                                l3532 0CF1  
                              l4156 0C35                                l4180 0C7A  
                              l4084 01FD                                l3198 08C6  
                              l3294 149C                                l3278 1489  
                              l3470 16F1                                l3702 0FE1  
                              l3534 0D96                                l3518 0D5C  
                              l3542 0DB0                                l4174 0C6D  
                              l4166 0C5D                                l4094 0249  
                              l4086 0207                                l4502 0792  
                              l2920 0B1E                                l2912 0B08  
                              l2904 0AF2                                l3296 14AA  
                              l3472 170A                                l3712 0FFE  
                              l3704 0FF9                                l3632 0F09  
                              l3608 0E80                                l3640 0E77  
                              l3528 0D23                                l4096 0265  
                              l4424 05BC                                l4352 039C  
                              l3378 1395                                l3642 0F1C  
                              l3626 0EE2                                l3650 0F36  
                              l3554 0DBD                                l4194 0CA4  
                              l4178 0C6F                                l4418 0598  
                              l4426 05DF                                l2940 0B55  
                              l2932 0B3F                                l2924 0B29  
                              l2916 0B13                                l2908 0AFD  
                              l3484 173B                                l3476 1723  
                              l3636 0EA9                                l3572 0E1F  
                              l3556 0DE5                                l4188 0C84  
                              l3900 0848                                l4436 05FA  
                              l2950 0B6B                                l3478 172D  
                              l3662 0F44                                l3638 0F17  
                              l3582 0DE6                                l3814 0A4C  
                              l3806 0A1C                                l3830 0AB1  
                              l4198 0CAC                                l2944 0B60  
                              l2936 0B4A                                l2928 0B34  
                              l3680 0FA6                                l3664 0F6C  
                              l3648 0F1D                                l3584 0E54  
                              l3824 0A67                                l3904 0855  
                              l4456 065E                                l3762 121A  
                              l3690 0F6D                                l3594 0E5A  
                              l3578 0E46                                l3586 0DB4  
                              l3818 0A53                                l4458 0692  
                              l4490 0592                                l2892 0AD1  
                              l2884 0ABB                                l2972 1508  
                              l2980 1532                                l3692 0FDB  
                              l3588 0E59                                l3596 0E72  
                              l3828 0A86                                l3852 17A3  
                              l4468 06D1                                l4492 0750  
                              l4396 0510                                l2966 14FA  
                              l2958 14E2                                l3686 0FCD  
                              l3694 0F3B                                l3870 17DB  
                              l3862 17CB                                l3846 1783  
                              l4486 071A                                l4478 0710  
                              l2896 0ADC                                l2888 0AC6  
                              l2992 003B                                l2984 001F  
                              l3768 1232                                l3696 0FE0  
                              l3792 0A10                                l3856 17AB  
                              l3944 1F0F                                l4488 074E  
                              l3962 094C                                l3954 0933  
                              l3874 17DD                                l3866 17D3  
                              l3890 0810                                l2996 0049  
                              l2988 002D                                l3964 0964  
                              l3956 094B                                l3796 0A18  
                              l3788 09E7                                l3892 0820  
                              l3982 0983                                l3974 096A  
                              l3976 0982                                l3984 099C  
                              l3994 09A7                                l3996 09C0  
                              l3988 09A6                                STR_1 11B5  
                              STR_2 11DE                                STR_3 11D1  
                              STR_4 11D8                                STR_5 11E8  
                              STR_6 11A5                                STR_7 1155  
                              STR_8 1144                                STR_9 1132  
                              u4000 032D                                u4010 0342  
                              u4020 035E                                u3305 1D62  
                              u3315 1E3C                                u3335 1218  
                              u4207 07BA                                u4135 072B  
                              u3345 1230                                u2705 1E5A  
                              u3505 0822                                u4217 1DA4  
                       main@counter 00CA                                u2715 1E61  
                              u4307 0E4A                                u4227 0242  
                              u3515 0837                                u2805 14AB  
                              u4317 0ED1                                u4237 02A3  
                              u3525 0849                                u2815 14B7  
                              u4327 0EE8                                u4247 02D0  
                              u2825 14C1                                u2905 140A  
                              u4337 0F0D                                u4257 0D4B  
                              u4177 06C6                                u3570 1581  
                              u2915 1413                                u4347 0F95  
                              u4267 0D62                                u3715 1EF2  
                              u3571 1582                                u3555 1546  
                              u4187 0706                                u3572 1587  
                              u4357 0FAC                                u4277 0D87  
                              u3485 0814                                u3573 1588  
                              u3565 1567                                u4197 0785  
                              u4367 0FD1                                u4287 0E0E  
                              u4377 1E07                                u2785 149F  
                              u4297 0E25                                u2955 1364  
                              u2885 13F9                                u2975 15F4  
                              u2995 124A                                _KMap 0058  
                              _Data 0053                                __DIn 0060  
               LCD5110_settings@DIn 0072                                __Clk 005E  
               LCD5110_settings@Clk 0077                        __CFG_WRT$OFF 0000  
          __end_of_compareTimeArray 1F0E                         main@minutes 00CB  
                       main@seconds 00CC                                _main 02D9  
                 ?_ReadArrayFromRAM 0070                          _Binary2BCD 15A2  
                              btemp 007E                         main@ringsno 00A0  
                              ltemp 007E                         main@myrings 00BC  
                              start 0000                                ttemp 007E  
                _LCD5110_fillScreen 1E30                                wtemp 007E  
                ??_ReadArrayFromRAM 007D                  __size_of_LCD_clear 001E  
           __end_of_serialWriteText 1F38                   ___bmul@multiplier 0073  
                     pinMode@stater 0070               _LCD5110_internalWrite 14D8  
               ?_LCD5110_fillScreen 0070                    __end_of_FONT_3x5 1132  
        LCD5110_internalWrite@_data 0076                KeypadSetting@KeyLoad 007C  
            __size_of_KeypadSetting 00CF                               ?_main 0070  
                   __end_of___awdiv 14D8                               STR_10 11E4  
                             STR_11 11C0                               STR_20 1165  
                             STR_12 1185                               STR_13 1195  
                             STR_14 1175                               STR_15 11CA  
                             STR_16 11D8                               STR_17 1195  
                     __CFG_WDTE$OFF 0000                               STR_18 1165  
                             STR_19 1195                     __end_of___awmod 142A  
                   __end_of___lldiv 085E                     ___awdiv@divisor 0070  
                   ___awdiv@counter 0075                               _RCREG 001A  
              Write_ds1302_byte@cmd 0076                               _RCSTA 0018  
                             _SPBRG 0099                               _PORTB 0006  
                             _PORTC 0007                               _PORTD 0008  
                             _KCols 0056                               _TRISB 0086  
                             _TRISC 0087                               _TRISD 0088  
                             _TXREG 0019                               _TXSTA 0098  
                             _KRows 005A                               _Clock 0052  
                     __CFG_PWRTE$ON 0000                               _Keys1 005B  
                  __end_of_RAM_read 1DBF                  __size_of_RAM_write 0018  
                             __Rset 0061                LCD5110_settings@Rset 0075  
                   __end_of_readPin 0913                ??_LCD5110_fillScreen 0078  
                   __end_of_pinMode 0132                               main@x 00BF  
                    __CFG_BOREN$OFF 0000                               pclath 000A  
                             ltemp0 007E                               ltemp1 0082  
                             ltemp2 0086                               ltemp3 0080  
               LCD5110_startCol@col 0079                   ??_writeArrayToRAM 0025  
                             ttemp0 007E                               ttemp1 0081  
                             ttemp2 0084                               ttemp3 0087  
                             ttemp4 007F                               status 0003  
                             wtemp0 007E                               wtemp1 0080  
                             wtemp2 0082                               wtemp3 0084  
                             wtemp4 0086                               wtemp5 0088  
                             wtemp6 007F                     __initialization 07C7  
                     ?_readAndStore 0041                main@KeypadCharacters 00A0  
                      ??_BCD2Binary 0074                        __end_of_main 07C7  
                 ??_LCD5110_inWrite 007C                  readKeys@terminated 003E  
     __size_of_Shift_out_byte_right 0033                              ??_main 004C  
                 ??_LCD5110_setting 0020                     main@ColumnsPins 00B9  
              ReadArrayFromRAM@mins 0025                   _Write_ds1302_byte 11EB  
                 ??_LCD5110_writeCP 0025                   __end_of_LCD_clear 1E12  
LCD5110_internalWrite@Data__Command 0075                  ?_Write_ds1302_byte 0070  
                  ___awdiv@dividend 0072                  __end_of_BCD2Binary 1266  
               DS1302_read@dataRead 0079                 ??_Write_ds1302_byte 0076  
                     _KeypadSetting 0913                              _TRISB0 0430  
                            _TRISB1 0431                              _TRISB2 0432  
                            _TRISB3 0433                              _TRISD0 0440  
                            _TRISB4 0434                              _TRISD1 0441  
                            _TRISB5 0435                              _TRISD2 0442  
                            _TRISB6 0436                              _TRISD3 0443  
                            _TRISB7 0437                              _TRISD4 0444  
                            _TRISD5 0445                              _TRISD6 0446  
                            _TRISD7 0447                         ?_Binary2BCD 0070  
                      ?_serialBegin 0020                        DS1302_init@x 0021  
            ?_LCD5110_internalWrite 0072                  __size_of_PinSelect 00E5  
                    ??_readAndStore 0042                    ?_serialWriteText 0073  
                      ?_serialWrite 0070                   __end_of_RAM_write 1DD7  
                            ___bmul 1D76                              ___wmul 1E4F  
                         ??___awdiv 0074                           ??___awmod 0074  
                         ??___lldiv 0078                              _getKey 0CE9  
                        _Time_write 130A                    __end_of_readKeys 0AB9  
                            _gotoXY 1EBC                    RAM_write@address 0023  
                  ___awdiv@quotient 0077                     ___awmod@divisor 0070  
                        SetupTime@x 0047           __end_of_Write_ds1302_byte 120D  
                 writeArrayToRAM@hr 0029                     ___awmod@counter 0075  
                __size_of_Time_read 0024                           ??_readPin 0070  
                __size_of_SetupTime 014B                           ??_pinMode 0071  
         LCD5110_fillScreen@pointer 007A                      ?_KeypadSetting 0072  
     LCD5110_internalWrite@dataByte 0072              __size_of_LCD5110_clear 002B  
           __end_of__initialization 07FC              KeypadSetting@KColPinsA 0073  
             __end_of_shift_in_byte 1397                  SetupTime@timearray 004B  
               ___bmul@multiplicand 0070                  KeypadSetting@KMapA 0076  
                    __pcstackCOMMON 0070                           ?_RAM_read 0070  
                      __pidataBANK0 1D4A                        __pidataBANK1 0003  
                      __pidataBANK3 1D6A                       ??_BCD2LowerCh 0070  
                  DS1302_write@data 0077              KeypadSetting@KRowPinsA 0072  
               __size_of_Binary2BCD 0068           KeypadSetting@indicatorPin 0077  
                     ??_BCD2UpperCh 0070                   __end_of_PinSelect 0B9E  
                 ?_LCD5110_settings 0072                   ?_LCD5110_startCol 0070  
                ??_LCD5110_settings 0076                          __pbssBANK0 0052  
                        __pbssBANK1 00EB                       ??_DS1302_init 007C  
                     ??_DS1302_read 0077                  ??_LCD5110_startCol 0078  
                 ?_compareTimeArray 0070                   __end_of_Time_read 1E94  
             compareTimeArray@time2 0070                  ??_compareTimeArray 0073  
                 __end_of_SetupTime 0CE9                          __pmaintext 02D9  
                           ?___bmul 0070                          ??_RAM_read 007A  
                           ?___wmul 0070          LCD5110_writeText@fontWidth 0030  
                           ?_getKey 0070                         ?_Time_write 007C  
                     _LCD5110_clear 120D                             ?_gotoXY 0078  
        __size_of_Write_ds1302_byte 0022              KeypadSetting@InputType 007B  
         __size_of_ReadArrayFromRAM 007E                      getKey@KeyPress 0077  
                     _lastwriteaddr 00ED                     _writeArrayToRAM 1771  
              __end_of_readAndStore 02D9                     ??_KeypadSetting 0078  
               __end_of_BCD2LowerCh 1D42                          __stringtab 1000  
               __end_of_BCD2UpperCh 1D6A                           ?_readKeys 0070  
                   _LCD5110_inWrite 1E12                       DS1302_init@CE 007B  
                      readKeys@time 003F                          _fontOffset 0063  
                    BCD2LowerCh@bcd 0070                         Time_read@hr 007D  
               __end_of_DS1302_init 147F                 __end_of_DS1302_read 12CF  
                   _LCD5110_setting 1DD7                __size_of_serialBegin 0067  
                   _LCD5110_writeCP 160A                     __size_of___bmul 0011  
                           ___awdiv 147F                             ___awmod 13DF  
                    ?_LCD5110_clear 0070             LCD5110_fillScreen@bytez 0079  
                           ___lldiv 0800                     __size_of___wmul 0021  
              __size_of_serialWrite 0012                     __size_of_getKey 0317  
                   __size_of_gotoXY 0029                             __ptext1 1F0E  
                           __ptext2 1D98                             __ptext3 153B  
                           __ptext4 0800                             __ptext5 0132  
                           __ptext6 1771                             __ptext7 1DBF  
                           __ptext8 1EE5                             __ptext9 1E70  
                           _readPin 085E                             _pinMode 001D  
                  ___awmod@dividend 0072                         SetupTime@hr 0049  
                           getKey@i 007C                             clrloop0 1D43  
                         _LCD_clear 1DF4         __size_of_LCD5110_fillScreen 001F  
              end_of_initialization 07FC        __end_of_Shift_out_byte_right 1299  
                    SetupTime@x_568 0048                             gotoXY@X 0078  
                           gotoXY@Y 007B                 __size_of_Time_write 0045  
                  serialBegin@baudd 0020                      shift_in_byte@i 0075  
                        ??_readKeys 003A             ??_LCD5110_internalWrite 0073  
                      ??_Binary2BCD 0079                     ___lldiv@divisor 0070  
                   ___lldiv@counter 007D                           _RCSTAbits 0018  
                  PinSelect@selPins 0071                LCD5110_writeCP@_data 002C  
             writeArrayToRAM@mytime 0028                        __pstringtext 1000  
           __end_of_writeArrayToRAM 1800                           _RAM_write 1DBF  
              LCD5110_writeCP@pos_x 002D                    readAndStore@Keys 0045  
                  readAndStore@Time 0048                   Time_write@seconds 007D  
                       _BCD2LowerCh 1D3D                    readAndStore@time 004B  
                __end_of_Binary2BCD 160A                         _BCD2UpperCh 1D5E  
           __end_of_LCD5110_inWrite 1E30                   LCD5110_setting@DC 007A  
                 LCD5110_setting@CE 0079                          ?_LCD_clear 0070  
                       _DS1302_init 142A                         _DS1302_read 1299  
           __end_of_LCD5110_setting 1DF4             __end_of_LCD5110_writeCP 1672  
                         _TXSTAbits 0098                      BCD2UpperCh@bcd 0071  
               SetupTime@terminated 0046                 KeypadSetting@KColss 0075  
                   ??_LCD5110_clear 007C                 KeypadSetting@KRowss 0074  
                    __end_of___bmul 1D87                      __end_of___wmul 1E70  
                        ?_RAM_write 007C                   __size_of_RAM_read 0015  
                    __end_of_getKey 1000                    _ReadArrayFromRAM 1672  
          __size_of_serialWriteText 002A                      __end_of_gotoXY 1EE5  
             __size_of_readAndStore 01A7                       ?_startCommand 0070  
            LCD5110_internalWrite@i 0077                           _Indicator 0054  
               start_initialization 07C7                LCD5110_writeText@col 0033  
              LCD5110_writeText@row 0032                       ?_DS1302_write 0077  
                      Binary2BCD@t1 0021                        Binary2BCD@t2 0022  
                      Binary2BCD@aa 0020                           _PinSelect 0AB9  
                 compareTimeArray@x 0074           __size_of_LCD5110_settings 0048  
                 shift_in_byte@data 0076               Shift_out_byte_right@i 0075  
       LCD5110_writeText@characters 0034              readAndStore@terminated 004A  
                 shift_in_byte@temp 0074           __size_of_LCD5110_startCol 000B  
                          ??___bmul 0071                           _Time_read 1E70  
                      _readAndStore 0132                            ??___wmul 0074  
                        init_fetch0 1D87                           _SetupTime 0B9E  
               LCD5110_inWrite@coll 007A                    writeArrayToRAM@x 002C  
                          ??_getKey 0074                        ??_Time_write 0023  
               LCD5110_inWrite@roww 007D                         __pdataBANK0 0066  
                       __pdataBANK1 00D1                         __pdataBANK3 0190  
                          ??_gotoXY 0079                    ?_writeArrayToRAM 0024  
              _Shift_out_byte_right 1266           __size_of_compareTimeArray 0029  
                    ??_startCommand 0078           ReadArrayFromRAM@timearray 0023  
                 _LCD5110_writeText 16F0              __size_of_shift_in_byte 0048  
                    ??_DS1302_write 0078                           ___latbits 0002  
            ReadArrayFromRAM@mytime 0026                       __pcstackBANK0 0020  
                     __pcstackBANK1 00A0                  ?_LCD5110_writeText 002E  
                  ?_LCD5110_inWrite 007A            LCD5110_writeCP@character 0024  
                       ??_LCD_clear 0020                     DS1302_write@cmd 0078  
                        ?_PinSelect 0070                 ??_LCD5110_writeText 0037  
                  ?_LCD5110_setting 0079                       RAM_write@data 007C  
                __end_of_Time_write 134F                       Time_write@min 007C  
                  ?_LCD5110_writeCP 0020                   __size_of_readKeys 00D7  
         LCD5110_writeText@dispType 0036                compareTimeArray@time 0076  
              compareTimeArray@size 0071                          ?_Time_read 007A  
                          ?___awdiv 0070                            ?___awmod 0070  
                        ?_SetupTime 0070         LCD5110_writeText@fontOffset 0031  
                          ?___lldiv 0070                       getKey@KeyTell 0078  
             ?_Shift_out_byte_right 0070            LCD5110_writeCP@fontWidth 0022  
                       ??_RAM_write 007D           __end_of_LCD5110_writeText 1771  
                     readAndStore@x 0041                            ?_readPin 0070  
                          ?_pinMode 0070           LCD5110_writeText@userFont 002E  
                         _fontWidth 0064                   ??_serialWriteText 0075  
                         _keypadMap 00D1               __end_of_KeypadSetting 09E2  
                          _FONT_3x5 1012                      ___wmul@product 0074  
                     SetupTime@Keys 0045                       ??_serialBegin 0024  
                    _lastwritecount 00EB                           clear_ram0 1D42  
    __size_of_LCD5110_internalWrite 0063                       SetupTime@mins 004A  
     __end_of_LCD5110_internalWrite 153B                       _shift_in_byte 134F  
                         getKey@Col 007B                           getKey@Map 0079  
                         getKey@Row 007A                       ??_serialWrite 0070  
                          _PIR1bits 000C                          _BCD2Binary 1238  
                         main@F1571 00E4                           main@F1564 00DB  
                         main@F1573 00E8                           main@F1566 0066  
                         main@F1569 0190                            _RAM_read 1DAA  
                          _KColPins 0055                         __stringbase 1012  
                 ___wmul@multiplier 0070                        RAM_read@data 007C  
                      ?_BCD2LowerCh 0070                           main@x_522 00C9  
                          _KRowPins 0059                           main@hours 00CD  
                         main@time2 00AC                        ?_BCD2UpperCh 0070  
        __end_of_LCD5110_fillScreen 1E4F                         ??_PinSelect 0071  
                      ?_DS1302_init 007A                        ?_DS1302_read 0070  
                    DS1302_init@DAT 007A                      DS1302_init@CLK 0020  
                     readKeys@count 0040            __end_of_ReadArrayFromRAM 16F0  
                    DS1302_read@cmd 0078                __end_of_startCommand 130A  
                    ?_shift_in_byte 0070                        Time_read@min 007A  
                      Time_read@sec 007B                       readPin@stater 0070  
          writeArrayToRAM@timearray 0027                    _LCD5110_settings 1397  
          Shift_out_byte_right@data 0074                __end_of_DS1302_write 1EBC  
                  _LCD5110_startCol 1D53                LCD5110_clear@pointer 007C  
                       ??_Time_read 007C                  LCD5110_inWrite@dat 007B  
            ??_Shift_out_byte_right 0072                         ??_SetupTime 0041  
               __end_of_serialBegin 15A2                    __size_of___awdiv 0059  
                  __size_of___awmod 004B                    __size_of___lldiv 005E  
                  _compareTimeArray 1EE5          __size_of_LCD5110_writeText 0081  
               __end_of_serialWrite 1DAA                  __end_of__stringtab 1012  
            serialWriteText@Sertxxt 0073                        Time_write@hr 0024  
                  __size_of_readPin 00B5                            _colCheck 0062  
                  __size_of_pinMode 0115                            __ptext10 0B9E  
                          __ptext11 09E2                            __ptext20 1DAA  
                          __ptext12 0CE9                            __ptext21 1238  
                          __ptext13 16F0                            __ptext30 1EBC  
                          __ptext22 15A2                            __ptext14 160A  
                          __ptext31 1D76                            __ptext23 13DF  
                          __ptext15 1E4F                            __ptext40 134F  
                          __ptext32 1DD7                            __ptext24 147F  
                          __ptext16 1E12                            __ptext41 085E  
                          __ptext33 12CF                            __ptext25 1D5E  
                          __ptext17 1D53                            __ptext42 11EB  
                          __ptext34 14D8                            __ptext26 1D3D  
                          __ptext18 130A                            __ptext43 001D  
                          __ptext35 1397                            __ptext27 1DF4  
                          __ptext19 1672                            __ptext44 1266  
                          __ptext36 0913                            __ptext28 1E30  
                          __ptext45 0AB9                            __ptext37 142A  
                          __ptext29 120D                            __ptext38 1E94  
                          __ptext39 1299             writeArrayToRAM@address1 002B  
                          _readKeys 09E2                       __size_of_main 04EE  
            serialWriteText@pnttter 0076                 writeArrayToRAM@mins 002A  
                          _rowCheck 0065             LCD5110_writeCP@userFont 0020  
                       ?_BCD2Binary 0070               __end_of_LCD5110_clear 1238  
                          main@Keys 00D0                            main@back 00BE  
                          main@time 00C0                            init_ram0 1D8B  
                   ??_shift_in_byte 0072                    ___lldiv@dividend 0074  
            writeArrayToRAM@address 0024                         _serialBegin 153B  
                         stringcode 100A                    serialWrite@SerTx 0072  
                       _serialWrite 1D98           LCD5110_writeCP@fontOffset 0023  
                   _serialWriteText 1F0E                   PinSelect@segState 0070  
                  ___lldiv@quotient 0079                            stringtab 1000  
              __size_of_BCD2LowerCh 0005            __size_of_writeArrayToRAM 008F  
              __size_of_BCD2UpperCh 000C               __size_of_startCommand 003B  
               __size_of_BCD2Binary 002E                  readAndStore@round1 0046  
                readAndStore@round2 0047               __size_of_DS1302_write 0028  
                 readAndStore@round 0049            __size_of_LCD5110_inWrite 001E  
              __size_of_DS1302_init 0055                __size_of_DS1302_read 0036  
                 pinMode@segPortSel 0071  
